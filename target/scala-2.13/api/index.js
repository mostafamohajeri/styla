Index.PACKAGES = {"prolog" : [{"name" : "prolog.Embed", "shortDescription" : "", "object" : "prolog\/Embed$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "prolog\/Embed$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "prolog\/Embed$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "prolog\/Embed$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "prolog\/Embed$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/Embed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/Embed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/Embed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/Embed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/Embed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/Embed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/Embed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/Embed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/Embed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/Embed$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/Embed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/Embed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/Embed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/Embed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/Embed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/Embed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/Embed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/Embed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/Embed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.LogicEngine", "shortDescription" : "", "members_class" : [{"label" : "undefined", "tail" : "", "member" : "prolog.interp.Prog.undefined", "link" : "prolog\/interp\/Prog.html#undefinedextendsAnyRef", "kind" : "trait"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/LogicEngine.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "askAnswer", "tail" : "(): Term", "member" : "prolog.LogicEngine.askAnswer", "link" : "prolog\/LogicEngine.html#askAnswer():prolog.terms.Term", "kind" : "def"}, {"label" : "setGoal", "tail" : "(answer: Term, goal: Term): Unit", "member" : "prolog.LogicEngine.setGoal", "link" : "prolog\/LogicEngine.html#setGoal(answer:prolog.terms.Term,goal:prolog.terms.Term):Unit", "kind" : "def"}, {"label" : "setGoal", "tail" : "(query: Term): Unit", "member" : "prolog.LogicEngine.setGoal", "link" : "prolog\/LogicEngine.html#setGoal(query:prolog.terms.Term):Unit", "kind" : "def"}, {"label" : "setGoal", "tail" : "(query: String): Unit", "member" : "prolog.LogicEngine.setGoal", "link" : "prolog\/LogicEngine.html#setGoal(query:String):Unit", "kind" : "def"}, {"label" : "parser", "tail" : ": TermParser", "member" : "prolog.LogicEngine.parser", "link" : "prolog\/LogicEngine.html#parser:prolog.io.TermParser", "kind" : "val"}, {"member" : "prolog.LogicEngine#<init>", "error" : "unsupported entity"}, {"member" : "prolog.LogicEngine#<init>", "error" : "unsupported entity"}, {"member" : "prolog.LogicEngine#<init>", "error" : "unsupported entity"}, {"label" : "substitutions", "tail" : "(): Map[String, Term]", "member" : "prolog.interp.Prog.substitutions", "link" : "prolog\/LogicEngine.html#substitutions():scala.collection.immutable.Map[String,prolog.terms.Term]", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.interp.Prog.stop", "link" : "prolog\/LogicEngine.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.interp.Prog.getElement", "link" : "prolog\/LogicEngine.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "pushUnfolder", "tail" : "(g0: GOAL): (GOAL, Term)", "member" : "prolog.interp.Prog.pushUnfolder", "link" : "prolog\/LogicEngine.html#pushUnfolder(g0:Prog.this.GOAL):(Prog.this.GOAL,prolog.terms.Term)", "kind" : "def"}, {"label" : "set_query", "tail" : "(query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/LogicEngine.html#set_query(query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "set_query", "tail" : "(answer: Term, query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/LogicEngine.html#set_query(answer:prolog.terms.Term,query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "popped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.popped", "link" : "prolog\/LogicEngine.html#popped:Boolean", "kind" : "var"}, {"label" : "isStopped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.isStopped", "link" : "prolog\/LogicEngine.html#isStopped:Boolean", "kind" : "var"}, {"label" : "copier", "tail" : ": Copier", "member" : "prolog.interp.Prog.copier", "link" : "prolog\/LogicEngine.html#copier:prolog.terms.Copier", "kind" : "val"}, {"label" : "orStack", "tail" : ": ObjectStack[Unfolder]", "member" : "prolog.interp.Prog.orStack", "link" : "prolog\/LogicEngine.html#orStack:prolog.terms.ObjectStack[prolog.interp.Unfolder]", "kind" : "val"}, {"label" : "trail", "tail" : ": Trail", "member" : "prolog.interp.Prog.trail", "link" : "prolog\/LogicEngine.html#trail:prolog.terms.Trail", "kind" : "val"}, {"label" : "GOAL", "tail" : "", "member" : "prolog.interp.Prog.GOAL", "link" : "prolog\/LogicEngine.html#GOAL=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "CLAUSE", "tail" : "", "member" : "prolog.interp.Prog.CLAUSE", "link" : "prolog\/LogicEngine.html#CLAUSE=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "db", "tail" : ": DataBase", "member" : "prolog.interp.Prog.db", "link" : "prolog\/LogicEngine.html#db:prolog.fluents.DataBase", "kind" : "val"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/LogicEngine.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/LogicEngine.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/LogicEngine.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/LogicEngine.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/LogicEngine.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/LogicEngine.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/LogicEngine.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): LogicEngine.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/LogicEngine.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "prolog\/LogicEngine.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/LogicEngine.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/LogicEngine.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/LogicEngine.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/LogicEngine.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/LogicEngine.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/LogicEngine.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/LogicEngine.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/LogicEngine.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/LogicEngine.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/LogicEngine.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/LogicEngine.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/LogicEngine.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/LogicEngine.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/LogicEngine.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/LogicEngine.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/LogicEngine.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/LogicEngine.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/LogicEngine.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/LogicEngine.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/LogicEngine.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/LogicEngine.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/LogicEngine.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/LogicEngine.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/LogicEngine.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/LogicEngine.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/LogicEngine.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/LogicEngine.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/LogicEngine.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/LogicEngine.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/LogicEngine.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/LogicEngine.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/LogicEngine.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/LogicEngine.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/LogicEngine.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/LogicEngine.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/LogicEngine.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/LogicEngine.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/LogicEngine.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/LogicEngine.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/LogicEngine.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/LogicEngine.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/LogicEngine.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/LogicEngine.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/LogicEngine.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/LogicEngine.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/LogicEngine.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/LogicEngine.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/LogicEngine.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/LogicEngine.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/LogicEngine.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/LogicEngine.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/LogicEngine.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/LogicEngine.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/LogicEngine.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/LogicEngine.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/LogicEngine.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/LogicEngine.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/LogicEngine.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/LogicEngine.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/LogicEngine.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/LogicEngine.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/LogicEngine.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/LogicEngine.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/LogicEngine.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/LogicEngine.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/LogicEngine.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/LogicEngine.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/LogicEngine.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/LogicEngine.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/LogicEngine.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/LogicEngine.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/LogicEngine.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/LogicEngine.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/LogicEngine.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/LogicEngine.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/LogicEngine.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/LogicEngine.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/LogicEngine.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/LogicEngine.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/LogicEngine.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/LogicEngine.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/LogicEngine.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/LogicEngine.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/LogicEngine.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/LogicEngine.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/LogicEngine.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/LogicEngine.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/LogicEngine.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/LogicEngine.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/LogicEngine.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/LogicEngine.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/LogicEngine.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/LogicEngine.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/LogicEngine.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/LogicEngine.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/LogicEngine.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/LogicEngine.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/LogicEngine.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/LogicEngine.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/LogicEngine.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/LogicEngine.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/LogicEngine.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/LogicEngine.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/LogicEngine.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/LogicEngine.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/LogicEngine.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/LogicEngine.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/LogicEngine.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/LogicEngine.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/LogicEngine.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/LogicEngine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/LogicEngine.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/LogicEngine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/LogicEngine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/LogicEngine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/LogicEngine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/LogicEngine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/LogicEngine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/LogicEngine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/LogicEngine.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/LogicEngine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/LogicEngine.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/LogicEngine.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/LogicEngine.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/LogicEngine.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/LogicEngine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/LogicEngine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/LogicEngine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/LogicEngine.html", "kind" : "class"}, {"name" : "prolog.Main", "shortDescription" : "", "object" : "prolog\/Main$.html", "members_object" : [{"label" : "toplevel", "tail" : "(topgoals: List[String]): Unit", "member" : "prolog.Main.toplevel", "link" : "prolog\/Main$.html#toplevel(topgoals:List[String]):Unit", "kind" : "def"}, {"label" : "go", "tail" : "(): Unit", "member" : "prolog.Main.go", "link" : "prolog\/Main$.html#go:Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "prolog\/Main$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "prolog\/Main$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "prolog\/Main$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "prolog\/Main$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/Main$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/Main$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/Main$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/Main$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/Main$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/Main$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/Main$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/Main$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/Main$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/Main$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/Main$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/Main$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/Main$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/Main$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/Main$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/Main$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/Main$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/Main$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/Main$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.MiniMain", "shortDescription" : "", "object" : "prolog\/MiniMain$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "prolog.MiniMain.main", "link" : "prolog\/MiniMain$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/MiniMain$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/MiniMain$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/MiniMain$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/MiniMain$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/MiniMain$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/MiniMain$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/MiniMain$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/MiniMain$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/MiniMain$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/MiniMain$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/MiniMain$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/MiniMain$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/MiniMain$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/MiniMain$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/MiniMain$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/MiniMain$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/MiniMain$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/MiniMain$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/MiniMain$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "prolog.terms" : [{"name" : "prolog.terms.Answer", "shortDescription" : "", "members_class" : [{"member" : "prolog.terms.Answer#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/terms\/Answer.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/Answer.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/Answer.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/Answer.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/Answer.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/Answer.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/Answer.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/Answer.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/Answer.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/Answer.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Answer.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Answer.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Answer.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Answer.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Answer.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Answer.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Answer.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Answer.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Answer.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Answer.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Answer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Answer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Answer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Answer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Answer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Answer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Answer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Answer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Answer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Answer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Answer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Answer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Answer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Answer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Answer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Answer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Answer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Answer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Answer.html", "kind" : "class"}, {"name" : "prolog.terms.Clause", "shortDescription" : "", "object" : "prolog\/terms\/Clause$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Clause.toString", "link" : "prolog\/terms\/Clause.html#toString():String", "kind" : "def"}, {"label" : "getBody", "tail" : "(): Term", "member" : "prolog.terms.Clause.getBody", "link" : "prolog\/terms\/Clause.html#getBody:prolog.terms.Term", "kind" : "def"}, {"label" : "getHead", "tail" : "(): Term", "member" : "prolog.terms.Clause.getHead", "link" : "prolog\/terms\/Clause.html#getHead:prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.terms.Clause#<init>", "error" : "unsupported entity"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/Clause.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/Clause.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/Clause.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/Clause.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/Clause.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/Clause.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/Clause.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/Clause.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/Clause.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Clause.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Clause.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Clause.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Clause.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Clause.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Clause.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Clause.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Clause.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Clause.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Clause.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Clause.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Clause.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Clause.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Clause.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Clause.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Clause.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Clause.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Clause.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Clause.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Clause.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Clause.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Clause.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Clause.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Clause.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Clause.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Clause.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Clause.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Clause.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "to_string", "tail" : "(t: Fun): String", "member" : "prolog.terms.Clause.to_string", "link" : "prolog\/terms\/Clause$.html#to_string(t:prolog.terms.Fun):String", "kind" : "def"}, {"label" : "toClauseList", "tail" : "(t: Term): List[Term]", "member" : "prolog.terms.Clause.toClauseList", "link" : "prolog\/terms\/Clause$.html#toClauseList(t:prolog.terms.Term):List[prolog.terms.Term]", "kind" : "final def"}, {"label" : "toList", "tail" : "(c: Clause): List[Term]", "member" : "prolog.terms.Clause.toList", "link" : "prolog\/terms\/Clause$.html#toList(c:prolog.terms.Clause):List[prolog.terms.Term]", "kind" : "final def"}, {"label" : "fromList", "tail" : "(xs: List[Term]): Clause", "member" : "prolog.terms.Clause.fromList", "link" : "prolog\/terms\/Clause$.html#fromList(xs:List[prolog.terms.Term]):prolog.terms.Clause", "kind" : "final def"}, {"label" : "build", "tail" : "(x: Term, y: Term): Clause", "member" : "prolog.terms.Clause.build", "link" : "prolog\/terms\/Clause$.html#build(x:prolog.terms.Term,y:prolog.terms.Term):prolog.terms.Clause", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Clause$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Clause$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Clause$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Clause$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Clause$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Clause$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Clause$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Clause$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Clause$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Clause$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Clause$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Clause$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Clause$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Clause$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Clause$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Clause$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Clause$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Clause$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Clause$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Clause.html", "kind" : "class"}, {"name" : "prolog.terms.Conj", "shortDescription" : "", "object" : "prolog\/terms\/Conj$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Conj.toString", "link" : "prolog\/terms\/Conj.html#toString():String", "kind" : "def"}, {"label" : "getBody", "tail" : "(): Term", "member" : "prolog.terms.Conj.getBody", "link" : "prolog\/terms\/Conj.html#getBody:prolog.terms.Term", "kind" : "def"}, {"label" : "getHead", "tail" : "(): Term", "member" : "prolog.terms.Conj.getHead", "link" : "prolog\/terms\/Conj.html#getHead:prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.terms.Conj#<init>", "error" : "unsupported entity"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/Conj.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/Conj.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/Conj.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/Conj.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/Conj.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/Conj.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/Conj.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/Conj.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/Conj.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Conj.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Conj.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Conj.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Conj.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Conj.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Conj.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Conj.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Conj.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Conj.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Conj.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Conj.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Conj.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Conj.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Conj.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Conj.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Conj.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Conj.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Conj.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Conj.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Conj.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Conj.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Conj.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Conj.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Conj.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Conj.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Conj.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Conj.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Conj.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "to_string", "tail" : "(t: Fun): String", "member" : "prolog.terms.Conj.to_string", "link" : "prolog\/terms\/Conj$.html#to_string(t:prolog.terms.Fun):String", "kind" : "def"}, {"label" : "toList", "tail" : "(t: Term): List[Term]", "member" : "prolog.terms.Conj.toList", "link" : "prolog\/terms\/Conj$.html#toList(t:prolog.terms.Term):List[prolog.terms.Term]", "kind" : "final def"}, {"label" : "fromList", "tail" : "(xs: List[Term]): Term", "member" : "prolog.terms.Conj.fromList", "link" : "prolog\/terms\/Conj$.html#fromList(xs:List[prolog.terms.Term]):prolog.terms.Term", "kind" : "final def"}, {"label" : "build", "tail" : "(x: Term, y: Term): Conj", "member" : "prolog.terms.Conj.build", "link" : "prolog\/terms\/Conj$.html#build(x:prolog.terms.Term,y:prolog.terms.Term):prolog.terms.Conj", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Conj$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Conj$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Conj$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Conj$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Conj$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Conj$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Conj$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Conj$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Conj$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Conj$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Conj$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Conj$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Conj$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Conj$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Conj$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Conj$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Conj$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Conj$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Conj$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Conj.html", "kind" : "class"}, {"name" : "prolog.terms.Cons", "shortDescription" : "", "object" : "prolog\/terms\/Cons$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Cons.toString", "link" : "prolog\/terms\/Cons.html#toString():String", "kind" : "def"}, {"label" : "getBody", "tail" : "(): Term", "member" : "prolog.terms.Cons.getBody", "link" : "prolog\/terms\/Cons.html#getBody:prolog.terms.Term", "kind" : "def"}, {"label" : "getHead", "tail" : "(): Term", "member" : "prolog.terms.Cons.getHead", "link" : "prolog\/terms\/Cons.html#getHead:prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.terms.Cons#<init>", "error" : "unsupported entity"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/Cons.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/Cons.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/Cons.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/Cons.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/Cons.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/Cons.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/Cons.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/Cons.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/Cons.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Cons.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Cons.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Cons.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Cons.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Cons.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Cons.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Cons.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Cons.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Cons.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Cons.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Cons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Cons.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Cons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Cons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Cons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Cons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Cons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Cons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Cons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Cons.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Cons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Cons.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Cons.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Cons.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Cons.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Cons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Cons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Cons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "to_string", "tail" : "(f: (Term) => String, c: Cons): String", "member" : "prolog.terms.Cons.to_string", "link" : "prolog\/terms\/Cons$.html#to_string(f:prolog.terms.Term=>String,c:prolog.terms.Cons):String", "kind" : "def"}, {"label" : "toList", "tail" : "(t: Term): List[Term]", "member" : "prolog.terms.Cons.toList", "link" : "prolog\/terms\/Cons$.html#toList(t:prolog.terms.Term):List[prolog.terms.Term]", "kind" : "final def"}, {"label" : "fromIterator", "tail" : "(xs: Iterator[Term]): Term", "member" : "prolog.terms.Cons.fromIterator", "link" : "prolog\/terms\/Cons$.html#fromIterator(xs:Iterator[prolog.terms.Term]):prolog.terms.Term", "kind" : "final def"}, {"label" : "fromList", "tail" : "(xs: List[Term]): Term", "member" : "prolog.terms.Cons.fromList", "link" : "prolog\/terms\/Cons$.html#fromList(xs:List[prolog.terms.Term]):prolog.terms.Term", "kind" : "final def"}, {"label" : "build", "tail" : "(x: Term, y: Term): Cons", "member" : "prolog.terms.Cons.build", "link" : "prolog\/terms\/Cons$.html#build(x:prolog.terms.Term,y:prolog.terms.Term):prolog.terms.Cons", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Cons$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Cons$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Cons$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Cons$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Cons$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Cons$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Cons$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Cons$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Cons$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Cons$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Cons$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Cons$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Cons$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Cons$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Cons$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Cons$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Cons$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Cons$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Cons$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Cons.html", "kind" : "class"}, {"name" : "prolog.terms.Const", "shortDescription" : "", "object" : "prolog\/terms\/Const$.html", "members_class" : [{"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Const.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Const.len", "link" : "prolog\/terms\/Const.html#len:Int", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Const.html#name:String", "kind" : "def"}, {"member" : "prolog.terms.Const#<init>", "error" : "unsupported entity"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Const.html#sym:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/Const.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Const.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Const.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Const.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Const.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Const.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Const.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Const.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Const.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Const.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Const.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Const.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Const.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Const.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Const.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Const.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Const.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Const.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Const.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Const.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Const.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Const.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Const.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Const.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Const.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Const.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Const.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Const.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Const.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "the", "tail" : "(X: Term): Const", "member" : "prolog.terms.Const.the", "link" : "prolog\/terms\/Const$.html#the(X:prolog.terms.Term):prolog.terms.Const", "kind" : "final def"}, {"label" : "cmd", "tail" : ": Const", "member" : "prolog.terms.Const.cmd", "link" : "prolog\/terms\/Const$.html#cmd:prolog.terms.Const", "kind" : "final val"}, {"label" : "nil", "tail" : ": Const", "member" : "prolog.terms.Const.nil", "link" : "prolog\/terms\/Const$.html#nil:prolog.terms.Const", "kind" : "final val"}, {"label" : "yes", "tail" : ": Const", "member" : "prolog.terms.Const.yes", "link" : "prolog\/terms\/Const$.html#yes:prolog.terms.Const", "kind" : "final val"}, {"label" : "no", "tail" : ": Const", "member" : "prolog.terms.Const.no", "link" : "prolog\/terms\/Const$.html#no:prolog.terms.Const", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Const$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Const$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Const$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Const$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Const$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Const$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Const$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Const$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Const$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Const$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Const$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Const$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Const$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Const$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Const$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Const$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Const$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Const$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Const$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Const.html", "kind" : "class"}, {"name" : "prolog.terms.ConstBuiltin", "shortDescription" : "", "members_class" : [{"member" : "prolog.terms.ConstBuiltin#<init>", "error" : "unsupported entity"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/ConstBuiltin.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Const.len", "link" : "prolog\/terms\/ConstBuiltin.html#len:Int", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/ConstBuiltin.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/ConstBuiltin.html#sym:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/ConstBuiltin.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/ConstBuiltin.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/ConstBuiltin.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/ConstBuiltin.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/ConstBuiltin.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/ConstBuiltin.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/ConstBuiltin.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/ConstBuiltin.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/ConstBuiltin.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/ConstBuiltin.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/ConstBuiltin.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/ConstBuiltin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/ConstBuiltin.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/ConstBuiltin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/ConstBuiltin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/ConstBuiltin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/ConstBuiltin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/ConstBuiltin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/ConstBuiltin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/ConstBuiltin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/ConstBuiltin.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/ConstBuiltin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/ConstBuiltin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/ConstBuiltin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/ConstBuiltin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/ConstBuiltin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/ConstBuiltin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/ConstBuiltin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/ConstBuiltin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/ConstBuiltin.html", "kind" : "class"}, {"name" : "prolog.terms.Copier", "shortDescription" : "", "members_class" : [{"label" : "GenKeySet", "tail" : "", "member" : "scala.collection.MapOps.GenKeySet", "link" : "prolog\/terms\/Copier.html#GenKeySetextendsAnyRef", "kind" : "trait"}, {"label" : "KeySet", "tail" : "", "member" : "scala.collection.MapOps.KeySet", "link" : "prolog\/terms\/Copier.html#KeySetextendsAbstractSet[K]withMapOps.this.GenKeySetwithDefaultSerializable", "kind" : "class"}, {"member" : "prolog.terms.Copier#<init>", "error" : "unsupported entity"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.mutable.HashMap.hashCode", "link" : "prolog\/terms\/Copier.html#hashCode():Int", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.mutable.HashMap.stringPrefix", "link" : "prolog\/terms\/Copier.html#stringPrefix:String", "kind" : "def"}, {"label" : "mapFactory", "tail" : "(): MapFactory[HashMap]", "member" : "scala.collection.mutable.HashMap.mapFactory", "link" : "prolog\/terms\/Copier.html#mapFactory:scala.collection.MapFactory[scala.collection.mutable.HashMap]", "kind" : "def"}, {"label" : "filterInPlace", "tail" : "(p: (Var, Var) => Boolean): Copier.this.type", "member" : "scala.collection.mutable.HashMap.filterInPlace", "link" : "prolog\/terms\/Copier.html#filterInPlace(p:(K,V)=>Boolean):HashMap.this.type", "kind" : "def"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scala.collection.mutable.HashMap.writeReplace", "link" : "prolog\/terms\/Copier.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((Var, Var)) => U): Unit", "member" : "scala.collection.mutable.HashMap.foreach", "link" : "prolog\/terms\/Copier.html#foreach[U](f:((K,V))=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.HashMap.isEmpty", "link" : "prolog\/terms\/Copier.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.HashMap.knownSize", "link" : "prolog\/terms\/Copier.html#knownSize:Int", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(elem: Var): Copier.this.type", "member" : "scala.collection.mutable.HashMap.subtractOne", "link" : "prolog\/terms\/Copier.html#subtractOne(elem:K):HashMap.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(elem: (Var, Var)): Copier.this.type", "member" : "scala.collection.mutable.HashMap.addOne", "link" : "prolog\/terms\/Copier.html#addOne(elem:(K,V)):HashMap.this.type", "kind" : "def"}, {"label" : "update", "tail" : "(key: Var, value: Var): Unit", "member" : "scala.collection.mutable.HashMap.update", "link" : "prolog\/terms\/Copier.html#update(key:K,value:V):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Var): Option[Var]", "member" : "scala.collection.mutable.HashMap.remove", "link" : "prolog\/terms\/Copier.html#remove(key:K):Option[V]", "kind" : "def"}, {"label" : "put", "tail" : "(key: Var, value: Var): Option[Var]", "member" : "scala.collection.mutable.HashMap.put", "link" : "prolog\/terms\/Copier.html#put(key:K,value:V):Option[V]", "kind" : "def"}, {"label" : "getOrElseUpdate", "tail" : "(key: Var, defaultValue: => Var): Var", "member" : "scala.collection.mutable.HashMap.getOrElseUpdate", "link" : "prolog\/terms\/Copier.html#getOrElseUpdate(key:K,defaultValue:=>V):V", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: Var, default: => V1): V1", "member" : "scala.collection.mutable.HashMap.getOrElse", "link" : "prolog\/terms\/Copier.html#getOrElse[V1>:V](key:K,default:=>V1):V1", "kind" : "def"}, {"label" : "apply", "tail" : "(key: Var): Var", "member" : "scala.collection.mutable.HashMap.apply", "link" : "prolog\/terms\/Copier.html#apply(key:K):V", "kind" : "def"}, {"label" : "get", "tail" : "(key: Var): Option[Var]", "member" : "scala.collection.mutable.HashMap.get", "link" : "prolog\/terms\/Copier.html#get(key:K):Option[V]", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.HashMap.clear", "link" : "prolog\/terms\/Copier.html#clear():Unit", "kind" : "def"}, {"label" : "valueStepper", "tail" : "(shape: StepperShape[Var, S]): S with EfficientSplit", "member" : "scala.collection.mutable.HashMap.valueStepper", "link" : "prolog\/terms\/Copier.html#valueStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[V,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "keyStepper", "tail" : "(shape: StepperShape[Var, S]): S with EfficientSplit", "member" : "scala.collection.mutable.HashMap.keyStepper", "link" : "prolog\/terms\/Copier.html#keyStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[K,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[(Var, Var), S]): S with EfficientSplit", "member" : "scala.collection.mutable.HashMap.stepper", "link" : "prolog\/terms\/Copier.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[(K,V),S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[Var]", "member" : "scala.collection.mutable.HashMap.valuesIterator", "link" : "prolog\/terms\/Copier.html#valuesIterator:Iterator[V]", "kind" : "def"}, {"label" : "keysIterator", "tail" : "(): Iterator[Var]", "member" : "scala.collection.mutable.HashMap.keysIterator", "link" : "prolog\/terms\/Copier.html#keysIterator:Iterator[K]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(Var, Var)]", "member" : "scala.collection.mutable.HashMap.iterator", "link" : "prolog\/terms\/Copier.html#iterator:Iterator[(K,V)]", "kind" : "def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[Var]): Copier.this.type", "member" : "scala.collection.mutable.HashMap.subtractAll", "link" : "prolog\/terms\/Copier.html#subtractAll(xs:scala.collection.IterableOnce[K]):HashMap.this.type", "kind" : "def"}, {"label" : "updateWith", "tail" : "(key: Var)(remappingFunction: (Option[Var]) => Option[Var]): Option[Var]", "member" : "scala.collection.mutable.HashMap.updateWith", "link" : "prolog\/terms\/Copier.html#updateWith(key:K)(remappingFunction:Option[V]=>Option[V]):Option[V]", "kind" : "def"}, {"label" : "addAll", "tail" : "(xs: IterableOnce[(Var, Var)]): Copier.this.type", "member" : "scala.collection.mutable.HashMap.addAll", "link" : "prolog\/terms\/Copier.html#addAll(xs:scala.collection.IterableOnce[(K,V)]):HashMap.this.type", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.HashMap.sizeHint", "link" : "prolog\/terms\/Copier.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Var): Boolean", "member" : "scala.collection.mutable.HashMap.contains", "link" : "prolog\/terms\/Copier.html#contains(key:K):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.mutable.HashMap.size", "link" : "prolog\/terms\/Copier.html#size:Int", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: (Var, V1), elem2: (Var, V1), elems: (Var, V1)*): HashMap[Var, V1]", "member" : "scala.collection.StrictOptimizedMapOps.+", "link" : "prolog\/terms\/Copier.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):CC[K,V1]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(Var, Var), (K2, V2)]): HashMap[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.collect", "link" : "prolog\/terms\/Copier.html#collect[K2,V2](pf:PartialFunction[(K,V),(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[(Var, V2)]): HashMap[Var, V2]", "member" : "scala.collection.StrictOptimizedMapOps.concat", "link" : "prolog\/terms\/Copier.html#concat[V2>:V](suffix:scala.collection.IterableOnce[(K,V2)]):CC[K,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((Var, Var)) => IterableOnce[(K2, V2)]): HashMap[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.flatMap", "link" : "prolog\/terms\/Copier.html#flatMap[K2,V2](f:((K,V))=>scala.collection.IterableOnce[(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((Var, Var)) => (K2, V2)): HashMap[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.map", "link" : "prolog\/terms\/Copier.html#map[K2,V2](f:((K,V))=>(K2,V2)):CC[K2,V2]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): HashMap[Var, Var]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "prolog\/terms\/Copier.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): HashMap[Var, Var]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "prolog\/terms\/Copier.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: ((Var, Var)) => U): HashMap[Var, Var]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "prolog\/terms\/Copier.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: ((Var, Var)) => Either[A1, A2]): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "prolog\/terms\/Copier.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: ((Var, Var)) => Boolean, isFlipped: Boolean): HashMap[Var, Var]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "prolog\/terms\/Copier.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: ((Var, Var)) => Boolean): HashMap[Var, Var]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "prolog\/terms\/Copier.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: ((Var, Var)) => Boolean): HashMap[Var, Var]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "prolog\/terms\/Copier.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (Var, Var)) => B): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "prolog\/terms\/Copier.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterable[((Var, Var), Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "prolog\/terms\/Copier.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[((Var, Var), B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "prolog\/terms\/Copier.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterable[((Var, Var), B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "prolog\/terms\/Copier.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: ((Var, Var)) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "prolog\/terms\/Copier.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: ((Var, Var)) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "prolog\/terms\/Copier.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[(Var, Var), B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "prolog\/terms\/Copier.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(Var, Var), B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "prolog\/terms\/Copier.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "prolog\/terms\/Copier.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: ((Var, Var)) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "prolog\/terms\/Copier.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: ((Var, Var)) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "prolog\/terms\/Copier.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: ((Var, Var)) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "prolog\/terms\/Copier.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: ((Var, Var)) => B): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "prolog\/terms\/Copier.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((Var, Var)) => (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "prolog\/terms\/Copier.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((Var, Var)) => (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "prolog\/terms\/Copier.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((Var, Var)) => Boolean): (HashMap[Var, Var], HashMap[Var, Var])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "prolog\/terms\/Copier.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((Var, Var)) => Boolean): (HashMap[Var, Var], HashMap[Var, Var])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "prolog\/terms\/Copier.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withDefaultValue", "tail" : "(d: Var): Map[Var, Var]", "member" : "scala.collection.mutable.Map.withDefaultValue", "link" : "prolog\/terms\/Copier.html#withDefaultValue(d:V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (Var) => Var): Map[Var, Var]", "member" : "scala.collection.mutable.Map.withDefault", "link" : "prolog\/terms\/Copier.html#withDefault(d:K=>V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "updated", "tail" : "(key: Var, value: V1): HashMap[Var, V1]", "member" : "scala.collection.mutable.MapOps.updated", "link" : "prolog\/terms\/Copier.html#updated[V1>:V](key:K,value:V1):CC[K,V1]", "kind" : "def"}, {"label" : "mapValuesInPlace", "tail" : "(f: (Var, Var) => Var): Copier.this.type", "member" : "scala.collection.mutable.MapOps.mapValuesInPlace", "link" : "prolog\/terms\/Copier.html#mapValuesInPlace(f:(K,V)=>V):MapOps.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Var, Var) => Var): Copier.this.type", "member" : "scala.collection.mutable.MapOps.transform", "link" : "prolog\/terms\/Copier.html#transform(f:(K,V)=>V):MapOps.this.type", "kind" : "final def"}, {"label" : "retain", "tail" : "(p: (Var, Var) => Boolean): Copier.this.type", "member" : "scala.collection.mutable.MapOps.retain", "link" : "prolog\/terms\/Copier.html#retain(p:(K,V)=>Boolean):MapOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): HashMap[Var, Var]", "member" : "scala.collection.mutable.MapOps.clone", "link" : "prolog\/terms\/Copier.html#clone():C", "kind" : "def"}, {"label" : "-", "tail" : "(key1: Var, key2: Var, keys: Var*): HashMap[Var, Var]", "member" : "scala.collection.mutable.MapOps.-", "link" : "prolog\/terms\/Copier.html#-(key1:K,key2:K,keys:K*):C", "kind" : "final def"}, {"label" : "-", "tail" : "(key: Var): HashMap[Var, Var]", "member" : "scala.collection.mutable.MapOps.-", "link" : "prolog\/terms\/Copier.html#-(key:K):C", "kind" : "final def"}, {"label" : "result", "tail" : "(): HashMap[Var, Var]", "member" : "scala.collection.mutable.MapOps.result", "link" : "prolog\/terms\/Copier.html#result():C", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[Var]): Copier.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "prolog\/terms\/Copier.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "-=", "tail" : "(elem1: Var, elem2: Var, elems: Var*): Copier.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/terms\/Copier.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: Var): Copier.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/terms\/Copier.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "mapResult", "tail" : "(f: (HashMap[Var, Var]) => NewTo): Builder[(Var, Var), NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "prolog\/terms\/Copier.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[A,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: Iterable[_]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "prolog\/terms\/Copier.html#sizeHintBounded(size:Int,boundingColl:Iterable[_]):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(coll: IterableOnce[_], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "prolog\/terms\/Copier.html#sizeHint(coll:scala.collection.IterableOnce[_],delta:Int):Unit", "kind" : "final def"}, {"label" : "++=", "tail" : "(xs: IterableOnce[(Var, Var)]): Copier.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "prolog\/terms\/Copier.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem1: (Var, Var), elem2: (Var, Var), elems: (Var, Var)*): Copier.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/terms\/Copier.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: (Var, Var)): Copier.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/terms\/Copier.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.mutable.Iterable.iterableFactory", "link" : "prolog\/terms\/Copier.html#iterableFactory:scala.collection.IterableFactory[scala.collection.mutable.Iterable]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Map.toString", "link" : "prolog\/terms\/Copier.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Map.equals", "link" : "prolog\/terms\/Copier.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Map.canEqual", "link" : "prolog\/terms\/Copier.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((Var, Var)) => Boolean): WithFilter[Var, Var, [x]Iterable[x], [x, y]HashMap[x, y]]", "member" : "scala.collection.MapFactoryDefaults.withFilter", "link" : "prolog\/terms\/Copier.html#withFilter(p:((K,V))=>Boolean):scala.collection.MapOps.WithFilter[K,V,WithFilterCC,CC]", "kind" : "def"}, {"label" : "empty", "tail" : "(): HashMap[Var, Var]", "member" : "scala.collection.MapFactoryDefaults.empty", "link" : "prolog\/terms\/Copier.html#empty:CC[K,V@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[(Var, Var), HashMap[Var, Var]]", "member" : "scala.collection.MapFactoryDefaults.newSpecificBuilder", "link" : "prolog\/terms\/Copier.html#newSpecificBuilder:scala.collection.mutable.Builder[(K,V@scala.annotation.unchecked.uncheckedVariance),CC[K,V@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[(Var, Var)]): HashMap[Var, Var]", "member" : "scala.collection.MapFactoryDefaults.fromSpecific", "link" : "prolog\/terms\/Copier.html#fromSpecific(coll:scala.collection.IterableOnce[(K,V@scala.annotation.unchecked.uncheckedVariance)]):CC[K,V@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[(Var, V1)]): HashMap[Var, V1]", "member" : "scala.collection.MapOps.++:", "link" : "prolog\/terms\/Copier.html#++:[V1>:V](that:scala.collection.IterableOnce[(K,V1)]):CC[K,V1]", "kind" : "def"}, {"label" : "--", "tail" : "(keys: IterableOnce[Var]): HashMap[Var, Var]", "member" : "scala.collection.MapOps.--", "link" : "prolog\/terms\/Copier.html#--(keys:scala.collection.IterableOnce[K]):C", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (Var, V1)): HashMap[Var, V1]", "member" : "scala.collection.MapOps.+", "link" : "prolog\/terms\/Copier.html#+[V1>:V](kv:(K,V1)):CC[K,V1]", "kind" : "def"}, {"label" : "addString", "tail" : "(sb: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapOps.addString", "link" : "prolog\/terms\/Copier.html#addString(sb:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "++", "tail" : "(xs: IterableOnce[(Var, V2)]): HashMap[Var, V2]", "member" : "scala.collection.MapOps.++", "link" : "prolog\/terms\/Copier.html#++[V2>:V](xs:scala.collection.IterableOnce[(K,V2)]):CC[K,V2]", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: Var): Boolean", "member" : "scala.collection.MapOps.isDefinedAt", "link" : "prolog\/terms\/Copier.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "default", "tail" : "(key: Var): Var", "member" : "scala.collection.MapOps.default", "link" : "prolog\/terms\/Copier.html#default(key:K):V", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (Var) => W): MapView[Var, W]", "member" : "scala.collection.MapOps.mapValues", "link" : "prolog\/terms\/Copier.html#mapValues[W](f:V=>W):scala.collection.MapView[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (Var) => Boolean): MapView[Var, Var]", "member" : "scala.collection.MapOps.filterKeys", "link" : "prolog\/terms\/Copier.html#filterKeys(p:K=>Boolean):scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "foreachEntry", "tail" : "(f: (Var, Var) => U): Unit", "member" : "scala.collection.MapOps.foreachEntry", "link" : "prolog\/terms\/Copier.html#foreachEntry[U](f:(K,V)=>U):Unit", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[Var]", "member" : "scala.collection.MapOps.values", "link" : "prolog\/terms\/Copier.html#values:Iterable[V]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[Var]", "member" : "scala.collection.MapOps.keys", "link" : "prolog\/terms\/Copier.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[Var]", "member" : "scala.collection.MapOps.keySet", "link" : "prolog\/terms\/Copier.html#keySet:scala.collection.Set[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) => V1): V1", "member" : "scala.collection.MapOps.applyOrElse", "link" : "prolog\/terms\/Copier.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "mapFromIterable", "tail" : "(it: Iterable[(K2, V2)]): HashMap[K2, V2]", "member" : "scala.collection.MapOps.mapFromIterable", "link" : "prolog\/terms\/Copier.html#mapFromIterable[K2,V2](it:Iterable[(K2,V2)]):CC[K2,V2]", "kind" : "final def"}, {"label" : "view", "tail" : "(): MapView[Var, Var]", "member" : "scala.collection.MapOps.view", "link" : "prolog\/terms\/Copier.html#view:scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Var) => U): (Var) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "prolog\/terms\/Copier.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Var) => Option[Var]", "member" : "scala.PartialFunction.lift", "link" : "prolog\/terms\/Copier.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Var]): PartialFunction[R, Var]", "member" : "scala.PartialFunction.compose", "link" : "prolog\/terms\/Copier.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Var, C]): PartialFunction[Var, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/terms\/Copier.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Var) => C): PartialFunction[Var, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/terms\/Copier.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "prolog\/terms\/Copier.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Var, Var]", "member" : "scala.PartialFunction.elementWise", "link" : "prolog\/terms\/Copier.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Var): Option[Var]", "member" : "scala.PartialFunction.unapply", "link" : "prolog\/terms\/Copier.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Var): (A) => Var", "member" : "scala.Function1.compose", "link" : "prolog\/terms\/Copier.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[(Var, Var), B, Copier.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "prolog\/terms\/Copier.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "prolog\/terms\/Copier.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Copier.this.type", "member" : "scala.collection.Iterable.seq", "link" : "prolog\/terms\/Copier.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Copier.this.type", "member" : "scala.collection.Iterable.coll", "link" : "prolog\/terms\/Copier.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Copier.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "prolog\/terms\/Copier.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "prolog\/terms\/Copier.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[HashMap[Var, Var]]", "member" : "scala.collection.IterableOps.inits", "link" : "prolog\/terms\/Copier.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[HashMap[Var, Var]]", "member" : "scala.collection.IterableOps.tails", "link" : "prolog\/terms\/Copier.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "prolog\/terms\/Copier.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "prolog\/terms\/Copier.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "prolog\/terms\/Copier.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((Var, Var), B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "prolog\/terms\/Copier.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "prolog\/terms\/Copier.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: ((Var, Var)) => K)(f: ((Var, Var)) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "prolog\/terms\/Copier.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: ((Var, Var)) => K)(f: ((Var, Var)) => B): Map[K, Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "prolog\/terms\/Copier.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((Var, Var)) => K): Map[K, HashMap[Var, Var]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "prolog\/terms\/Copier.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.slice", "link" : "prolog\/terms\/Copier.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.init", "link" : "prolog\/terms\/Copier.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.tail", "link" : "prolog\/terms\/Copier.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[HashMap[Var, Var]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/terms\/Copier.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[HashMap[Var, Var]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/terms\/Copier.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[HashMap[Var, Var]]", "member" : "scala.collection.IterableOps.grouped", "link" : "prolog\/terms\/Copier.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((Var, Var)) => Boolean): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "prolog\/terms\/Copier.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.drop", "link" : "prolog\/terms\/Copier.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((Var, Var)) => Boolean): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "prolog\/terms\/Copier.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.take", "link" : "prolog\/terms\/Copier.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (HashMap[Var, Var], HashMap[Var, Var])", "member" : "scala.collection.IterableOps.splitAt", "link" : "prolog\/terms\/Copier.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: ((Var, Var)) => Iterable[B]): Iterable[Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "prolog\/terms\/Copier.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[(Var, Var)]", "member" : "scala.collection.IterableOps.view", "link" : "prolog\/terms\/Copier.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "prolog\/terms\/Copier.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "prolog\/terms\/Copier.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "prolog\/terms\/Copier.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(Var, Var)]", "member" : "scala.collection.IterableOps.lastOption", "link" : "prolog\/terms\/Copier.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): (Var, Var)", "member" : "scala.collection.IterableOps.last", "link" : "prolog\/terms\/Copier.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(Var, Var)]", "member" : "scala.collection.IterableOps.headOption", "link" : "prolog\/terms\/Copier.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): (Var, Var)", "member" : "scala.collection.IterableOps.head", "link" : "prolog\/terms\/Copier.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Iterable[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "prolog\/terms\/Copier.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): HashMap[Var, Var]", "member" : "scala.collection.IterableOps.repr", "link" : "prolog\/terms\/Copier.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "prolog\/terms\/Copier.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(Var, Var)]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "prolog\/terms\/Copier.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/terms\/Copier.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/terms\/Copier.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/terms\/Copier.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/terms\/Copier.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/terms\/Copier.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/terms\/Copier.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/terms\/Copier.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(Var, Var), (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/terms\/Copier.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/terms\/Copier.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/terms\/Copier.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/terms\/Copier.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[(Var, Var), C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/terms\/Copier.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/Copier.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/Copier.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/Copier.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/Copier.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/Copier.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: ((Var, Var), B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/terms\/Copier.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, (Var, Var)) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/terms\/Copier.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(Var, Var), B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/terms\/Copier.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: ((Var, Var)) => B)(cmp: Ordering[B]): Option[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/terms\/Copier.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((Var, Var)) => B)(cmp: Ordering[B]): (Var, Var)", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/terms\/Copier.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: ((Var, Var)) => B)(cmp: Ordering[B]): Option[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/terms\/Copier.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((Var, Var)) => B)(cmp: Ordering[B]): (Var, Var)", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/terms\/Copier.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/terms\/Copier.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): (Var, Var)", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/terms\/Copier.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/terms\/Copier.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): (Var, Var)", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/terms\/Copier.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/terms\/Copier.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/terms\/Copier.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/Copier.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/Copier.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/Copier.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/terms\/Copier.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/terms\/Copier.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((Var, Var), B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/terms\/Copier.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (Var, Var)) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/terms\/Copier.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((Var, Var), B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/terms\/Copier.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (Var, Var)) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/terms\/Copier.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/terms\/Copier.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/terms\/Copier.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/terms\/Copier.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((Var, Var), B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/terms\/Copier.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (Var, Var)) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/terms\/Copier.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((Var, Var), B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/terms\/Copier.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (Var, Var)) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/terms\/Copier.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((Var, Var)) => Boolean): Option[(Var, Var)]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/terms\/Copier.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((Var, Var)) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/terms\/Copier.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((Var, Var)) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/terms\/Copier.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((Var, Var)) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/terms\/Copier.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "prolog\/terms\/Copier.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Copier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Copier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Copier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Copier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Copier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Copier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Copier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Copier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Copier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Copier.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Copier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Copier.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Copier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Copier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Copier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Copier.html", "kind" : "class"}, {"name" : "prolog.terms.Disj", "shortDescription" : "", "object" : "prolog\/terms\/Disj$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Disj.toString", "link" : "prolog\/terms\/Disj.html#toString():String", "kind" : "def"}, {"label" : "getBody", "tail" : "(): Term", "member" : "prolog.terms.Disj.getBody", "link" : "prolog\/terms\/Disj.html#getBody:prolog.terms.Term", "kind" : "def"}, {"label" : "getHead", "tail" : "(): Term", "member" : "prolog.terms.Disj.getHead", "link" : "prolog\/terms\/Disj.html#getHead:prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.terms.Disj#<init>", "error" : "unsupported entity"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/Disj.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/Disj.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/Disj.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/Disj.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/Disj.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/Disj.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/Disj.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/Disj.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/Disj.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Disj.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Disj.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Disj.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Disj.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Disj.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Disj.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Disj.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Disj.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Disj.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Disj.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Disj.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Disj.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Disj.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Disj.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Disj.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Disj.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Disj.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Disj.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Disj.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Disj.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Disj.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Disj.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Disj.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Disj.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Disj.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Disj.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Disj.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Disj.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "to_string", "tail" : "(t: Fun): String", "member" : "prolog.terms.Disj.to_string", "link" : "prolog\/terms\/Disj$.html#to_string(t:prolog.terms.Fun):String", "kind" : "def"}, {"label" : "toList", "tail" : "(t: Term): List[Term]", "member" : "prolog.terms.Disj.toList", "link" : "prolog\/terms\/Disj$.html#toList(t:prolog.terms.Term):List[prolog.terms.Term]", "kind" : "final def"}, {"label" : "fromList", "tail" : "(xs: List[Term]): Term", "member" : "prolog.terms.Disj.fromList", "link" : "prolog\/terms\/Disj$.html#fromList(xs:List[prolog.terms.Term]):prolog.terms.Term", "kind" : "final def"}, {"label" : "build", "tail" : "(x: Term, y: Term): Disj", "member" : "prolog.terms.Disj.build", "link" : "prolog\/terms\/Disj$.html#build(x:prolog.terms.Term,y:prolog.terms.Term):prolog.terms.Disj", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Disj$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Disj$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Disj$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Disj$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Disj$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Disj$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Disj$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Disj$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Disj$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Disj$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Disj$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Disj$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Disj$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Disj$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Disj$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Disj$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Disj$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Disj$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Disj$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Disj.html", "kind" : "class"}, {"name" : "prolog.terms.EVar", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.EVar.toString", "link" : "prolog\/terms\/EVar.html#toString():String", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.EVar.tcopy", "link" : "prolog\/terms\/EVar.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.terms.EVar#<init>", "error" : "unsupported entity"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Var.vcollect", "link" : "prolog\/terms\/EVar.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "undo", "tail" : "(): Unit", "member" : "prolog.terms.Var.undo", "link" : "prolog\/terms\/EVar.html#undo():Unit", "kind" : "final def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Var.unify", "link" : "prolog\/terms\/EVar.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "set_to", "tail" : "(t: Term): Unit", "member" : "prolog.terms.Var.set_to", "link" : "prolog\/terms\/EVar.html#set_to(t:prolog.terms.Term):Unit", "kind" : "final def"}, {"label" : "bind_to", "tail" : "(x: Term, trail: Trail): Boolean", "member" : "prolog.terms.Var.bind_to", "link" : "prolog\/terms\/EVar.html#bind_to(x:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Var.ref", "link" : "prolog\/terms\/EVar.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "unbound", "tail" : "(): Boolean", "member" : "prolog.terms.Var.unbound", "link" : "prolog\/terms\/EVar.html#unbound:Boolean", "kind" : "final def"}, {"label" : "v_name", "tail" : "(): String", "member" : "prolog.terms.Var.v_name", "link" : "prolog\/terms\/EVar.html#v_name:String", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/EVar.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/EVar.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/EVar.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/EVar.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/EVar.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/EVar.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/EVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/EVar.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/EVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/EVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/EVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/EVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/EVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/EVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/EVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/EVar.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/EVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/EVar.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/EVar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/EVar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/EVar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/EVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/EVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/EVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/EVar.html", "kind" : "class"}, {"name" : "prolog.terms.Fluent", "trait" : "prolog\/terms\/Fluent.html", "kind" : "trait", "members_trait" : [{"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/terms\/Fluent.html#name:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/Fluent.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Fluent.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/terms\/Fluent.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Fluent.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Fluent.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Fluent.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Fluent.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Fluent.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Fluent.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Fluent.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Fluent.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Fluent.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Fluent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Fluent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Fluent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Fluent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Fluent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Fluent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Fluent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Fluent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Fluent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Fluent.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Fluent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Fluent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Fluent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Fluent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Fluent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Fluent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Fluent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Fluent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.terms.Fluent.stop", "link" : "prolog\/terms\/Fluent.html#stop():Unit", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "prolog.terms.Fun", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/terms\/Fun.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/Fun.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/Fun.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/Fun.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/Fun.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/Fun.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/Fun.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/Fun.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/Fun.html#len:Int", "kind" : "def"}, {"member" : "prolog.terms.Fun#<init>", "error" : "unsupported entity"}, {"member" : "prolog.terms.Fun#<init>", "error" : "unsupported entity"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/Fun.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/Fun.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/Fun.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/Fun.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Fun.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Fun.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Fun.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Fun.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Fun.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Fun.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Fun.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Fun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Fun.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Fun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Fun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Fun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Fun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Fun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Fun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Fun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Fun.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Fun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Fun.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Fun.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Fun.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Fun.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Fun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Fun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Fun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Fun.html", "kind" : "class"}, {"name" : "prolog.terms.FunBuiltin", "shortDescription" : "", "members_class" : [{"member" : "prolog.terms.FunBuiltin#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/terms\/FunBuiltin.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/terms\/FunBuiltin.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/terms\/FunBuiltin.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/terms\/FunBuiltin.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/terms\/FunBuiltin.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/terms\/FunBuiltin.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/terms\/FunBuiltin.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/terms\/FunBuiltin.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/terms\/FunBuiltin.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/terms\/FunBuiltin.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/terms\/FunBuiltin.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/terms\/FunBuiltin.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/terms\/FunBuiltin.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/terms\/FunBuiltin.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/FunBuiltin.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/FunBuiltin.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/FunBuiltin.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/FunBuiltin.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/FunBuiltin.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/FunBuiltin.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/FunBuiltin.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/FunBuiltin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/FunBuiltin.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/FunBuiltin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/FunBuiltin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/FunBuiltin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/FunBuiltin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/FunBuiltin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/FunBuiltin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/FunBuiltin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/FunBuiltin.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/FunBuiltin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/FunBuiltin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/FunBuiltin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/FunBuiltin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/FunBuiltin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/FunBuiltin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/FunBuiltin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/FunBuiltin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/FunBuiltin.html", "kind" : "class"}, {"name" : "prolog.terms.Nonvar", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/Nonvar.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Nonvar.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/terms\/Nonvar.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"member" : "prolog.terms.Nonvar#<init>", "error" : "unsupported entity"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Nonvar.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Nonvar.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Nonvar.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Nonvar.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Nonvar.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Nonvar.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Nonvar.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Nonvar.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Nonvar.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Nonvar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Nonvar.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Nonvar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Nonvar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Nonvar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Nonvar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Nonvar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Nonvar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Nonvar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Nonvar.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Nonvar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Nonvar.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Nonvar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Nonvar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Nonvar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Nonvar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Nonvar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Nonvar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Nonvar.name", "link" : "prolog\/terms\/Nonvar.html#name:String", "kind" : "abstract def"}], "class" : "prolog\/terms\/Nonvar.html", "kind" : "class"}, {"name" : "prolog.terms.Num", "shortDescription" : "", "members_class" : [{"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Num.bind_to", "link" : "prolog\/terms\/Num.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Num.toString", "link" : "prolog\/terms\/Num.html#toString():String", "kind" : "def"}, {"member" : "prolog.terms.Num#<init>", "error" : "unsupported entity"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Num.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Num.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Num.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Num.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Num.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Num.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Num.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Num.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Num.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Num.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Num.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Num.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Num.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Num.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Num.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Num.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Num.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Num.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Num.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Num.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Num.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Num.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Num.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Num.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Num.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Num.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Num.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Num.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getValue", "tail" : "(): BigDecimal", "member" : "prolog.terms.Num.getValue", "link" : "prolog\/terms\/Num.html#getValue:BigDecimal", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Nonvar.name", "link" : "prolog\/terms\/Num.html#name:String", "kind" : "abstract def"}], "class" : "prolog\/terms\/Num.html", "kind" : "class"}, {"name" : "prolog.terms.ObjectStack", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.ObjectStack.toString", "link" : "prolog\/terms\/ObjectStack.html#toString():String", "kind" : "def"}, {"member" : "prolog.terms.ObjectStack#<init>", "error" : "unsupported entity"}, {"label" : "ofArray", "tail" : "(array: Array[AnyRef], end: Int): Stack[Term]", "member" : "scala.collection.mutable.Stack.ofArray", "link" : "prolog\/terms\/ObjectStack.html#ofArray(array:Array[AnyRef],end:Int):scala.collection.mutable.Stack[A]", "kind" : "def"}, {"label" : "klone", "tail" : "(): Stack[Term]", "member" : "scala.collection.mutable.Stack.klone", "link" : "prolog\/terms\/ObjectStack.html#klone():scala.collection.mutable.Stack[A]", "kind" : "def"}, {"label" : "top", "tail" : "(): Term", "member" : "scala.collection.mutable.Stack.top", "link" : "prolog\/terms\/ObjectStack.html#top:A", "kind" : "final def"}, {"label" : "popWhile", "tail" : "(f: (Term) => Boolean): Seq[Term]", "member" : "scala.collection.mutable.Stack.popWhile", "link" : "prolog\/terms\/ObjectStack.html#popWhile(f:A=>Boolean):scala.collection.Seq[A]", "kind" : "def"}, {"label" : "popAll", "tail" : "(): Seq[Term]", "member" : "scala.collection.mutable.Stack.popAll", "link" : "prolog\/terms\/ObjectStack.html#popAll():scala.collection.Seq[A]", "kind" : "def"}, {"label" : "pop", "tail" : "(): Term", "member" : "scala.collection.mutable.Stack.pop", "link" : "prolog\/terms\/ObjectStack.html#pop():A", "kind" : "def"}, {"label" : "pushAll", "tail" : "(elems: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.Stack.pushAll", "link" : "prolog\/terms\/ObjectStack.html#pushAll(elems:scala.collection.IterableOnce[A]):Stack.this.type", "kind" : "def"}, {"label" : "push", "tail" : "(elem1: Term, elem2: Term, elems: Term*): ObjectStack.this.type", "member" : "scala.collection.mutable.Stack.push", "link" : "prolog\/terms\/ObjectStack.html#push(elem1:A,elem2:A,elems:A*):Stack.this.type", "kind" : "def"}, {"label" : "push", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.Stack.push", "link" : "prolog\/terms\/ObjectStack.html#push(elem:A):Stack.this.type", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.mutable.Stack.stringPrefix", "link" : "prolog\/terms\/ObjectStack.html#stringPrefix:String", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[Stack]", "member" : "scala.collection.mutable.Stack.iterableFactory", "link" : "prolog\/terms\/ObjectStack.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.Stack]", "kind" : "def"}, {"label" : "start_+", "tail" : "(idx: Int): Int", "member" : "scala.collection.mutable.ArrayDeque.start_+", "link" : "prolog\/terms\/ObjectStack.html#start_+(idx:Int):Int", "kind" : "def"}, {"label" : "trimToSize", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayDeque.trimToSize", "link" : "prolog\/terms\/ObjectStack.html#trimToSize():Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.mutable.ArrayDeque.toArray", "link" : "prolog\/terms\/ObjectStack.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(dest: Array[B], destStart: Int, len: Int): Int", "member" : "scala.collection.mutable.ArrayDeque.copyToArray", "link" : "prolog\/terms\/ObjectStack.html#copyToArray[B>:A](dest:Array[B],destStart:Int,len:Int):Int", "kind" : "def"}, {"label" : "clearAndShrink", "tail" : "(size: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.ArrayDeque.clearAndShrink", "link" : "prolog\/terms\/ObjectStack.html#clearAndShrink(size:Int):ArrayDeque.this.type", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayDeque.clear", "link" : "prolog\/terms\/ObjectStack.html#clear():Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.ArrayDeque.isEmpty", "link" : "prolog\/terms\/ObjectStack.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayDeque.length", "link" : "prolog\/terms\/ObjectStack.html#length:Int", "kind" : "def"}, {"label" : "ensureSize", "tail" : "(hint: Int): Unit", "member" : "scala.collection.mutable.ArrayDeque.ensureSize", "link" : "prolog\/terms\/ObjectStack.html#ensureSize(hint:Int):Unit", "kind" : "def"}, {"label" : "removeAll", "tail" : "(p: (Term) => Boolean): Seq[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeAll", "link" : "prolog\/terms\/ObjectStack.html#removeAll(p:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeFirst", "tail" : "(p: (Term) => Boolean, from: Int): Option[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeFirst", "link" : "prolog\/terms\/ObjectStack.html#removeFirst(p:A=>Boolean,from:Int):Option[A]", "kind" : "def"}, {"label" : "removeLastWhile", "tail" : "(f: (Term) => Boolean): Seq[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeLastWhile", "link" : "prolog\/terms\/ObjectStack.html#removeLastWhile(f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeHeadWhile", "tail" : "(f: (Term) => Boolean): Seq[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeHeadWhile", "link" : "prolog\/terms\/ObjectStack.html#removeHeadWhile(f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeAllReverse", "tail" : "(): Seq[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeAllReverse", "link" : "prolog\/terms\/ObjectStack.html#removeAllReverse():Seq[A]", "kind" : "def"}, {"label" : "removeAll", "tail" : "(): Seq[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeAll", "link" : "prolog\/terms\/ObjectStack.html#removeAll():Seq[A]", "kind" : "def"}, {"label" : "removeLast", "tail" : "(resizeInternalRepr: Boolean): Term", "member" : "scala.collection.mutable.ArrayDeque.removeLast", "link" : "prolog\/terms\/ObjectStack.html#removeLast(resizeInternalRepr:Boolean):A", "kind" : "def"}, {"label" : "removeLastOption", "tail" : "(resizeInternalRepr: Boolean): Option[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeLastOption", "link" : "prolog\/terms\/ObjectStack.html#removeLastOption(resizeInternalRepr:Boolean):Option[A]", "kind" : "def"}, {"label" : "removeHead", "tail" : "(resizeInternalRepr: Boolean): Term", "member" : "scala.collection.mutable.ArrayDeque.removeHead", "link" : "prolog\/terms\/ObjectStack.html#removeHead(resizeInternalRepr:Boolean):A", "kind" : "def"}, {"label" : "removeHeadOption", "tail" : "(resizeInternalRepr: Boolean): Option[Term]", "member" : "scala.collection.mutable.ArrayDeque.removeHeadOption", "link" : "prolog\/terms\/ObjectStack.html#removeHeadOption(resizeInternalRepr:Boolean):Option[A]", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.ArrayDeque.subtractOne", "link" : "prolog\/terms\/ObjectStack.html#subtractOne(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(idx: Int): Term", "member" : "scala.collection.mutable.ArrayDeque.remove", "link" : "prolog\/terms\/ObjectStack.html#remove(idx:Int):A", "kind" : "def"}, {"label" : "remove", "tail" : "(idx: Int, count: Int): Unit", "member" : "scala.collection.mutable.ArrayDeque.remove", "link" : "prolog\/terms\/ObjectStack.html#remove(idx:Int,count:Int):Unit", "kind" : "def"}, {"label" : "insertAll", "tail" : "(idx: Int, elems: IterableOnce[Term]): Unit", "member" : "scala.collection.mutable.ArrayDeque.insertAll", "link" : "prolog\/terms\/ObjectStack.html#insertAll(idx:Int,elems:scala.collection.IterableOnce[A]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(idx: Int, elem: Term): Unit", "member" : "scala.collection.mutable.ArrayDeque.insert", "link" : "prolog\/terms\/ObjectStack.html#insert(idx:Int,elem:A):Unit", "kind" : "def"}, {"label" : "addAll", "tail" : "(elems: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.ArrayDeque.addAll", "link" : "prolog\/terms\/ObjectStack.html#addAll(elems:scala.collection.IterableOnce[A]):ArrayDeque.this.type", "kind" : "def"}, {"label" : "prependAll", "tail" : "(elems: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.ArrayDeque.prependAll", "link" : "prolog\/terms\/ObjectStack.html#prependAll(elems:scala.collection.IterableOnce[A]):ArrayDeque.this.type", "kind" : "def"}, {"label" : "prepend", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.ArrayDeque.prepend", "link" : "prolog\/terms\/ObjectStack.html#prepend(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.ArrayDeque.addOne", "link" : "prolog\/terms\/ObjectStack.html#addOne(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "update", "tail" : "(idx: Int, elem: Term): Unit", "member" : "scala.collection.mutable.ArrayDeque.update", "link" : "prolog\/terms\/ObjectStack.html#update(idx:Int,elem:A):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Term", "member" : "scala.collection.mutable.ArrayDeque.apply", "link" : "prolog\/terms\/ObjectStack.html#apply(idx:Int):A", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S with EfficientSplit", "member" : "scala.collection.mutable.ArrayDeque.stepper", "link" : "prolog\/terms\/ObjectStack.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayDeque.knownSize", "link" : "prolog\/terms\/ObjectStack.html#knownSize:Int", "kind" : "def"}, {"label" : "array", "tail" : ": Array[AnyRef]", "member" : "scala.collection.mutable.ArrayDeque.array", "link" : "prolog\/terms\/ObjectStack.html#array:Array[AnyRef]", "kind" : "var"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scala.collection.generic.DefaultSerializable.writeReplace", "link" : "prolog\/terms\/ObjectStack.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "grouped", "tail" : "(n: Int): Iterator[Stack[Term]]", "member" : "scala.collection.mutable.ArrayDequeOps.grouped", "link" : "prolog\/terms\/ObjectStack.html#grouped(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(window: Int, step: Int): Iterator[Stack[Term]]", "member" : "scala.collection.mutable.ArrayDequeOps.sliding", "link" : "prolog\/terms\/ObjectStack.html#sliding(window:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Stack[Term]", "member" : "scala.collection.mutable.ArrayDequeOps.slice", "link" : "prolog\/terms\/ObjectStack.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Stack[Term]", "member" : "scala.collection.mutable.ArrayDequeOps.reverse", "link" : "prolog\/terms\/ObjectStack.html#reverse:C", "kind" : "def"}, {"label" : "copySliceToArray", "tail" : "(srcStart: Int, dest: Array[_], destStart: Int, maxItems: Int): dest.type", "member" : "scala.collection.mutable.ArrayDequeOps.copySliceToArray", "link" : "prolog\/terms\/ObjectStack.html#copySliceToArray(srcStart:Int,dest:Array[_],destStart:Int,maxItems:Int):dest.type", "kind" : "def"}, {"label" : "requireBounds", "tail" : "(idx: Int, until: Int): Unit", "member" : "scala.collection.mutable.ArrayDequeOps.requireBounds", "link" : "prolog\/terms\/ObjectStack.html#requireBounds(idx:Int,until:Int):Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Stack[Term]", "member" : "scala.collection.mutable.ArrayDequeOps.clone", "link" : "prolog\/terms\/ObjectStack.html#clone():C", "kind" : "final def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Stack[Term]", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "prolog\/terms\/ObjectStack.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Stack[Term]", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "prolog\/terms\/ObjectStack.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "prolog\/terms\/ObjectStack.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "prolog\/terms\/ObjectStack.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "prolog\/terms\/ObjectStack.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "prolog\/terms\/ObjectStack.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "prolog\/terms\/ObjectStack.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Stack[Term]", "member" : "scala.collection.StrictOptimizedSeqOps.distinctBy", "link" : "prolog\/terms\/ObjectStack.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Stack[Term]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "prolog\/terms\/ObjectStack.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Stack[Term]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "prolog\/terms\/ObjectStack.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Stack[Term]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "prolog\/terms\/ObjectStack.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Term) => Either[A1, A2]): (Stack[A1], Stack[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "prolog\/terms\/ObjectStack.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Term) => Boolean, isFlipped: Boolean): Stack[Term]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "prolog\/terms\/ObjectStack.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Term) => Boolean): Stack[Term]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "prolog\/terms\/ObjectStack.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Term) => Boolean): Stack[Term]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "prolog\/terms\/ObjectStack.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "prolog\/terms\/ObjectStack.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Stack[(Term, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "prolog\/terms\/ObjectStack.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[(Term, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "prolog\/terms\/ObjectStack.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Stack[(Term, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "prolog\/terms\/ObjectStack.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Term) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "prolog\/terms\/ObjectStack.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Term) => IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "prolog\/terms\/ObjectStack.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Term, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "prolog\/terms\/ObjectStack.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "prolog\/terms\/ObjectStack.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "prolog\/terms\/ObjectStack.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Term) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "prolog\/terms\/ObjectStack.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "prolog\/terms\/ObjectStack.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Term) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "prolog\/terms\/ObjectStack.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Term) => B): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "prolog\/terms\/ObjectStack.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Term) => (A1, A2, A3)): (Stack[A1], Stack[A2], Stack[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "prolog\/terms\/ObjectStack.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Term) => (A1, A2)): (Stack[A1], Stack[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "prolog\/terms\/ObjectStack.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Stack[Term], Stack[Term])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "prolog\/terms\/ObjectStack.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Stack[Term], Stack[Term])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "prolog\/terms\/ObjectStack.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "patchInPlace", "tail" : "(from: Int, patch: IterableOnce[Term], replaced: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedBuffer.patchInPlace", "link" : "prolog\/terms\/ObjectStack.html#patchInPlace(from:Int,patch:scala.collection.IterableOnce[A],replaced:Int):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "filterInPlace", "tail" : "(p: (Term) => Boolean): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedBuffer.filterInPlace", "link" : "prolog\/terms\/ObjectStack.html#filterInPlace(p:A=>Boolean):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "flatMapInPlace", "tail" : "(f: (Term) => IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedBuffer.flatMapInPlace", "link" : "prolog\/terms\/ObjectStack.html#flatMapInPlace(f:A=>scala.collection.IterableOnce[A]):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "sortInPlaceBy", "tail" : "(f: (Term) => B)(ord: Ordering[B]): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceBy", "link" : "prolog\/terms\/ObjectStack.html#sortInPlaceBy[B](f:A=>B)(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlaceWith", "tail" : "(lt: (Term, Term) => Boolean): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceWith", "link" : "prolog\/terms\/ObjectStack.html#sortInPlaceWith(lt:(A,A)=>Boolean):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlace", "tail" : "()(ord: Ordering[B]): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlace", "link" : "prolog\/terms\/ObjectStack.html#sortInPlace[B>:A]()(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "mapInPlace", "tail" : "(f: (Term) => Term): ObjectStack.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.mapInPlace", "link" : "prolog\/terms\/ObjectStack.html#mapInPlace(f:A=>A):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "prolog\/terms\/ObjectStack.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "prolog\/terms\/ObjectStack.html#search[B>:A](elem:B)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "prolog\/terms\/ObjectStack.html#lengthCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "prolog\/terms\/ObjectStack.html#lengthCompare(len:Int):Int", "kind" : "final def"}, {"label" : "last", "tail" : "(): Term", "member" : "scala.collection.IndexedSeqOps.last", "link" : "prolog\/terms\/ObjectStack.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Term]", "member" : "scala.collection.IndexedSeqOps.headOption", "link" : "prolog\/terms\/ObjectStack.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Term", "member" : "scala.collection.IndexedSeqOps.head", "link" : "prolog\/terms\/ObjectStack.html#head:A", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Stack[Term]", "member" : "scala.collection.IndexedSeqOps.drop", "link" : "prolog\/terms\/ObjectStack.html#drop(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Stack[Term]", "member" : "scala.collection.IndexedSeqOps.take", "link" : "prolog\/terms\/ObjectStack.html#take(n:Int):C", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IndexedSeqOps.reversed", "link" : "prolog\/terms\/ObjectStack.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[Term]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "prolog\/terms\/ObjectStack.html#view(from:Int,until:Int):scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "view", "tail" : "(): IndexedSeqView[Term]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "prolog\/terms\/ObjectStack.html#view:scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IndexedSeqOps.foldRight", "link" : "prolog\/terms\/ObjectStack.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IndexedSeqOps.reverseIterator", "link" : "prolog\/terms\/ObjectStack.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IndexedSeqOps.iterator", "link" : "prolog\/terms\/ObjectStack.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "padToInPlace", "tail" : "(len: Int, elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.padToInPlace", "link" : "prolog\/terms\/ObjectStack.html#padToInPlace(len:Int,elem:A):Buffer.this.type", "kind" : "def"}, {"label" : "takeWhileInPlace", "tail" : "(p: (Term) => Boolean): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.takeWhileInPlace", "link" : "prolog\/terms\/ObjectStack.html#takeWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "dropWhileInPlace", "tail" : "(p: (Term) => Boolean): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.dropWhileInPlace", "link" : "prolog\/terms\/ObjectStack.html#dropWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "sliceInPlace", "tail" : "(start: Int, end: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.sliceInPlace", "link" : "prolog\/terms\/ObjectStack.html#sliceInPlace(start:Int,end:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeRightInPlace", "tail" : "(n: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.takeRightInPlace", "link" : "prolog\/terms\/ObjectStack.html#takeRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeInPlace", "tail" : "(n: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.takeInPlace", "link" : "prolog\/terms\/ObjectStack.html#takeInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropRightInPlace", "tail" : "(n: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.dropRightInPlace", "link" : "prolog\/terms\/ObjectStack.html#dropRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropInPlace", "tail" : "(n: Int): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.dropInPlace", "link" : "prolog\/terms\/ObjectStack.html#dropInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "trimEnd", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimEnd", "link" : "prolog\/terms\/ObjectStack.html#trimEnd(n:Int):Unit", "kind" : "def"}, {"label" : "trimStart", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimStart", "link" : "prolog\/terms\/ObjectStack.html#trimStart(n:Int):Unit", "kind" : "def"}, {"label" : "++=:", "tail" : "(elems: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.++=:", "link" : "prolog\/terms\/ObjectStack.html#++=:(elems:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "prepend", "tail" : "(elems: Term*): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.prepend", "link" : "prolog\/terms\/ObjectStack.html#prepend(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "+=:", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.+=:", "link" : "prolog\/terms\/ObjectStack.html#+=:(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "appendAll", "tail" : "(xs: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.appendAll", "link" : "prolog\/terms\/ObjectStack.html#appendAll(xs:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elems: Term*): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "prolog\/terms\/ObjectStack.html#append(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "prolog\/terms\/ObjectStack.html#append(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "prolog\/terms\/ObjectStack.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.Shrinkable.subtractAll", "link" : "prolog\/terms\/ObjectStack.html#subtractAll(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: Term, elem2: Term, elems: Term*): ObjectStack.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/terms\/ObjectStack.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/terms\/ObjectStack.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "++=", "tail" : "(xs: IterableOnce[Term]): ObjectStack.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "prolog\/terms\/ObjectStack.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem1: Term, elem2: Term, elems: Term*): ObjectStack.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/terms\/ObjectStack.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: Term): ObjectStack.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/terms\/ObjectStack.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (Term) => Term): ObjectStack.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "prolog\/terms\/ObjectStack.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "prolog\/terms\/ObjectStack.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "prolog\/terms\/ObjectStack.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "prolog\/terms\/ObjectStack.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "prolog\/terms\/ObjectStack.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): Stack[B]", "member" : "scala.collection.SeqOps.updated", "link" : "prolog\/terms\/ObjectStack.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Stack[B]", "member" : "scala.collection.SeqOps.patch", "link" : "prolog\/terms\/ObjectStack.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "prolog\/terms\/ObjectStack.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "prolog\/terms\/ObjectStack.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "prolog\/terms\/ObjectStack.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "prolog\/terms\/ObjectStack.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "prolog\/terms\/ObjectStack.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "prolog\/terms\/ObjectStack.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Term) => B)(ord: Ordering[B]): Stack[Term]", "member" : "scala.collection.SeqOps.sortBy", "link" : "prolog\/terms\/ObjectStack.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Term, Term) => Boolean): Stack[Term]", "member" : "scala.collection.SeqOps.sortWith", "link" : "prolog\/terms\/ObjectStack.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Stack[Term]", "member" : "scala.collection.SeqOps.sorted", "link" : "prolog\/terms\/ObjectStack.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Stack[Term]]", "member" : "scala.collection.SeqOps.combinations", "link" : "prolog\/terms\/ObjectStack.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Stack[Term]]", "member" : "scala.collection.SeqOps.permutations", "link" : "prolog\/terms\/ObjectStack.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Term) => B): Stack[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "prolog\/terms\/ObjectStack.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "prolog\/terms\/ObjectStack.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "prolog\/terms\/ObjectStack.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.SeqOps.findLast", "link" : "prolog\/terms\/ObjectStack.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "prolog\/terms\/ObjectStack.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "prolog\/terms\/ObjectStack.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "prolog\/terms\/ObjectStack.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "prolog\/terms\/ObjectStack.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "prolog\/terms\/ObjectStack.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Term) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "prolog\/terms\/ObjectStack.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "prolog\/terms\/ObjectStack.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "prolog\/terms\/ObjectStack.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "prolog\/terms\/ObjectStack.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "prolog\/terms\/ObjectStack.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "prolog\/terms\/ObjectStack.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "prolog\/terms\/ObjectStack.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "prolog\/terms\/ObjectStack.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "prolog\/terms\/ObjectStack.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "prolog\/terms\/ObjectStack.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "prolog\/terms\/ObjectStack.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "prolog\/terms\/ObjectStack.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Stack[Term]", "member" : "scala.collection.SeqOps.distinct", "link" : "prolog\/terms\/ObjectStack.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "prolog\/terms\/ObjectStack.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Stack[B]", "member" : "scala.collection.SeqOps.union", "link" : "prolog\/terms\/ObjectStack.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.SeqOps.concat", "link" : "prolog\/terms\/ObjectStack.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.SeqOps.:++", "link" : "prolog\/terms\/ObjectStack.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.SeqOps.++:", "link" : "prolog\/terms\/ObjectStack.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.SeqOps.:+", "link" : "prolog\/terms\/ObjectStack.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.SeqOps.+:", "link" : "prolog\/terms\/ObjectStack.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(action: (Term) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "prolog\/terms\/ObjectStack.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "prolog\/terms\/ObjectStack.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Term]", "member" : "scala.PartialFunction.lift", "link" : "prolog\/terms\/ObjectStack.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Term]", "member" : "scala.PartialFunction.compose", "link" : "prolog\/terms\/ObjectStack.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Term, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/terms\/ObjectStack.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Term) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/terms\/ObjectStack.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "prolog\/terms\/ObjectStack.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Term]", "member" : "scala.PartialFunction.elementWise", "link" : "prolog\/terms\/ObjectStack.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Term]", "member" : "scala.PartialFunction.unapply", "link" : "prolog\/terms\/ObjectStack.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Term", "member" : "scala.Function1.compose", "link" : "prolog\/terms\/ObjectStack.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[Term, B, ObjectStack.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "prolog\/terms\/ObjectStack.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "prolog\/terms\/ObjectStack.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): ObjectStack.this.type", "member" : "scala.collection.Iterable.seq", "link" : "prolog\/terms\/ObjectStack.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): ObjectStack.this.type", "member" : "scala.collection.Iterable.coll", "link" : "prolog\/terms\/ObjectStack.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): ObjectStack.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "prolog\/terms\/ObjectStack.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Stack[Term]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "prolog\/terms\/ObjectStack.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Term, Stack[Term]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "prolog\/terms\/ObjectStack.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[Term]): Stack[Term]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "prolog\/terms\/ObjectStack.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Stack[Term]]", "member" : "scala.collection.IterableOps.inits", "link" : "prolog\/terms\/ObjectStack.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Stack[Term]]", "member" : "scala.collection.IterableOps.tails", "link" : "prolog\/terms\/ObjectStack.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Stack[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "prolog\/terms\/ObjectStack.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.IterableOps.++", "link" : "prolog\/terms\/ObjectStack.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Stack[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "prolog\/terms\/ObjectStack.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Stack[B]", "member" : "scala.collection.IterableOps.scan", "link" : "prolog\/terms\/ObjectStack.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Term) => K)(f: (Term) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "prolog\/terms\/ObjectStack.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Term) => K)(f: (Term) => B): Map[K, Stack[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "prolog\/terms\/ObjectStack.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Term) => K): Map[K, Stack[Term]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "prolog\/terms\/ObjectStack.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "init", "tail" : "(): Stack[Term]", "member" : "scala.collection.IterableOps.init", "link" : "prolog\/terms\/ObjectStack.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Stack[Term]", "member" : "scala.collection.IterableOps.tail", "link" : "prolog\/terms\/ObjectStack.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Stack[Term]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/terms\/ObjectStack.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Stack[Term]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "prolog\/terms\/ObjectStack.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Stack[Term]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "prolog\/terms\/ObjectStack.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Stack[Term], Stack[Term])", "member" : "scala.collection.IterableOps.splitAt", "link" : "prolog\/terms\/ObjectStack.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): WithFilter[Term, [_]Stack[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "prolog\/terms\/ObjectStack.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Term) => Iterable[B]): Stack[Stack[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "prolog\/terms\/ObjectStack.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "prolog\/terms\/ObjectStack.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Term]", "member" : "scala.collection.IterableOps.lastOption", "link" : "prolog\/terms\/ObjectStack.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Stack[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "prolog\/terms\/ObjectStack.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Stack[Term]", "member" : "scala.collection.IterableOps.repr", "link" : "prolog\/terms\/ObjectStack.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "prolog\/terms\/ObjectStack.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Term]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "prolog\/terms\/ObjectStack.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/terms\/ObjectStack.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/terms\/ObjectStack.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/terms\/ObjectStack.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/terms\/ObjectStack.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/terms\/ObjectStack.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/terms\/ObjectStack.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/terms\/ObjectStack.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/terms\/ObjectStack.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/terms\/ObjectStack.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/terms\/ObjectStack.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/ObjectStack.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/ObjectStack.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/ObjectStack.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/ObjectStack.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/ObjectStack.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/ObjectStack.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/terms\/ObjectStack.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/terms\/ObjectStack.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/terms\/ObjectStack.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/terms\/ObjectStack.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/terms\/ObjectStack.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/terms\/ObjectStack.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/terms\/ObjectStack.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/terms\/ObjectStack.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/terms\/ObjectStack.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/terms\/ObjectStack.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/terms\/ObjectStack.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/terms\/ObjectStack.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/terms\/ObjectStack.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/ObjectStack.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/ObjectStack.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/terms\/ObjectStack.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/terms\/ObjectStack.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/terms\/ObjectStack.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/terms\/ObjectStack.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/terms\/ObjectStack.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/terms\/ObjectStack.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/terms\/ObjectStack.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/terms\/ObjectStack.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/terms\/ObjectStack.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/terms\/ObjectStack.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/terms\/ObjectStack.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/terms\/ObjectStack.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/terms\/ObjectStack.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/terms\/ObjectStack.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/terms\/ObjectStack.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/terms\/ObjectStack.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/terms\/ObjectStack.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "prolog\/terms\/ObjectStack.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/ObjectStack.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/ObjectStack.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/ObjectStack.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/ObjectStack.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/ObjectStack.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/ObjectStack.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/ObjectStack.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/ObjectStack.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/ObjectStack.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/ObjectStack.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/ObjectStack.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/ObjectStack.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/ObjectStack.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/ObjectStack.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/ObjectStack.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/ObjectStack.html", "kind" : "class"}, {"name" : "prolog.terms.Real", "shortDescription" : "", "members_case class" : [{"label" : "getValue", "tail" : "(): BigDecimal", "member" : "prolog.terms.Real.getValue", "link" : "prolog\/terms\/Real.html#getValue:BigDecimal", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Real.name", "link" : "prolog\/terms\/Real.html#name:String", "kind" : "def"}, {"member" : "prolog.terms.Real#<init>", "error" : "unsupported entity"}, {"member" : "prolog.terms.Real#<init>", "error" : "unsupported entity"}, {"member" : "prolog.terms.Real#<init>", "error" : "unsupported entity"}, {"member" : "prolog.terms.Real#<init>", "error" : "unsupported entity"}, {"label" : "nval", "tail" : ": BigDecimal", "member" : "prolog.terms.Real.nval", "link" : "prolog\/terms\/Real.html#nval:BigDecimal", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/terms\/Real.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Num.bind_to", "link" : "prolog\/terms\/Real.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Num.toString", "link" : "prolog\/terms\/Real.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Real.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Real.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Real.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Real.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Real.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Real.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Real.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Real.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Real.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Real.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Real.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Real.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Real.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Real.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Real.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Real.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Real.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Real.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Real.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Real.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Real.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Real.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Real.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Real.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Real.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Real.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/terms\/Real.html", "kind" : "case class"}, {"name" : "prolog.terms.SmallInt", "shortDescription" : "", "members_case class" : [{"label" : "getValue", "tail" : "(): BigDecimal", "member" : "prolog.terms.SmallInt.getValue", "link" : "prolog\/terms\/SmallInt.html#getValue:scala.math.BigDecimal", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SmallInt.name", "link" : "prolog\/terms\/SmallInt.html#name:String", "kind" : "def"}, {"member" : "prolog.terms.SmallInt#<init>", "error" : "unsupported entity"}, {"member" : "prolog.terms.SmallInt#<init>", "error" : "unsupported entity"}, {"label" : "nval", "tail" : ": Int", "member" : "prolog.terms.SmallInt.nval", "link" : "prolog\/terms\/SmallInt.html#nval:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/terms\/SmallInt.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Num.bind_to", "link" : "prolog\/terms\/SmallInt.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Num.toString", "link" : "prolog\/terms\/SmallInt.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/SmallInt.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/SmallInt.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/SmallInt.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/SmallInt.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/SmallInt.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/SmallInt.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/SmallInt.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/SmallInt.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/SmallInt.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/SmallInt.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/SmallInt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/SmallInt.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/SmallInt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/SmallInt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/SmallInt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/SmallInt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/SmallInt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/SmallInt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/SmallInt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/SmallInt.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/SmallInt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/SmallInt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/SmallInt.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/SmallInt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/SmallInt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/SmallInt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/terms\/SmallInt.html", "kind" : "case class"}, {"name" : "prolog.terms.SystemObject", "shortDescription" : "", "members_class" : [{"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/terms\/SystemObject.html#name:String", "kind" : "def"}, {"member" : "prolog.terms.SystemObject#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/SystemObject.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/SystemObject.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/terms\/SystemObject.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/SystemObject.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/SystemObject.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/SystemObject.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/SystemObject.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/SystemObject.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/SystemObject.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/SystemObject.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/SystemObject.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/SystemObject.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/SystemObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/SystemObject.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/SystemObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/SystemObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/SystemObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/SystemObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/SystemObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/SystemObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/SystemObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/SystemObject.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/SystemObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/SystemObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/SystemObject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/SystemObject.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/SystemObject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/SystemObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/SystemObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/SystemObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/SystemObject.html", "kind" : "class"}, {"name" : "prolog.terms.Term", "shortDescription" : "", "object" : "prolog\/terms\/Term$.html", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Term.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Term.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Term.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Term.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Term.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Term.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Term.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Term.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Term.html#ref:prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.terms.Term#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Term.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Term.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Term.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Term.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Term.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Term.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Term.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Term.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Term.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Term.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Term.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Term.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Term.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Term.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Term.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Term.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Term.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Term.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Term.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unify", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.unify", "link" : "prolog\/terms\/Term.html#unify(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "abstract def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.bind_to", "link" : "prolog\/terms\/Term.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "tcompare", "tail" : "(a: Term, b: Term): Int", "member" : "prolog.terms.Term.tcompare", "link" : "prolog\/terms\/Term$.html#tcompare(a:prolog.terms.Term,b:prolog.terms.Term):Int", "kind" : "def"}, {"label" : "copyList", "tail" : "(ts: List[Term], copier: Copier): List[Term]", "member" : "prolog.terms.Term.copyList", "link" : "prolog\/terms\/Term$.html#copyList(ts:List[prolog.terms.Term],copier:prolog.terms.Copier):List[prolog.terms.Term]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Term$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Term$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Term$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Term$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Term$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Term$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Term$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Term$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Term$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Term$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Term$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Term$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/terms\/Term$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Term$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Term$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Term$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Term$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Term$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Term$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Term.html", "kind" : "class"}, {"name" : "prolog.terms.TermSink", "trait" : "prolog\/terms\/TermSink.html", "kind" : "trait", "members_trait" : [{"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/terms\/TermSink.html#name:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/TermSink.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/TermSink.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/terms\/TermSink.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/TermSink.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/TermSink.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/TermSink.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/TermSink.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/TermSink.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/TermSink.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/TermSink.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/TermSink.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/TermSink.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/TermSink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/TermSink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/TermSink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/TermSink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/TermSink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/TermSink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/TermSink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/TermSink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/TermSink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/TermSink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/TermSink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/TermSink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/TermSink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/TermSink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/TermSink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/TermSink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/TermSink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/TermSink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "collect", "tail" : "(): Term", "member" : "prolog.terms.TermSink.collect", "link" : "prolog\/terms\/TermSink.html#collect:prolog.terms.Term", "kind" : "abstract def"}, {"label" : "putElement", "tail" : "(T: Term): Int", "member" : "prolog.terms.TermSink.putElement", "link" : "prolog\/terms\/TermSink.html#putElement(T:prolog.terms.Term):Int", "kind" : "abstract def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.terms.Fluent.stop", "link" : "prolog\/terms\/TermSink.html#stop():Unit", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "prolog.terms.TermSource", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/terms\/TermSource.html#GroupedIterator[B<:<?>]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.terms.TermSource.stop", "link" : "prolog\/terms\/TermSource.html#stop():Unit", "kind" : "def"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/terms\/TermSource.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/terms\/TermSource.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/terms\/TermSource.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/terms\/TermSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/terms\/TermSource.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/terms\/TermSource.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/terms\/TermSource.html#last:prolog.terms.Term", "kind" : "var"}, {"member" : "prolog.terms.TermSource#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): TermSource.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/terms\/TermSource.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "prolog\/terms\/TermSource.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/terms\/TermSource.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/terms\/TermSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/terms\/TermSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/terms\/TermSource.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/terms\/TermSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/terms\/TermSource.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/terms\/TermSource.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/terms\/TermSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/terms\/TermSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/terms\/TermSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/terms\/TermSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/terms\/TermSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/terms\/TermSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/terms\/TermSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/terms\/TermSource.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/terms\/TermSource.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/terms\/TermSource.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/terms\/TermSource.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/terms\/TermSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/terms\/TermSource.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/terms\/TermSource.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/terms\/TermSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/terms\/TermSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/terms\/TermSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/terms\/TermSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/terms\/TermSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/terms\/TermSource.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/terms\/TermSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/terms\/TermSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/terms\/TermSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/terms\/TermSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/terms\/TermSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/terms\/TermSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/terms\/TermSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/terms\/TermSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/terms\/TermSource.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/terms\/TermSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/terms\/TermSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/terms\/TermSource.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/terms\/TermSource.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/terms\/TermSource.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/terms\/TermSource.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/terms\/TermSource.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/terms\/TermSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/terms\/TermSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/terms\/TermSource.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/terms\/TermSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/terms\/TermSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/terms\/TermSource.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/terms\/TermSource.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/terms\/TermSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/terms\/TermSource.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/terms\/TermSource.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/TermSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/TermSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/TermSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/TermSource.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/TermSource.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/TermSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/terms\/TermSource.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/terms\/TermSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/terms\/TermSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/terms\/TermSource.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/terms\/TermSource.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/terms\/TermSource.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/terms\/TermSource.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/terms\/TermSource.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/terms\/TermSource.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/terms\/TermSource.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/terms\/TermSource.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/terms\/TermSource.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/terms\/TermSource.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/TermSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/TermSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/TermSource.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/terms\/TermSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/terms\/TermSource.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/terms\/TermSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/terms\/TermSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/terms\/TermSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/terms\/TermSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/terms\/TermSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/terms\/TermSource.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/terms\/TermSource.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/terms\/TermSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/terms\/TermSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/terms\/TermSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/terms\/TermSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/terms\/TermSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/terms\/TermSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/terms\/TermSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/terms\/TermSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/terms\/TermSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/terms\/TermSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/terms\/TermSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/terms\/TermSource.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/terms\/TermSource.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/terms\/TermSource.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/terms\/TermSource.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/TermSource.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/terms\/TermSource.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/TermSource.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/TermSource.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/TermSource.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/TermSource.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/TermSource.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/TermSource.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/TermSource.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/TermSource.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/TermSource.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/TermSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/TermSource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/TermSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/TermSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/TermSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/TermSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/TermSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/TermSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/TermSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/TermSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/TermSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/TermSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/TermSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/TermSource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/TermSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/TermSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/TermSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/TermSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.terms.TermSource.getElement", "link" : "prolog\/terms\/TermSource.html#getElement():prolog.terms.Term", "kind" : "abstract def"}], "class" : "prolog\/terms\/TermSource.html", "kind" : "class"}, {"name" : "prolog.terms.Trail", "shortDescription" : "", "members_class" : [{"label" : "substitutions", "tail" : "(): Map[String, Term]", "member" : "prolog.terms.Trail.substitutions", "link" : "prolog\/terms\/Trail.html#substitutions():scala.collection.immutable.Map[String,prolog.terms.Term]", "kind" : "def"}, {"label" : "unwind", "tail" : "(to: Int): Unit", "member" : "prolog.terms.Trail.unwind", "link" : "prolog\/terms\/Trail.html#unwind(to:Int):Unit", "kind" : "def"}, {"member" : "prolog.terms.Trail#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.ObjectStack.toString", "link" : "prolog\/terms\/Trail.html#toString():String", "kind" : "def"}, {"label" : "ofArray", "tail" : "(array: Array[AnyRef], end: Int): Stack[Var]", "member" : "scala.collection.mutable.Stack.ofArray", "link" : "prolog\/terms\/Trail.html#ofArray(array:Array[AnyRef],end:Int):scala.collection.mutable.Stack[A]", "kind" : "def"}, {"label" : "klone", "tail" : "(): Stack[Var]", "member" : "scala.collection.mutable.Stack.klone", "link" : "prolog\/terms\/Trail.html#klone():scala.collection.mutable.Stack[A]", "kind" : "def"}, {"label" : "top", "tail" : "(): Var", "member" : "scala.collection.mutable.Stack.top", "link" : "prolog\/terms\/Trail.html#top:A", "kind" : "final def"}, {"label" : "popWhile", "tail" : "(f: (Var) => Boolean): Seq[Var]", "member" : "scala.collection.mutable.Stack.popWhile", "link" : "prolog\/terms\/Trail.html#popWhile(f:A=>Boolean):scala.collection.Seq[A]", "kind" : "def"}, {"label" : "popAll", "tail" : "(): Seq[Var]", "member" : "scala.collection.mutable.Stack.popAll", "link" : "prolog\/terms\/Trail.html#popAll():scala.collection.Seq[A]", "kind" : "def"}, {"label" : "pop", "tail" : "(): Var", "member" : "scala.collection.mutable.Stack.pop", "link" : "prolog\/terms\/Trail.html#pop():A", "kind" : "def"}, {"label" : "pushAll", "tail" : "(elems: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.Stack.pushAll", "link" : "prolog\/terms\/Trail.html#pushAll(elems:scala.collection.IterableOnce[A]):Stack.this.type", "kind" : "def"}, {"label" : "push", "tail" : "(elem1: Var, elem2: Var, elems: Var*): Trail.this.type", "member" : "scala.collection.mutable.Stack.push", "link" : "prolog\/terms\/Trail.html#push(elem1:A,elem2:A,elems:A*):Stack.this.type", "kind" : "def"}, {"label" : "push", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.Stack.push", "link" : "prolog\/terms\/Trail.html#push(elem:A):Stack.this.type", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.mutable.Stack.stringPrefix", "link" : "prolog\/terms\/Trail.html#stringPrefix:String", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[Stack]", "member" : "scala.collection.mutable.Stack.iterableFactory", "link" : "prolog\/terms\/Trail.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.Stack]", "kind" : "def"}, {"label" : "start_+", "tail" : "(idx: Int): Int", "member" : "scala.collection.mutable.ArrayDeque.start_+", "link" : "prolog\/terms\/Trail.html#start_+(idx:Int):Int", "kind" : "def"}, {"label" : "trimToSize", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayDeque.trimToSize", "link" : "prolog\/terms\/Trail.html#trimToSize():Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.mutable.ArrayDeque.toArray", "link" : "prolog\/terms\/Trail.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(dest: Array[B], destStart: Int, len: Int): Int", "member" : "scala.collection.mutable.ArrayDeque.copyToArray", "link" : "prolog\/terms\/Trail.html#copyToArray[B>:A](dest:Array[B],destStart:Int,len:Int):Int", "kind" : "def"}, {"label" : "clearAndShrink", "tail" : "(size: Int): Trail.this.type", "member" : "scala.collection.mutable.ArrayDeque.clearAndShrink", "link" : "prolog\/terms\/Trail.html#clearAndShrink(size:Int):ArrayDeque.this.type", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayDeque.clear", "link" : "prolog\/terms\/Trail.html#clear():Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.ArrayDeque.isEmpty", "link" : "prolog\/terms\/Trail.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayDeque.length", "link" : "prolog\/terms\/Trail.html#length:Int", "kind" : "def"}, {"label" : "ensureSize", "tail" : "(hint: Int): Unit", "member" : "scala.collection.mutable.ArrayDeque.ensureSize", "link" : "prolog\/terms\/Trail.html#ensureSize(hint:Int):Unit", "kind" : "def"}, {"label" : "removeAll", "tail" : "(p: (Var) => Boolean): Seq[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeAll", "link" : "prolog\/terms\/Trail.html#removeAll(p:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeFirst", "tail" : "(p: (Var) => Boolean, from: Int): Option[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeFirst", "link" : "prolog\/terms\/Trail.html#removeFirst(p:A=>Boolean,from:Int):Option[A]", "kind" : "def"}, {"label" : "removeLastWhile", "tail" : "(f: (Var) => Boolean): Seq[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeLastWhile", "link" : "prolog\/terms\/Trail.html#removeLastWhile(f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeHeadWhile", "tail" : "(f: (Var) => Boolean): Seq[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeHeadWhile", "link" : "prolog\/terms\/Trail.html#removeHeadWhile(f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeAllReverse", "tail" : "(): Seq[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeAllReverse", "link" : "prolog\/terms\/Trail.html#removeAllReverse():Seq[A]", "kind" : "def"}, {"label" : "removeAll", "tail" : "(): Seq[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeAll", "link" : "prolog\/terms\/Trail.html#removeAll():Seq[A]", "kind" : "def"}, {"label" : "removeLast", "tail" : "(resizeInternalRepr: Boolean): Var", "member" : "scala.collection.mutable.ArrayDeque.removeLast", "link" : "prolog\/terms\/Trail.html#removeLast(resizeInternalRepr:Boolean):A", "kind" : "def"}, {"label" : "removeLastOption", "tail" : "(resizeInternalRepr: Boolean): Option[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeLastOption", "link" : "prolog\/terms\/Trail.html#removeLastOption(resizeInternalRepr:Boolean):Option[A]", "kind" : "def"}, {"label" : "removeHead", "tail" : "(resizeInternalRepr: Boolean): Var", "member" : "scala.collection.mutable.ArrayDeque.removeHead", "link" : "prolog\/terms\/Trail.html#removeHead(resizeInternalRepr:Boolean):A", "kind" : "def"}, {"label" : "removeHeadOption", "tail" : "(resizeInternalRepr: Boolean): Option[Var]", "member" : "scala.collection.mutable.ArrayDeque.removeHeadOption", "link" : "prolog\/terms\/Trail.html#removeHeadOption(resizeInternalRepr:Boolean):Option[A]", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.ArrayDeque.subtractOne", "link" : "prolog\/terms\/Trail.html#subtractOne(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(idx: Int): Var", "member" : "scala.collection.mutable.ArrayDeque.remove", "link" : "prolog\/terms\/Trail.html#remove(idx:Int):A", "kind" : "def"}, {"label" : "remove", "tail" : "(idx: Int, count: Int): Unit", "member" : "scala.collection.mutable.ArrayDeque.remove", "link" : "prolog\/terms\/Trail.html#remove(idx:Int,count:Int):Unit", "kind" : "def"}, {"label" : "insertAll", "tail" : "(idx: Int, elems: IterableOnce[Var]): Unit", "member" : "scala.collection.mutable.ArrayDeque.insertAll", "link" : "prolog\/terms\/Trail.html#insertAll(idx:Int,elems:scala.collection.IterableOnce[A]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(idx: Int, elem: Var): Unit", "member" : "scala.collection.mutable.ArrayDeque.insert", "link" : "prolog\/terms\/Trail.html#insert(idx:Int,elem:A):Unit", "kind" : "def"}, {"label" : "addAll", "tail" : "(elems: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.ArrayDeque.addAll", "link" : "prolog\/terms\/Trail.html#addAll(elems:scala.collection.IterableOnce[A]):ArrayDeque.this.type", "kind" : "def"}, {"label" : "prependAll", "tail" : "(elems: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.ArrayDeque.prependAll", "link" : "prolog\/terms\/Trail.html#prependAll(elems:scala.collection.IterableOnce[A]):ArrayDeque.this.type", "kind" : "def"}, {"label" : "prepend", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.ArrayDeque.prepend", "link" : "prolog\/terms\/Trail.html#prepend(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.ArrayDeque.addOne", "link" : "prolog\/terms\/Trail.html#addOne(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "update", "tail" : "(idx: Int, elem: Var): Unit", "member" : "scala.collection.mutable.ArrayDeque.update", "link" : "prolog\/terms\/Trail.html#update(idx:Int,elem:A):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Var", "member" : "scala.collection.mutable.ArrayDeque.apply", "link" : "prolog\/terms\/Trail.html#apply(idx:Int):A", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Var, S]): S with EfficientSplit", "member" : "scala.collection.mutable.ArrayDeque.stepper", "link" : "prolog\/terms\/Trail.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayDeque.knownSize", "link" : "prolog\/terms\/Trail.html#knownSize:Int", "kind" : "def"}, {"label" : "array", "tail" : ": Array[AnyRef]", "member" : "scala.collection.mutable.ArrayDeque.array", "link" : "prolog\/terms\/Trail.html#array:Array[AnyRef]", "kind" : "var"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scala.collection.generic.DefaultSerializable.writeReplace", "link" : "prolog\/terms\/Trail.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "grouped", "tail" : "(n: Int): Iterator[Stack[Var]]", "member" : "scala.collection.mutable.ArrayDequeOps.grouped", "link" : "prolog\/terms\/Trail.html#grouped(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(window: Int, step: Int): Iterator[Stack[Var]]", "member" : "scala.collection.mutable.ArrayDequeOps.sliding", "link" : "prolog\/terms\/Trail.html#sliding(window:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Stack[Var]", "member" : "scala.collection.mutable.ArrayDequeOps.slice", "link" : "prolog\/terms\/Trail.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Stack[Var]", "member" : "scala.collection.mutable.ArrayDequeOps.reverse", "link" : "prolog\/terms\/Trail.html#reverse:C", "kind" : "def"}, {"label" : "copySliceToArray", "tail" : "(srcStart: Int, dest: Array[_], destStart: Int, maxItems: Int): dest.type", "member" : "scala.collection.mutable.ArrayDequeOps.copySliceToArray", "link" : "prolog\/terms\/Trail.html#copySliceToArray(srcStart:Int,dest:Array[_],destStart:Int,maxItems:Int):dest.type", "kind" : "def"}, {"label" : "requireBounds", "tail" : "(idx: Int, until: Int): Unit", "member" : "scala.collection.mutable.ArrayDequeOps.requireBounds", "link" : "prolog\/terms\/Trail.html#requireBounds(idx:Int,until:Int):Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Stack[Var]", "member" : "scala.collection.mutable.ArrayDequeOps.clone", "link" : "prolog\/terms\/Trail.html#clone():C", "kind" : "final def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Stack[Var]", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "prolog\/terms\/Trail.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Stack[Var]", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "prolog\/terms\/Trail.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "prolog\/terms\/Trail.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "prolog\/terms\/Trail.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "prolog\/terms\/Trail.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "prolog\/terms\/Trail.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "prolog\/terms\/Trail.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Var) => B): Stack[Var]", "member" : "scala.collection.StrictOptimizedSeqOps.distinctBy", "link" : "prolog\/terms\/Trail.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Stack[Var]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "prolog\/terms\/Trail.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Stack[Var]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "prolog\/terms\/Trail.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Var) => U): Stack[Var]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "prolog\/terms\/Trail.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Var) => Either[A1, A2]): (Stack[A1], Stack[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "prolog\/terms\/Trail.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Var) => Boolean, isFlipped: Boolean): Stack[Var]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "prolog\/terms\/Trail.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Var) => Boolean): Stack[Var]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "prolog\/terms\/Trail.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Var) => Boolean): Stack[Var]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "prolog\/terms\/Trail.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Var) => B): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "prolog\/terms\/Trail.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Stack[(Var, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "prolog\/terms\/Trail.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[(Var, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "prolog\/terms\/Trail.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Stack[(Var, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "prolog\/terms\/Trail.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Var) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "prolog\/terms\/Trail.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Var) => IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "prolog\/terms\/Trail.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Var, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "prolog\/terms\/Trail.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Var, B]): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "prolog\/terms\/Trail.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "prolog\/terms\/Trail.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Var) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "prolog\/terms\/Trail.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Var) => IterableOnce[B]): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "prolog\/terms\/Trail.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Var) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "prolog\/terms\/Trail.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Var) => B): Stack[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "prolog\/terms\/Trail.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Var) => (A1, A2, A3)): (Stack[A1], Stack[A2], Stack[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "prolog\/terms\/Trail.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Var) => (A1, A2)): (Stack[A1], Stack[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "prolog\/terms\/Trail.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Var) => Boolean): (Stack[Var], Stack[Var])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "prolog\/terms\/Trail.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Var) => Boolean): (Stack[Var], Stack[Var])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "prolog\/terms\/Trail.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "patchInPlace", "tail" : "(from: Int, patch: IterableOnce[Var], replaced: Int): Trail.this.type", "member" : "scala.collection.mutable.IndexedBuffer.patchInPlace", "link" : "prolog\/terms\/Trail.html#patchInPlace(from:Int,patch:scala.collection.IterableOnce[A],replaced:Int):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "filterInPlace", "tail" : "(p: (Var) => Boolean): Trail.this.type", "member" : "scala.collection.mutable.IndexedBuffer.filterInPlace", "link" : "prolog\/terms\/Trail.html#filterInPlace(p:A=>Boolean):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "flatMapInPlace", "tail" : "(f: (Var) => IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.IndexedBuffer.flatMapInPlace", "link" : "prolog\/terms\/Trail.html#flatMapInPlace(f:A=>scala.collection.IterableOnce[A]):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "sortInPlaceBy", "tail" : "(f: (Var) => B)(ord: Ordering[B]): Trail.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceBy", "link" : "prolog\/terms\/Trail.html#sortInPlaceBy[B](f:A=>B)(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlaceWith", "tail" : "(lt: (Var, Var) => Boolean): Trail.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceWith", "link" : "prolog\/terms\/Trail.html#sortInPlaceWith(lt:(A,A)=>Boolean):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlace", "tail" : "()(ord: Ordering[B]): Trail.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlace", "link" : "prolog\/terms\/Trail.html#sortInPlace[B>:A]()(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "mapInPlace", "tail" : "(f: (Var) => Var): Trail.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.mapInPlace", "link" : "prolog\/terms\/Trail.html#mapInPlace(f:A=>A):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "prolog\/terms\/Trail.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "prolog\/terms\/Trail.html#search[B>:A](elem:B)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "prolog\/terms\/Trail.html#lengthCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "prolog\/terms\/Trail.html#lengthCompare(len:Int):Int", "kind" : "final def"}, {"label" : "last", "tail" : "(): Var", "member" : "scala.collection.IndexedSeqOps.last", "link" : "prolog\/terms\/Trail.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Var]", "member" : "scala.collection.IndexedSeqOps.headOption", "link" : "prolog\/terms\/Trail.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Var", "member" : "scala.collection.IndexedSeqOps.head", "link" : "prolog\/terms\/Trail.html#head:A", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Stack[Var]", "member" : "scala.collection.IndexedSeqOps.drop", "link" : "prolog\/terms\/Trail.html#drop(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Stack[Var]", "member" : "scala.collection.IndexedSeqOps.take", "link" : "prolog\/terms\/Trail.html#take(n:Int):C", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Iterable[Var]", "member" : "scala.collection.IndexedSeqOps.reversed", "link" : "prolog\/terms\/Trail.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[Var]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "prolog\/terms\/Trail.html#view(from:Int,until:Int):scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "view", "tail" : "(): IndexedSeqView[Var]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "prolog\/terms\/Trail.html#view:scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Var, B) => B): B", "member" : "scala.collection.IndexedSeqOps.foldRight", "link" : "prolog\/terms\/Trail.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Var]", "member" : "scala.collection.IndexedSeqOps.reverseIterator", "link" : "prolog\/terms\/Trail.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Var]", "member" : "scala.collection.IndexedSeqOps.iterator", "link" : "prolog\/terms\/Trail.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "padToInPlace", "tail" : "(len: Int, elem: Var): Trail.this.type", "member" : "scala.collection.mutable.Buffer.padToInPlace", "link" : "prolog\/terms\/Trail.html#padToInPlace(len:Int,elem:A):Buffer.this.type", "kind" : "def"}, {"label" : "takeWhileInPlace", "tail" : "(p: (Var) => Boolean): Trail.this.type", "member" : "scala.collection.mutable.Buffer.takeWhileInPlace", "link" : "prolog\/terms\/Trail.html#takeWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "dropWhileInPlace", "tail" : "(p: (Var) => Boolean): Trail.this.type", "member" : "scala.collection.mutable.Buffer.dropWhileInPlace", "link" : "prolog\/terms\/Trail.html#dropWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "sliceInPlace", "tail" : "(start: Int, end: Int): Trail.this.type", "member" : "scala.collection.mutable.Buffer.sliceInPlace", "link" : "prolog\/terms\/Trail.html#sliceInPlace(start:Int,end:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeRightInPlace", "tail" : "(n: Int): Trail.this.type", "member" : "scala.collection.mutable.Buffer.takeRightInPlace", "link" : "prolog\/terms\/Trail.html#takeRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeInPlace", "tail" : "(n: Int): Trail.this.type", "member" : "scala.collection.mutable.Buffer.takeInPlace", "link" : "prolog\/terms\/Trail.html#takeInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropRightInPlace", "tail" : "(n: Int): Trail.this.type", "member" : "scala.collection.mutable.Buffer.dropRightInPlace", "link" : "prolog\/terms\/Trail.html#dropRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropInPlace", "tail" : "(n: Int): Trail.this.type", "member" : "scala.collection.mutable.Buffer.dropInPlace", "link" : "prolog\/terms\/Trail.html#dropInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "trimEnd", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimEnd", "link" : "prolog\/terms\/Trail.html#trimEnd(n:Int):Unit", "kind" : "def"}, {"label" : "trimStart", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimStart", "link" : "prolog\/terms\/Trail.html#trimStart(n:Int):Unit", "kind" : "def"}, {"label" : "++=:", "tail" : "(elems: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.Buffer.++=:", "link" : "prolog\/terms\/Trail.html#++=:(elems:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "prepend", "tail" : "(elems: Var*): Trail.this.type", "member" : "scala.collection.mutable.Buffer.prepend", "link" : "prolog\/terms\/Trail.html#prepend(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "+=:", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.Buffer.+=:", "link" : "prolog\/terms\/Trail.html#+=:(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "appendAll", "tail" : "(xs: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.Buffer.appendAll", "link" : "prolog\/terms\/Trail.html#appendAll(xs:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elems: Var*): Trail.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "prolog\/terms\/Trail.html#append(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "prolog\/terms\/Trail.html#append(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "prolog\/terms\/Trail.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.Shrinkable.subtractAll", "link" : "prolog\/terms\/Trail.html#subtractAll(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: Var, elem2: Var, elems: Var*): Trail.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/terms\/Trail.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/terms\/Trail.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "++=", "tail" : "(xs: IterableOnce[Var]): Trail.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "prolog\/terms\/Trail.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem1: Var, elem2: Var, elems: Var*): Trail.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/terms\/Trail.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: Var): Trail.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/terms\/Trail.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (Var) => Var): Trail.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "prolog\/terms\/Trail.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "prolog\/terms\/Trail.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "prolog\/terms\/Trail.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "prolog\/terms\/Trail.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "prolog\/terms\/Trail.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): Stack[B]", "member" : "scala.collection.SeqOps.updated", "link" : "prolog\/terms\/Trail.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Stack[B]", "member" : "scala.collection.SeqOps.patch", "link" : "prolog\/terms\/Trail.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (Var, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "prolog\/terms\/Trail.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "prolog\/terms\/Trail.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "prolog\/terms\/Trail.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "prolog\/terms\/Trail.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "prolog\/terms\/Trail.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "prolog\/terms\/Trail.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Var) => B)(ord: Ordering[B]): Stack[Var]", "member" : "scala.collection.SeqOps.sortBy", "link" : "prolog\/terms\/Trail.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Var, Var) => Boolean): Stack[Var]", "member" : "scala.collection.SeqOps.sortWith", "link" : "prolog\/terms\/Trail.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Stack[Var]", "member" : "scala.collection.SeqOps.sorted", "link" : "prolog\/terms\/Trail.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Stack[Var]]", "member" : "scala.collection.SeqOps.combinations", "link" : "prolog\/terms\/Trail.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Stack[Var]]", "member" : "scala.collection.SeqOps.permutations", "link" : "prolog\/terms\/Trail.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Var) => B): Stack[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "prolog\/terms\/Trail.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "prolog\/terms\/Trail.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "prolog\/terms\/Trail.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Var) => Boolean): Option[Var]", "member" : "scala.collection.SeqOps.findLast", "link" : "prolog\/terms\/Trail.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "prolog\/terms\/Trail.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "prolog\/terms\/Trail.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "prolog\/terms\/Trail.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "prolog\/terms\/Trail.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Var) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "prolog\/terms\/Trail.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Var) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "prolog\/terms\/Trail.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "prolog\/terms\/Trail.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "prolog\/terms\/Trail.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "prolog\/terms\/Trail.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Var) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "prolog\/terms\/Trail.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Var) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "prolog\/terms\/Trail.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Var) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "prolog\/terms\/Trail.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Var) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "prolog\/terms\/Trail.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Var) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "prolog\/terms\/Trail.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "prolog\/terms\/Trail.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "prolog\/terms\/Trail.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "prolog\/terms\/Trail.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Stack[Var]", "member" : "scala.collection.SeqOps.distinct", "link" : "prolog\/terms\/Trail.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "prolog\/terms\/Trail.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Stack[B]", "member" : "scala.collection.SeqOps.union", "link" : "prolog\/terms\/Trail.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.SeqOps.concat", "link" : "prolog\/terms\/Trail.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.SeqOps.:++", "link" : "prolog\/terms\/Trail.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.SeqOps.++:", "link" : "prolog\/terms\/Trail.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.SeqOps.:+", "link" : "prolog\/terms\/Trail.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): Stack[B]", "member" : "scala.collection.SeqOps.+:", "link" : "prolog\/terms\/Trail.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(action: (Var) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "prolog\/terms\/Trail.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "prolog\/terms\/Trail.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Var]", "member" : "scala.PartialFunction.lift", "link" : "prolog\/terms\/Trail.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Var]", "member" : "scala.PartialFunction.compose", "link" : "prolog\/terms\/Trail.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Var, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/terms\/Trail.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Var) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/terms\/Trail.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "prolog\/terms\/Trail.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Var]", "member" : "scala.PartialFunction.elementWise", "link" : "prolog\/terms\/Trail.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Var]", "member" : "scala.PartialFunction.unapply", "link" : "prolog\/terms\/Trail.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Var", "member" : "scala.Function1.compose", "link" : "prolog\/terms\/Trail.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[Var, B, Trail.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "prolog\/terms\/Trail.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "prolog\/terms\/Trail.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Trail.this.type", "member" : "scala.collection.Iterable.seq", "link" : "prolog\/terms\/Trail.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Trail.this.type", "member" : "scala.collection.Iterable.coll", "link" : "prolog\/terms\/Trail.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Trail.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "prolog\/terms\/Trail.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Stack[Var]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "prolog\/terms\/Trail.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Var, Stack[Var]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "prolog\/terms\/Trail.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[Var]): Stack[Var]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "prolog\/terms\/Trail.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Stack[Var]]", "member" : "scala.collection.IterableOps.inits", "link" : "prolog\/terms\/Trail.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Stack[Var]]", "member" : "scala.collection.IterableOps.tails", "link" : "prolog\/terms\/Trail.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Stack[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "prolog\/terms\/Trail.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Stack[B]", "member" : "scala.collection.IterableOps.++", "link" : "prolog\/terms\/Trail.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Var, B) => B): Stack[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "prolog\/terms\/Trail.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Stack[B]", "member" : "scala.collection.IterableOps.scan", "link" : "prolog\/terms\/Trail.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Var) => K)(f: (Var) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "prolog\/terms\/Trail.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Var) => K)(f: (Var) => B): Map[K, Stack[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "prolog\/terms\/Trail.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Var) => K): Map[K, Stack[Var]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "prolog\/terms\/Trail.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "init", "tail" : "(): Stack[Var]", "member" : "scala.collection.IterableOps.init", "link" : "prolog\/terms\/Trail.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Stack[Var]", "member" : "scala.collection.IterableOps.tail", "link" : "prolog\/terms\/Trail.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Stack[Var]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/terms\/Trail.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Var) => Boolean): Stack[Var]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "prolog\/terms\/Trail.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Var) => Boolean): Stack[Var]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "prolog\/terms\/Trail.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Stack[Var], Stack[Var])", "member" : "scala.collection.IterableOps.splitAt", "link" : "prolog\/terms\/Trail.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Var) => Boolean): WithFilter[Var, [_]Stack[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "prolog\/terms\/Trail.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Var) => Iterable[B]): Stack[Stack[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "prolog\/terms\/Trail.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "prolog\/terms\/Trail.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Var]", "member" : "scala.collection.IterableOps.lastOption", "link" : "prolog\/terms\/Trail.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Stack[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "prolog\/terms\/Trail.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Stack[Var]", "member" : "scala.collection.IterableOps.repr", "link" : "prolog\/terms\/Trail.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "prolog\/terms\/Trail.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Var]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "prolog\/terms\/Trail.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/terms\/Trail.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Var]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/terms\/Trail.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Var]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/terms\/Trail.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Var]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/terms\/Trail.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/terms\/Trail.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Var, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/terms\/Trail.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Var]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/terms\/Trail.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Var]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/terms\/Trail.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Var]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/terms\/Trail.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Var, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/terms\/Trail.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/Trail.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/Trail.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/terms\/Trail.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/Trail.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/Trail.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/terms\/Trail.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Var, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/terms\/Trail.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Var) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/terms\/Trail.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Var, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/terms\/Trail.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Var) => B)(cmp: Ordering[B]): Option[Var]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/terms\/Trail.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Var) => B)(cmp: Ordering[B]): Var", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/terms\/Trail.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Var) => B)(cmp: Ordering[B]): Option[Var]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/terms\/Trail.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Var) => B)(cmp: Ordering[B]): Var", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/terms\/Trail.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Var]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/terms\/Trail.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Var", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/terms\/Trail.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Var]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/terms\/Trail.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Var", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/terms\/Trail.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/terms\/Trail.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/terms\/Trail.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/Trail.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/terms\/Trail.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/terms\/Trail.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/terms\/Trail.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Var, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/terms\/Trail.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Var) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/terms\/Trail.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Var, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/terms\/Trail.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Var) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/terms\/Trail.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/terms\/Trail.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/terms\/Trail.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/terms\/Trail.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Var, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/terms\/Trail.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Var) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/terms\/Trail.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Var) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/terms\/Trail.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Var) => Boolean): Option[Var]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/terms\/Trail.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Var) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/terms\/Trail.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Var) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/terms\/Trail.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Var) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/terms\/Trail.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Var) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/terms\/Trail.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "prolog\/terms\/Trail.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Trail.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Trail.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Trail.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Trail.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Trail.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Trail.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Trail.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Trail.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Trail.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Trail.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Trail.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Trail.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Trail.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Trail.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Trail.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Trail.html", "kind" : "class"}, {"name" : "prolog.terms.Truth", "shortDescription" : "", "members_class" : [{"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Truth.bind_to", "link" : "prolog\/terms\/Truth.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Truth.len", "link" : "prolog\/terms\/Truth.html#len:Int", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Truth.name", "link" : "prolog\/terms\/Truth.html#name:String", "kind" : "def"}, {"member" : "prolog.terms.Truth#<init>", "error" : "unsupported entity"}, {"label" : "truth", "tail" : ": Boolean", "member" : "prolog.terms.Truth.truth", "link" : "prolog\/terms\/Truth.html#truth:Boolean", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/Truth.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Truth.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Truth.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Truth.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Truth.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Truth.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Truth.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Truth.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Truth.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Truth.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Truth.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Truth.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Truth.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Truth.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Truth.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Truth.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Truth.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Truth.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Truth.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Truth.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Truth.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Truth.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Truth.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Truth.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Truth.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Truth.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Truth.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Truth.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Truth.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Truth.html", "kind" : "class"}, {"name" : "prolog.terms.Var", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Var.toString", "link" : "prolog\/terms\/Var.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Var.vcollect", "link" : "prolog\/terms\/Var.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Var.tcopy", "link" : "prolog\/terms\/Var.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "undo", "tail" : "(): Unit", "member" : "prolog.terms.Var.undo", "link" : "prolog\/terms\/Var.html#undo():Unit", "kind" : "final def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Var.unify", "link" : "prolog\/terms\/Var.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "set_to", "tail" : "(t: Term): Unit", "member" : "prolog.terms.Var.set_to", "link" : "prolog\/terms\/Var.html#set_to(t:prolog.terms.Term):Unit", "kind" : "final def"}, {"label" : "bind_to", "tail" : "(x: Term, trail: Trail): Boolean", "member" : "prolog.terms.Var.bind_to", "link" : "prolog\/terms\/Var.html#bind_to(x:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Var.ref", "link" : "prolog\/terms\/Var.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "unbound", "tail" : "(): Boolean", "member" : "prolog.terms.Var.unbound", "link" : "prolog\/terms\/Var.html#unbound:Boolean", "kind" : "final def"}, {"label" : "v_name", "tail" : "(): String", "member" : "prolog.terms.Var.v_name", "link" : "prolog\/terms\/Var.html#v_name:String", "kind" : "def"}, {"member" : "prolog.terms.Var#<init>", "error" : "unsupported entity"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Var.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Var.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Var.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Var.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Var.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Var.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Var.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Var.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Var.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Var.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Var.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Var.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Var.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Var.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Var.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Var.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Var.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Var.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Var.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/terms\/Var.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/terms\/Var.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Var.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Var.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Var.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/terms\/Var.html", "kind" : "class"}, {"name" : "prolog.terms.Wrapper", "shortDescription" : "", "members_case class" : [{"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Wrapper.name", "link" : "prolog\/terms\/Wrapper.html#name:String", "kind" : "def"}, {"member" : "prolog.terms.Wrapper#<init>", "error" : "unsupported entity"}, {"member" : "prolog.terms.Wrapper#<init>", "error" : "unsupported entity"}, {"label" : "o", "tail" : ": Any", "member" : "prolog.terms.Wrapper.o", "link" : "prolog\/terms\/Wrapper.html#o:Any", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/terms\/Wrapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/terms\/Wrapper.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/terms\/Wrapper.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/terms\/Wrapper.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Wrapper.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/terms\/Wrapper.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/terms\/Wrapper.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/terms\/Wrapper.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/terms\/Wrapper.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/terms\/Wrapper.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/terms\/Wrapper.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/terms\/Wrapper.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/terms\/Wrapper.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/terms\/Wrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/terms\/Wrapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/terms\/Wrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/terms\/Wrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/terms\/Wrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/terms\/Wrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/terms\/Wrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Wrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Wrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/terms\/Wrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/terms\/Wrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/terms\/Wrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/terms\/Wrapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/terms\/Wrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/terms\/Wrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/terms\/Wrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/terms\/Wrapper.html", "kind" : "case class"}], "prolog.builtins" : [{"name" : "prolog.builtins.abolish", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.abolish.exec", "link" : "prolog\/builtins\/abolish.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.abolish#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/abolish.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/abolish.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/abolish.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/abolish.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/abolish.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/abolish.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/abolish.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/abolish.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/abolish.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/abolish.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/abolish.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/abolish.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/abolish.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/abolish.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/abolish.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/abolish.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/abolish.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/abolish.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/abolish.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/abolish.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/abolish.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/abolish.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/abolish.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/abolish.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/abolish.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/abolish.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/abolish.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/abolish.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/abolish.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/abolish.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/abolish.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/abolish.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/abolish.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/abolish.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/abolish.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/abolish.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/abolish.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/abolish.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/abolish.html", "kind" : "class"}, {"name" : "prolog.builtins.arg", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.arg.exec", "link" : "prolog\/builtins\/arg.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "as", "tail" : "(i: Int, f: Fun, x: Term): arg", "member" : "prolog.builtins.arg.as", "link" : "prolog\/builtins\/arg.html#as(i:Int,f:prolog.terms.Fun,x:prolog.terms.Term):prolog.builtins.arg", "kind" : "def"}, {"member" : "prolog.builtins.arg#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/arg.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/arg.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/arg.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/arg.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/arg.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/arg.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/arg.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/arg.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/arg.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/arg.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/arg.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/arg.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/arg.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/arg.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/arg.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/arg.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/arg.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/arg.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/arg.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/arg.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/arg.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/arg.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/arg.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/arg.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/arg.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/arg.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/arg.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/arg.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/arg.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/arg.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/arg.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/arg.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/arg.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/arg.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/arg.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/arg.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/arg.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/arg.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/arg.html", "kind" : "class"}, {"name" : "prolog.builtins.arity", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.arity.exec", "link" : "prolog\/builtins\/arity.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.arity#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/arity.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/arity.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/arity.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/arity.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/arity.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/arity.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/arity.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/arity.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/arity.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/arity.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/arity.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/arity.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/arity.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/arity.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/arity.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/arity.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/arity.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/arity.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/arity.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/arity.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/arity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/arity.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/arity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/arity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/arity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/arity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/arity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/arity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/arity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/arity.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/arity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/arity.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/arity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/arity.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/arity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/arity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/arity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/arity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/arity.html", "kind" : "class"}, {"name" : "prolog.builtins.assert", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.assert.exec", "link" : "prolog\/builtins\/assert.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.assert#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/assert.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/assert.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/assert.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/assert.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/assert.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/assert.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/assert.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/assert.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/assert.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/assert.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/assert.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/assert.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/assert.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/assert.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/assert.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/assert.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/assert.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/assert.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/assert.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/assert.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/assert.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/assert.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/assert.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/assert.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/assert.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/assert.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/assert.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/assert.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/assert.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/assert.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/assert.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/assert.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/assert.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/assert.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/assert.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/assert.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/assert.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/assert.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/assert.html", "kind" : "class"}, {"name" : "prolog.builtins.asserta", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.asserta.exec", "link" : "prolog\/builtins\/asserta.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.asserta#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/asserta.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/asserta.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/asserta.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/asserta.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/asserta.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/asserta.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/asserta.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/asserta.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/asserta.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/asserta.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/asserta.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/asserta.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/asserta.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/asserta.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/asserta.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/asserta.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/asserta.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/asserta.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/asserta.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/asserta.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/asserta.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/asserta.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/asserta.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/asserta.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/asserta.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/asserta.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/asserta.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/asserta.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/asserta.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/asserta.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/asserta.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/asserta.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/asserta.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/asserta.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/asserta.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/asserta.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/asserta.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/asserta.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/asserta.html", "kind" : "class"}, {"name" : "prolog.builtins.char2code", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.char2code.exec", "link" : "prolog\/builtins\/char2code.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.char2code#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/char2code.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/char2code.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/char2code.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/char2code.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/char2code.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/char2code.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/char2code.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/char2code.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/char2code.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/char2code.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/char2code.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/char2code.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/char2code.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/char2code.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/char2code.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/char2code.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/char2code.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/char2code.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/char2code.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/char2code.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/char2code.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/char2code.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/char2code.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/char2code.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/char2code.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/char2code.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/char2code.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/char2code.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/char2code.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/char2code.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/char2code.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/char2code.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/char2code.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/char2code.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/char2code.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/char2code.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/char2code.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/char2code.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/char2code.html", "kind" : "class"}, {"name" : "prolog.builtins.clause_iterator", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.clause_iterator.exec", "link" : "prolog\/builtins\/clause_iterator.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "ClauseIterator", "tail" : "", "member" : "prolog.builtins.clause_iterator.ClauseIterator", "link" : "prolog\/builtins\/clause_iterator.html#ClauseIteratorextendsIterator[prolog.terms.Term]", "kind" : "class"}, {"member" : "prolog.builtins.clause_iterator#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/clause_iterator.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/clause_iterator.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/clause_iterator.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/clause_iterator.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/clause_iterator.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/clause_iterator.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/clause_iterator.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/clause_iterator.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/clause_iterator.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/clause_iterator.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/clause_iterator.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/clause_iterator.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/clause_iterator.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/clause_iterator.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/clause_iterator.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/clause_iterator.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/clause_iterator.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/clause_iterator.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/clause_iterator.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/clause_iterator.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/clause_iterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/clause_iterator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/clause_iterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/clause_iterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/clause_iterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/clause_iterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/clause_iterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/clause_iterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/clause_iterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/clause_iterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/clause_iterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/clause_iterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/clause_iterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/clause_iterator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/clause_iterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/clause_iterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/clause_iterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/clause_iterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/clause_iterator.html", "kind" : "class"}, {"name" : "prolog.builtins.code2char", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.code2char.exec", "link" : "prolog\/builtins\/code2char.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.code2char#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/code2char.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/code2char.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/code2char.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/code2char.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/code2char.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/code2char.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/code2char.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/code2char.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/code2char.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/code2char.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/code2char.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/code2char.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/code2char.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/code2char.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/code2char.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/code2char.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/code2char.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/code2char.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/code2char.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/code2char.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/code2char.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/code2char.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/code2char.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/code2char.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/code2char.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/code2char.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/code2char.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/code2char.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/code2char.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/code2char.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/code2char.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/code2char.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/code2char.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/code2char.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/code2char.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/code2char.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/code2char.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/code2char.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/code2char.html", "kind" : "class"}, {"name" : "prolog.builtins.collect", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.collect.exec", "link" : "prolog\/builtins\/collect.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.collect#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/collect.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/collect.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/collect.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/collect.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/collect.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/collect.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/collect.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/collect.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/collect.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/collect.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/collect.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/collect.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/collect.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/collect.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/collect.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/collect.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/collect.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/collect.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/collect.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/collect.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/collect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/collect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/collect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/collect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/collect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/collect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/collect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/collect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/collect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/collect.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/collect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/collect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/collect.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/collect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/collect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/collect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/collect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/collect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/collect.html", "kind" : "class"}, {"name" : "prolog.builtins.consult", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.consult.exec", "link" : "prolog\/builtins\/consult.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.consult#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/consult.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/consult.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/consult.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/consult.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/consult.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/consult.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/consult.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/consult.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/consult.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/consult.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/consult.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/consult.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/consult.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/consult.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/consult.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/consult.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/consult.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/consult.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/consult.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/consult.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/consult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/consult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/consult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/consult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/consult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/consult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/consult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/consult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/consult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/consult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/consult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/consult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/consult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/consult.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/consult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/consult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/consult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/consult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/consult.html", "kind" : "class"}, {"name" : "prolog.builtins.copy_term", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.copy_term.exec", "link" : "prolog\/builtins\/copy_term.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.copy_term#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/copy_term.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/copy_term.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/copy_term.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/copy_term.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/copy_term.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/copy_term.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/copy_term.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/copy_term.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/copy_term.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/copy_term.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/copy_term.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/copy_term.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/copy_term.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/copy_term.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/copy_term.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/copy_term.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/copy_term.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/copy_term.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/copy_term.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/copy_term.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/copy_term.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/copy_term.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/copy_term.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/copy_term.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/copy_term.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/copy_term.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/copy_term.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/copy_term.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/copy_term.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/copy_term.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/copy_term.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/copy_term.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/copy_term.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/copy_term.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/copy_term.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/copy_term.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/copy_term.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/copy_term.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/copy_term.html", "kind" : "class"}, {"name" : "prolog.builtins.ctime", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.ctime.exec", "link" : "prolog\/builtins\/ctime.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "t0", "tail" : ": Long", "member" : "prolog.builtins.ctime.t0", "link" : "prolog\/builtins\/ctime.html#t0:Long", "kind" : "val"}, {"member" : "prolog.builtins.ctime#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/ctime.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/ctime.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/ctime.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/ctime.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/ctime.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/ctime.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/ctime.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/ctime.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/ctime.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/ctime.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/ctime.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/ctime.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/ctime.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/ctime.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/ctime.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/ctime.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/ctime.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/ctime.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/ctime.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/ctime.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/ctime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/ctime.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/ctime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/ctime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/ctime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/ctime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/ctime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/ctime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/ctime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/ctime.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/ctime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/ctime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/ctime.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/ctime.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/ctime.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/ctime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/ctime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/ctime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/ctime.html", "kind" : "class"}, {"name" : "prolog.builtins.cut", "shortDescription" : "", "members_case class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.cut.exec", "link" : "prolog\/builtins\/cut.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.cut#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Var", "member" : "prolog.builtins.cut.x", "link" : "prolog\/builtins\/cut.html#x:prolog.terms.Var", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/builtins\/cut.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/cut.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/cut.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/cut.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/cut.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/cut.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/cut.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/cut.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/cut.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/cut.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/cut.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/cut.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/cut.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/cut.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/cut.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/cut.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/cut.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/cut.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/cut.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/cut.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/cut.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/cut.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/cut.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/cut.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/cut.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/cut.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/cut.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/cut.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/cut.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/cut.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/cut.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/cut.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/cut.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/cut.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/cut.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/cut.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/cut.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/builtins\/cut.html", "kind" : "case class"}, {"name" : "prolog.builtins.dcg_phrase", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.dcg_phrase.exec", "link" : "prolog\/builtins\/dcg_phrase.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.dcg_phrase#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/dcg_phrase.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/dcg_phrase.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/dcg_phrase.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/dcg_phrase.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/dcg_phrase.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/dcg_phrase.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/dcg_phrase.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/dcg_phrase.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/dcg_phrase.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/dcg_phrase.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/dcg_phrase.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/dcg_phrase.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/dcg_phrase.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/dcg_phrase.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/dcg_phrase.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/dcg_phrase.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/dcg_phrase.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/dcg_phrase.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/dcg_phrase.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/dcg_phrase.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/dcg_phrase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/dcg_phrase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/dcg_phrase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/dcg_phrase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/dcg_phrase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/dcg_phrase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/dcg_phrase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/dcg_phrase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/dcg_phrase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/dcg_phrase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/dcg_phrase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/dcg_phrase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/dcg_phrase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/dcg_phrase.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/dcg_phrase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/dcg_phrase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/dcg_phrase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/dcg_phrase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/dcg_phrase.html", "kind" : "class"}, {"name" : "prolog.builtins.det_append", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.det_append.exec", "link" : "prolog\/builtins\/det_append.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "app", "tail" : "(xs: Term, ys: Term): Term", "member" : "prolog.builtins.det_append.app", "link" : "prolog\/builtins\/det_append.html#app(xs:prolog.terms.Term,ys:prolog.terms.Term):prolog.terms.Term", "kind" : "def"}, {"label" : "cons", "tail" : "(x: Term, xs: Term): Cons", "member" : "prolog.builtins.det_append.cons", "link" : "prolog\/builtins\/det_append.html#cons(x:prolog.terms.Term,xs:prolog.terms.Term):prolog.terms.Cons", "kind" : "def"}, {"member" : "prolog.builtins.det_append#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/det_append.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/det_append.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/det_append.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/det_append.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/det_append.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/det_append.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/det_append.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/det_append.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/det_append.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/det_append.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/det_append.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/det_append.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/det_append.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/det_append.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/det_append.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/det_append.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/det_append.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/det_append.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/det_append.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/det_append.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/det_append.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/det_append.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/det_append.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/det_append.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/det_append.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/det_append.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/det_append.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/det_append.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/det_append.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/det_append.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/det_append.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/det_append.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/det_append.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/det_append.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/det_append.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/det_append.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/det_append.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/det_append.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/det_append.html", "kind" : "class"}, {"name" : "prolog.builtins.eq", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.builtins.eq.toString", "link" : "prolog\/builtins\/eq.html#toString():String", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.eq.exec", "link" : "prolog\/builtins\/eq.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "as", "tail" : "(x: Term, y: Term): eq", "member" : "prolog.builtins.eq.as", "link" : "prolog\/builtins\/eq.html#as(x:prolog.terms.Term,y:prolog.terms.Term):prolog.builtins.eq", "kind" : "def"}, {"member" : "prolog.builtins.eq#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/eq.html#arity:Int", "kind" : "val"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/eq.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/eq.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/eq.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/eq.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/eq.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/eq.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/eq.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/eq.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/eq.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/eq.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/eq.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/eq.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/eq.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/eq.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/eq.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/eq.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/eq.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/eq.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/eq.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/eq.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/eq.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/eq.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/eq.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/eq.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/eq.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/eq.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/eq.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/eq.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/eq.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/eq.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/eq.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/eq.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/eq.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/eq.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/eq.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/eq.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/eq.html", "kind" : "class"}, {"name" : "prolog.builtins.fail_", "shortDescription" : "", "members_case class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.fail_.exec", "link" : "prolog\/builtins\/fail_.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.fail_#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/builtins\/fail_.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/fail_.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Const.len", "link" : "prolog\/builtins\/fail_.html#len:Int", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/fail_.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/fail_.html#sym:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/builtins\/fail_.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/builtins\/fail_.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/fail_.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/fail_.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/fail_.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/fail_.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/builtins\/fail_.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/fail_.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/builtins\/fail_.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/fail_.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/fail_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/fail_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/fail_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/fail_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/fail_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/fail_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/fail_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/fail_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/fail_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/fail_.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/fail_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/fail_.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/fail_.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/fail_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/fail_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/fail_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/builtins\/fail_.html", "kind" : "case class"}, {"name" : "prolog.builtins.file_char_reader", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.file_char_reader.exec", "link" : "prolog\/builtins\/file_char_reader.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.file_char_reader#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/file_char_reader.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/file_char_reader.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/file_char_reader.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/file_char_reader.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/file_char_reader.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/file_char_reader.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/file_char_reader.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/file_char_reader.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/file_char_reader.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/file_char_reader.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/file_char_reader.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/file_char_reader.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/file_char_reader.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/file_char_reader.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/file_char_reader.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/file_char_reader.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/file_char_reader.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/file_char_reader.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/file_char_reader.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/file_char_reader.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/file_char_reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/file_char_reader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/file_char_reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/file_char_reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/file_char_reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/file_char_reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/file_char_reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_char_reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_char_reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_char_reader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/file_char_reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/file_char_reader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/file_char_reader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/file_char_reader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/file_char_reader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/file_char_reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/file_char_reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/file_char_reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/file_char_reader.html", "kind" : "class"}, {"name" : "prolog.builtins.file_clause_reader", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.file_clause_reader.exec", "link" : "prolog\/builtins\/file_clause_reader.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.file_clause_reader#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/file_clause_reader.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/file_clause_reader.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/file_clause_reader.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/file_clause_reader.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/file_clause_reader.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/file_clause_reader.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/file_clause_reader.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/file_clause_reader.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/file_clause_reader.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/file_clause_reader.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/file_clause_reader.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/file_clause_reader.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/file_clause_reader.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/file_clause_reader.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/file_clause_reader.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/file_clause_reader.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/file_clause_reader.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/file_clause_reader.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/file_clause_reader.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/file_clause_reader.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/file_clause_reader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/file_clause_reader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/file_clause_reader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/file_clause_reader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/file_clause_reader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/file_clause_reader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/file_clause_reader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_clause_reader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_clause_reader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_clause_reader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/file_clause_reader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/file_clause_reader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/file_clause_reader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/file_clause_reader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/file_clause_reader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/file_clause_reader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/file_clause_reader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/file_clause_reader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/file_clause_reader.html", "kind" : "class"}, {"name" : "prolog.builtins.file_writer", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.file_writer.exec", "link" : "prolog\/builtins\/file_writer.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.file_writer#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/file_writer.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/file_writer.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/file_writer.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/file_writer.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/file_writer.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/file_writer.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/file_writer.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/file_writer.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/file_writer.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/file_writer.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/file_writer.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/file_writer.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/file_writer.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/file_writer.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/file_writer.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/file_writer.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/file_writer.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/file_writer.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/file_writer.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/file_writer.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/file_writer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/file_writer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/file_writer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/file_writer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/file_writer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/file_writer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/file_writer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_writer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_writer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/file_writer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/file_writer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/file_writer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/file_writer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/file_writer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/file_writer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/file_writer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/file_writer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/file_writer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/file_writer.html", "kind" : "class"}, {"name" : "prolog.builtins.from_source", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.from_source.exec", "link" : "prolog\/builtins\/from_source.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.from_source#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/from_source.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/from_source.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/from_source.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/from_source.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/from_source.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/from_source.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/from_source.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/from_source.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/from_source.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/from_source.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/from_source.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/from_source.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/from_source.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/from_source.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/from_source.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/from_source.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/from_source.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/from_source.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/from_source.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/from_source.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/from_source.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/from_source.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/from_source.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/from_source.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/from_source.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/from_source.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/from_source.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/from_source.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/from_source.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/from_source.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/from_source.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/from_source.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/from_source.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/from_source.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/from_source.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/from_source.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/from_source.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/from_source.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/from_source.html", "kind" : "class"}, {"name" : "prolog.builtins.fun", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.fun.exec", "link" : "prolog\/builtins\/fun.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.fun#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/fun.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/fun.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/fun.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/fun.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/fun.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/fun.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/fun.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/fun.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/fun.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/fun.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/fun.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/fun.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/fun.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/fun.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/fun.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/fun.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/fun.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/fun.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/fun.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/fun.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/fun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/fun.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/fun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/fun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/fun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/fun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/fun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/fun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/fun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/fun.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/fun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/fun.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/fun.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/fun.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/fun.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/fun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/fun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/fun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/fun.html", "kind" : "class"}, {"name" : "prolog.builtins.get", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.get.exec", "link" : "prolog\/builtins\/get.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.get#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/get.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/get.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/get.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/get.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/get.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/get.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/get.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/get.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/get.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/get.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/get.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/get.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/get.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/get.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/get.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/get.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/get.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/get.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/get.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/get.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/get.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/get.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/get.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/get.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/get.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/get.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/get.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/get.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/get.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/get.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/get.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/get.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/get.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/get.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/get.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/get.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/get.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/get.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/get.html", "kind" : "class"}, {"name" : "prolog.builtins.halt", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.halt.exec", "link" : "prolog\/builtins\/halt.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.halt#<init>", "error" : "unsupported entity"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/halt.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Const.len", "link" : "prolog\/builtins\/halt.html#len:Int", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/halt.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/halt.html#sym:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/builtins\/halt.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/builtins\/halt.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/halt.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/halt.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/halt.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/halt.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/builtins\/halt.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/halt.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/builtins\/halt.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/halt.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/halt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/halt.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/halt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/halt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/halt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/halt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/halt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/halt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/halt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/halt.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/halt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/halt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/halt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/halt.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/halt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/halt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/halt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/halt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/halt.html", "kind" : "class"}, {"name" : "prolog.builtins.has_clauses", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.has_clauses.exec", "link" : "prolog\/builtins\/has_clauses.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.has_clauses#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/has_clauses.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/has_clauses.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/has_clauses.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/has_clauses.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/has_clauses.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/has_clauses.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/has_clauses.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/has_clauses.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/has_clauses.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/has_clauses.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/has_clauses.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/has_clauses.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/has_clauses.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/has_clauses.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/has_clauses.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/has_clauses.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/has_clauses.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/has_clauses.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/has_clauses.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/has_clauses.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/has_clauses.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/has_clauses.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/has_clauses.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/has_clauses.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/has_clauses.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/has_clauses.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/has_clauses.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/has_clauses.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/has_clauses.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/has_clauses.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/has_clauses.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/has_clauses.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/has_clauses.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/has_clauses.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/has_clauses.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/has_clauses.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/has_clauses.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/has_clauses.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/has_clauses.html", "kind" : "class"}, {"name" : "prolog.builtins.integer_source", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.integer_source.exec", "link" : "prolog\/builtins\/integer_source.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.integer_source#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/integer_source.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/integer_source.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/integer_source.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/integer_source.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/integer_source.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/integer_source.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/integer_source.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/integer_source.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/integer_source.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/integer_source.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/integer_source.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/integer_source.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/integer_source.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/integer_source.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/integer_source.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/integer_source.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/integer_source.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/integer_source.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/integer_source.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/integer_source.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/integer_source.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/integer_source.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/integer_source.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/integer_source.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/integer_source.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/integer_source.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/integer_source.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/integer_source.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/integer_source.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/integer_source.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/integer_source.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/integer_source.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/integer_source.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/integer_source.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/integer_source.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/integer_source.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/integer_source.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/integer_source.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/integer_source.html", "kind" : "class"}, {"name" : "prolog.builtins.is", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.is.exec", "link" : "prolog\/builtins\/is.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "eval", "tail" : "(expr: Term): BigDecimal", "member" : "prolog.builtins.is.eval", "link" : "prolog\/builtins\/is.html#eval(expr:prolog.terms.Term):BigDecimal", "kind" : "def"}, {"member" : "prolog.builtins.is#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/is.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/is.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/is.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/is.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/is.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/is.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/is.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/is.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/is.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/is.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/is.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/is.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/is.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/is.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/is.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/is.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/is.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/is.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/is.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/is.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/is.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/is.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/is.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/is.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/is.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/is.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/is.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/is.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/is.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/is.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/is.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/is.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/is.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/is.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/is.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/is.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/is.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/is.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/is.html", "kind" : "class"}, {"name" : "prolog.builtins.is_builtin", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.is_builtin.exec", "link" : "prolog\/builtins\/is_builtin.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.is_builtin#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/is_builtin.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/is_builtin.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/is_builtin.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/is_builtin.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/is_builtin.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/is_builtin.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/is_builtin.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/is_builtin.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/is_builtin.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/is_builtin.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/is_builtin.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/is_builtin.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/is_builtin.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/is_builtin.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/is_builtin.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/is_builtin.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/is_builtin.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/is_builtin.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/is_builtin.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/is_builtin.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/is_builtin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/is_builtin.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/is_builtin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/is_builtin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/is_builtin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/is_builtin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/is_builtin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/is_builtin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/is_builtin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/is_builtin.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/is_builtin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/is_builtin.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/is_builtin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/is_builtin.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/is_builtin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/is_builtin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/is_builtin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/is_builtin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/is_builtin.html", "kind" : "class"}, {"name" : "prolog.builtins.listing", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.listing.exec", "link" : "prolog\/builtins\/listing.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.listing#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/listing.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/listing.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/listing.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/listing.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/listing.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/listing.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/listing.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/listing.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/listing.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/listing.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/listing.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/listing.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/listing.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/listing.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/listing.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/listing.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/listing.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/listing.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/listing.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/listing.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/listing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/listing.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/listing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/listing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/listing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/listing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/listing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/listing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/listing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/listing.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/listing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/listing.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/listing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/listing.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/listing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/listing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/listing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/listing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/listing.html", "kind" : "class"}, {"name" : "prolog.builtins.neck", "shortDescription" : "", "members_case class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.neck.exec", "link" : "prolog\/builtins\/neck.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.neck#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Var", "member" : "prolog.builtins.neck.x", "link" : "prolog\/builtins\/neck.html#x:prolog.terms.Var", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/builtins\/neck.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/neck.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/neck.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/neck.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/neck.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/neck.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/neck.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/neck.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/neck.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/neck.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/neck.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/neck.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/neck.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/neck.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/neck.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/neck.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/neck.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/neck.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/neck.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/neck.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/neck.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/neck.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/neck.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/neck.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/neck.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/neck.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/neck.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/neck.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/neck.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/neck.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/neck.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/neck.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/neck.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/neck.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/neck.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/neck.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/neck.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/builtins\/neck.html", "kind" : "case class"}, {"name" : "prolog.builtins.new_engine", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.new_engine.exec", "link" : "prolog\/builtins\/new_engine.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.new_engine#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/new_engine.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/new_engine.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/new_engine.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/new_engine.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/new_engine.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/new_engine.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/new_engine.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/new_engine.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/new_engine.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/new_engine.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/new_engine.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/new_engine.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/new_engine.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/new_engine.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/new_engine.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/new_engine.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/new_engine.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/new_engine.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/new_engine.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/new_engine.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/new_engine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/new_engine.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/new_engine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/new_engine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/new_engine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/new_engine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/new_engine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/new_engine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/new_engine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/new_engine.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/new_engine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/new_engine.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/new_engine.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/new_engine.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/new_engine.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/new_engine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/new_engine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/new_engine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/new_engine.html", "kind" : "class"}, {"name" : "prolog.builtins.predicate_iterator", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.predicate_iterator.exec", "link" : "prolog\/builtins\/predicate_iterator.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.predicate_iterator#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/predicate_iterator.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/predicate_iterator.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/predicate_iterator.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/predicate_iterator.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/predicate_iterator.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/predicate_iterator.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/predicate_iterator.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/predicate_iterator.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/predicate_iterator.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/predicate_iterator.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/predicate_iterator.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/predicate_iterator.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/predicate_iterator.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/predicate_iterator.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/predicate_iterator.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/predicate_iterator.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/predicate_iterator.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/predicate_iterator.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/predicate_iterator.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/predicate_iterator.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/predicate_iterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/predicate_iterator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/predicate_iterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/predicate_iterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/predicate_iterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/predicate_iterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/predicate_iterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/predicate_iterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/predicate_iterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/predicate_iterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/predicate_iterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/predicate_iterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/predicate_iterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/predicate_iterator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/predicate_iterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/predicate_iterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/predicate_iterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/predicate_iterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/predicate_iterator.html", "kind" : "class"}, {"name" : "prolog.builtins.put", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.put.exec", "link" : "prolog\/builtins\/put.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.put#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/put.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/put.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/put.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/put.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/put.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/put.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/put.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/put.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/put.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/put.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/put.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/put.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/put.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/put.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/put.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/put.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/put.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/put.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/put.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/put.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/put.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/put.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/put.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/put.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/put.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/put.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/put.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/put.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/put.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/put.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/put.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/put.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/put.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/put.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/put.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/put.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/put.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/put.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/put.html", "kind" : "class"}, {"name" : "prolog.builtins.range", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.range.exec", "link" : "prolog\/builtins\/range.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.range#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/range.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/range.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/range.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/range.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/range.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/range.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/range.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/range.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/range.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/range.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/range.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/range.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/range.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/range.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/range.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/range.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/range.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/range.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/range.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/range.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/range.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/range.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/range.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/range.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/range.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/range.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/range.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/range.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/range.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/range.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/range.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/range.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/range.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/range.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/range.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/range.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/range.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/range.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/range.html", "kind" : "class"}, {"name" : "prolog.builtins.reconsult", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.reconsult.exec", "link" : "prolog\/builtins\/reconsult.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.reconsult#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/reconsult.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/reconsult.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/reconsult.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/reconsult.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/reconsult.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/reconsult.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/reconsult.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/reconsult.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/reconsult.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/reconsult.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/reconsult.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/reconsult.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/reconsult.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/reconsult.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/reconsult.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/reconsult.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/reconsult.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/reconsult.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/reconsult.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/reconsult.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/reconsult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/reconsult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/reconsult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/reconsult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/reconsult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/reconsult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/reconsult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/reconsult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/reconsult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/reconsult.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/reconsult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/reconsult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/reconsult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/reconsult.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/reconsult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/reconsult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/reconsult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/reconsult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/reconsult.html", "kind" : "class"}, {"name" : "prolog.builtins.retract1", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.retract1.exec", "link" : "prolog\/builtins\/retract1.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.retract1#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/retract1.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/retract1.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/retract1.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/retract1.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/retract1.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/retract1.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/retract1.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/retract1.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/retract1.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/retract1.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/retract1.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/retract1.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/retract1.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/retract1.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/retract1.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/retract1.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/retract1.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/retract1.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/retract1.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/retract1.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/retract1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/retract1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/retract1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/retract1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/retract1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/retract1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/retract1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/retract1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/retract1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/retract1.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/retract1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/retract1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/retract1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/retract1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/retract1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/retract1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/retract1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/retract1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/retract1.html", "kind" : "class"}, {"name" : "prolog.builtins.retractall", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.retractall.exec", "link" : "prolog\/builtins\/retractall.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.retractall#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/retractall.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/retractall.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/retractall.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/retractall.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/retractall.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/retractall.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/retractall.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/retractall.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/retractall.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/retractall.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/retractall.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/retractall.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/retractall.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/retractall.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/retractall.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/retractall.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/retractall.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/retractall.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/retractall.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/retractall.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/retractall.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/retractall.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/retractall.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/retractall.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/retractall.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/retractall.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/retractall.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/retractall.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/retractall.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/retractall.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/retractall.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/retractall.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/retractall.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/retractall.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/retractall.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/retractall.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/retractall.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/retractall.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/retractall.html", "kind" : "class"}, {"name" : "prolog.builtins.sleep_ms", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.sleep_ms.exec", "link" : "prolog\/builtins\/sleep_ms.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.sleep_ms#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/sleep_ms.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/sleep_ms.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/sleep_ms.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/sleep_ms.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/sleep_ms.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/sleep_ms.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/sleep_ms.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/sleep_ms.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/sleep_ms.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/sleep_ms.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/sleep_ms.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/sleep_ms.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/sleep_ms.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/sleep_ms.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/sleep_ms.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/sleep_ms.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/sleep_ms.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/sleep_ms.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/sleep_ms.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/sleep_ms.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/sleep_ms.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/sleep_ms.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/sleep_ms.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/sleep_ms.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/sleep_ms.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/sleep_ms.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/sleep_ms.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/sleep_ms.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/sleep_ms.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/sleep_ms.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/sleep_ms.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/sleep_ms.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/sleep_ms.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/sleep_ms.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/sleep_ms.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/sleep_ms.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/sleep_ms.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/sleep_ms.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/sleep_ms.html", "kind" : "class"}, {"name" : "prolog.builtins.source_to_list", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.source_to_list.exec", "link" : "prolog\/builtins\/source_to_list.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.source_to_list#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/source_to_list.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/source_to_list.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/source_to_list.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/source_to_list.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/source_to_list.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/source_to_list.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/source_to_list.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/source_to_list.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/source_to_list.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/source_to_list.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/source_to_list.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/source_to_list.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/source_to_list.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/source_to_list.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/source_to_list.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/source_to_list.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/source_to_list.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/source_to_list.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/source_to_list.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/source_to_list.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/source_to_list.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/source_to_list.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/source_to_list.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/source_to_list.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/source_to_list.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/source_to_list.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/source_to_list.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/source_to_list.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/source_to_list.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/source_to_list.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/source_to_list.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/source_to_list.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/source_to_list.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/source_to_list.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/source_to_list.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/source_to_list.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/source_to_list.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/source_to_list.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/source_to_list.html", "kind" : "class"}, {"name" : "prolog.builtins.source_to_sink", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.source_to_sink.exec", "link" : "prolog\/builtins\/source_to_sink.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.source_to_sink#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/source_to_sink.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/source_to_sink.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/source_to_sink.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/source_to_sink.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/source_to_sink.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/source_to_sink.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/source_to_sink.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/source_to_sink.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/source_to_sink.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/source_to_sink.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/source_to_sink.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/source_to_sink.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/source_to_sink.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/source_to_sink.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/source_to_sink.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/source_to_sink.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/source_to_sink.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/source_to_sink.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/source_to_sink.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/source_to_sink.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/source_to_sink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/source_to_sink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/source_to_sink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/source_to_sink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/source_to_sink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/source_to_sink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/source_to_sink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/source_to_sink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/source_to_sink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/source_to_sink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/source_to_sink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/source_to_sink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/source_to_sink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/source_to_sink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/source_to_sink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/source_to_sink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/source_to_sink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/source_to_sink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/source_to_sink.html", "kind" : "class"}, {"name" : "prolog.builtins.stable_sort", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.stable_sort.exec", "link" : "prolog\/builtins\/stable_sort.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "dir", "tail" : "(down: Boolean, x: Term, y: Term): Boolean", "member" : "prolog.builtins.stable_sort.dir", "link" : "prolog\/builtins\/stable_sort.html#dir(down:Boolean,x:prolog.terms.Term,y:prolog.terms.Term):Boolean", "kind" : "def"}, {"member" : "prolog.builtins.stable_sort#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/stable_sort.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/stable_sort.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/stable_sort.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/stable_sort.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/stable_sort.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/stable_sort.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/stable_sort.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/stable_sort.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/stable_sort.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/stable_sort.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/stable_sort.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/stable_sort.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/stable_sort.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/stable_sort.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/stable_sort.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/stable_sort.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/stable_sort.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/stable_sort.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/stable_sort.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/stable_sort.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/stable_sort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/stable_sort.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/stable_sort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/stable_sort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/stable_sort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/stable_sort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/stable_sort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/stable_sort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/stable_sort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/stable_sort.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/stable_sort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/stable_sort.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/stable_sort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/stable_sort.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/stable_sort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/stable_sort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/stable_sort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/stable_sort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/stable_sort.html", "kind" : "class"}, {"name" : "prolog.builtins.stop", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.stop.exec", "link" : "prolog\/builtins\/stop.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.stop#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/stop.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/stop.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/stop.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/stop.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/stop.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/stop.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/stop.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/stop.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/stop.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/stop.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/stop.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/stop.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/stop.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/stop.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/stop.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/stop.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/stop.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/stop.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/stop.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/stop.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/stop.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/stop.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/stop.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/stop.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/stop.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/stop.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/stop.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/stop.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/stop.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/stop.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/stop.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/stop.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/stop.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/stop.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/stop.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/stop.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/stop.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/stop.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/stop.html", "kind" : "class"}, {"name" : "prolog.builtins.string_sink", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.string_sink.exec", "link" : "prolog\/builtins\/string_sink.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.string_sink#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/string_sink.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/string_sink.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/string_sink.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/string_sink.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/string_sink.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/string_sink.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/string_sink.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/string_sink.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/string_sink.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/string_sink.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/string_sink.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/string_sink.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/string_sink.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/string_sink.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/string_sink.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/string_sink.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/string_sink.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/string_sink.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/string_sink.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/string_sink.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/string_sink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/string_sink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/string_sink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/string_sink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/string_sink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/string_sink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/string_sink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/string_sink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/string_sink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/string_sink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/string_sink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/string_sink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/string_sink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/string_sink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/string_sink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/string_sink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/string_sink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/string_sink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/string_sink.html", "kind" : "class"}, {"name" : "prolog.builtins.string_source", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.string_source.exec", "link" : "prolog\/builtins\/string_source.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.string_source#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/string_source.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/string_source.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/string_source.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/string_source.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/string_source.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/string_source.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/string_source.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/string_source.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/string_source.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/string_source.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/string_source.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/string_source.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/string_source.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/string_source.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/string_source.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/string_source.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/string_source.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/string_source.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/string_source.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/string_source.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/string_source.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/string_source.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/string_source.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/string_source.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/string_source.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/string_source.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/string_source.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/string_source.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/string_source.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/string_source.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/string_source.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/string_source.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/string_source.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/string_source.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/string_source.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/string_source.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/string_source.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/string_source.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/string_source.html", "kind" : "class"}, {"name" : "prolog.builtins.term2code", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.term2code.exec", "link" : "prolog\/builtins\/term2code.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.term2code#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/term2code.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/term2code.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/term2code.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/term2code.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/term2code.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/term2code.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/term2code.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/term2code.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/term2code.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/term2code.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/term2code.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/term2code.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/term2code.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/term2code.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/term2code.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/term2code.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/term2code.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/term2code.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/term2code.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/term2code.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/term2code.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/term2code.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/term2code.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/term2code.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/term2code.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/term2code.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/term2code.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/term2code.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/term2code.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/term2code.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/term2code.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/term2code.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/term2code.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/term2code.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/term2code.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/term2code.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/term2code.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/term2code.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/term2code.html", "kind" : "class"}, {"name" : "prolog.builtins.term_compare", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.term_compare.exec", "link" : "prolog\/builtins\/term_compare.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.term_compare#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/term_compare.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/term_compare.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/term_compare.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/term_compare.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/term_compare.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/term_compare.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/term_compare.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/term_compare.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/term_compare.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/term_compare.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/term_compare.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/term_compare.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/term_compare.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/term_compare.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/term_compare.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/term_compare.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/term_compare.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/term_compare.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/term_compare.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/term_compare.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/term_compare.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/term_compare.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/term_compare.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/term_compare.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/term_compare.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/term_compare.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/term_compare.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/term_compare.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/term_compare.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/term_compare.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/term_compare.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/term_compare.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/term_compare.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/term_compare.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/term_compare.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/term_compare.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/term_compare.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/term_compare.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/term_compare.html", "kind" : "class"}, {"name" : "prolog.builtins.termcat", "shortDescription" : "", "object" : "prolog\/builtins\/termcat$.html", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.termcat.exec", "link" : "prolog\/builtins\/termcat.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.termcat#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/termcat.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/termcat.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/termcat.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/termcat.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/termcat.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/termcat.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/termcat.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/termcat.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/termcat.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/termcat.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/termcat.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/termcat.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/termcat.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/termcat.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/termcat.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/termcat.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/termcat.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/termcat.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/termcat.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/termcat.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/termcat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/termcat.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/termcat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/termcat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/termcat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/termcat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/termcat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/termcat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/termcat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/termcat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/termcat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/termcat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/termcat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/termcat.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/termcat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/termcat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/termcat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/termcat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "action", "tail" : "(f0: Term, a0: Term): Term", "member" : "prolog.builtins.termcat.action", "link" : "prolog\/builtins\/termcat$.html#action(f0:prolog.terms.Term,a0:prolog.terms.Term):prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/termcat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/termcat$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/termcat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/termcat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/termcat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/termcat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/termcat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/termcat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/termcat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/termcat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/termcat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/termcat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/builtins\/termcat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/termcat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/termcat$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/termcat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/termcat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/termcat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/termcat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/termcat.html", "kind" : "class"}, {"name" : "prolog.builtins.to_number", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.to_number.exec", "link" : "prolog\/builtins\/to_number.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.to_number#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/to_number.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/to_number.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/to_number.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/to_number.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/to_number.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/to_number.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/to_number.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/to_number.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/to_number.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/to_number.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/to_number.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/to_number.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/to_number.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/to_number.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/to_number.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/to_number.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/to_number.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/to_number.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/to_number.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/to_number.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/to_number.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/to_number.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/to_number.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/to_number.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/to_number.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/to_number.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/to_number.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_number.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_number.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_number.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/to_number.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/to_number.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/to_number.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/to_number.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/to_number.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/to_number.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/to_number.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/to_number.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/to_number.html", "kind" : "class"}, {"name" : "prolog.builtins.to_sink", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.to_sink.exec", "link" : "prolog\/builtins\/to_sink.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.to_sink#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/to_sink.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/to_sink.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/to_sink.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/to_sink.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/to_sink.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/to_sink.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/to_sink.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/to_sink.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/to_sink.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/to_sink.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/to_sink.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/to_sink.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/to_sink.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/to_sink.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/to_sink.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/to_sink.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/to_sink.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/to_sink.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/to_sink.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/to_sink.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/to_sink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/to_sink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/to_sink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/to_sink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/to_sink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/to_sink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/to_sink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_sink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_sink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_sink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/to_sink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/to_sink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/to_sink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/to_sink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/to_sink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/to_sink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/to_sink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/to_sink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/to_sink.html", "kind" : "class"}, {"name" : "prolog.builtins.to_string", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.to_string.exec", "link" : "prolog\/builtins\/to_string.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.to_string#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/to_string.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/to_string.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/to_string.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/to_string.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/to_string.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/to_string.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/to_string.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/to_string.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/to_string.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/to_string.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/to_string.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/to_string.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/to_string.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/to_string.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/to_string.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/to_string.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/to_string.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/to_string.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/to_string.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/to_string.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/to_string.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/to_string.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/to_string.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/to_string.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/to_string.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/to_string.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/to_string.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_string.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_string.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/to_string.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/to_string.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/to_string.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/to_string.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/to_string.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/to_string.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/to_string.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/to_string.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/to_string.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/to_string.html", "kind" : "class"}, {"name" : "prolog.builtins.traceln", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.traceln.exec", "link" : "prolog\/builtins\/traceln.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.traceln#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/traceln.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/traceln.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/traceln.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/traceln.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/traceln.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/traceln.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/traceln.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/traceln.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/traceln.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/traceln.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/traceln.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/traceln.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/traceln.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/traceln.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/traceln.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/traceln.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/traceln.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/traceln.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/traceln.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/traceln.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/traceln.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/traceln.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/traceln.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/traceln.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/traceln.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/traceln.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/traceln.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/traceln.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/traceln.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/traceln.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/traceln.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/traceln.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/traceln.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/traceln.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/traceln.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/traceln.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/traceln.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/traceln.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/traceln.html", "kind" : "class"}, {"name" : "prolog.builtins.true_", "shortDescription" : "", "members_case class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.true_.exec", "link" : "prolog\/builtins\/true_.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.true_#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/builtins\/true_.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/true_.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Const.len", "link" : "prolog\/builtins\/true_.html#len:Int", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/true_.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/true_.html#sym:String", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/builtins\/true_.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/builtins\/true_.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/true_.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/true_.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/true_.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/true_.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/builtins\/true_.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/true_.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/builtins\/true_.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/true_.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/true_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/true_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/true_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/true_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/true_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/true_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/true_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/true_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/true_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/true_.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/true_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/true_.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/true_.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/true_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/true_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/true_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/builtins\/true_.html", "kind" : "case class"}, {"name" : "prolog.builtins.type_of", "shortDescription" : "", "object" : "prolog\/builtins\/type_of$.html", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.type_of.exec", "link" : "prolog\/builtins\/type_of.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.type_of#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/type_of.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/type_of.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/type_of.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/type_of.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/type_of.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/type_of.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/type_of.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/type_of.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/type_of.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/type_of.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/type_of.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/type_of.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/type_of.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/type_of.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/type_of.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/type_of.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/type_of.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/type_of.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/type_of.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/type_of.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/type_of.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/type_of.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/type_of.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/type_of.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/type_of.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/type_of.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/type_of.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/type_of.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/type_of.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/type_of.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/type_of.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/type_of.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/type_of.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/type_of.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/type_of.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/type_of.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/type_of.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/type_of.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "S", "tail" : ": Const", "member" : "prolog.builtins.type_of.S", "link" : "prolog\/builtins\/type_of$.html#S:prolog.terms.Const", "kind" : "val"}, {"label" : "I", "tail" : ": Const", "member" : "prolog.builtins.type_of.I", "link" : "prolog\/builtins\/type_of$.html#I:prolog.terms.Const", "kind" : "val"}, {"label" : "R", "tail" : ": Const", "member" : "prolog.builtins.type_of.R", "link" : "prolog\/builtins\/type_of$.html#R:prolog.terms.Const", "kind" : "val"}, {"label" : "A", "tail" : ": Const", "member" : "prolog.builtins.type_of.A", "link" : "prolog\/builtins\/type_of$.html#A:prolog.terms.Const", "kind" : "val"}, {"label" : "F", "tail" : ": Const", "member" : "prolog.builtins.type_of.F", "link" : "prolog\/builtins\/type_of$.html#F:prolog.terms.Const", "kind" : "val"}, {"label" : "V", "tail" : ": Const", "member" : "prolog.builtins.type_of.V", "link" : "prolog\/builtins\/type_of$.html#V:prolog.terms.Const", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/type_of$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/type_of$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/type_of$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/type_of$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/type_of$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/type_of$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/type_of$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/type_of$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/type_of$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/type_of$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/type_of$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/type_of$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/builtins\/type_of$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/type_of$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/type_of$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/type_of$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/type_of$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/type_of$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/type_of$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/type_of.html", "kind" : "class"}, {"name" : "prolog.builtins.vars_of", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.builtins.vars_of.exec", "link" : "prolog\/builtins\/vars_of.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.builtins.vars_of#<init>", "error" : "unsupported entity"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/builtins\/vars_of.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/builtins\/vars_of.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/builtins\/vars_of.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/builtins\/vars_of.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/builtins\/vars_of.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/builtins\/vars_of.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/builtins\/vars_of.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/builtins\/vars_of.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/builtins\/vars_of.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/builtins\/vars_of.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/builtins\/vars_of.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/builtins\/vars_of.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/builtins\/vars_of.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/builtins\/vars_of.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/builtins\/vars_of.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/builtins\/vars_of.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/builtins\/vars_of.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/builtins\/vars_of.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/builtins\/vars_of.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/builtins\/vars_of.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/builtins\/vars_of.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/builtins\/vars_of.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/builtins\/vars_of.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/builtins\/vars_of.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/builtins\/vars_of.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/builtins\/vars_of.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/builtins\/vars_of.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/vars_of.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/vars_of.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/builtins\/vars_of.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/builtins\/vars_of.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/builtins\/vars_of.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/builtins\/vars_of.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/builtins\/vars_of.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/builtins\/vars_of.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/builtins\/vars_of.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/builtins\/vars_of.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/builtins\/vars_of.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/builtins\/vars_of.html", "kind" : "class"}], "prolog.fluents" : [{"name" : "prolog.fluents.DataBase", "shortDescription" : "", "object" : "prolog\/fluents\/DataBase$.html", "members_class" : [{"label" : "LinkedKeySet", "tail" : "", "member" : "scala.collection.mutable.LinkedHashMap.LinkedKeySet", "link" : "prolog\/fluents\/DataBase.html#LinkedKeySetextendsLinkedHashMap.this.KeySet", "kind" : "class"}, {"label" : "GenKeySet", "tail" : "", "member" : "scala.collection.MapOps.GenKeySet", "link" : "prolog\/fluents\/DataBase.html#GenKeySetextendsAnyRef", "kind" : "trait"}, {"label" : "KeySet", "tail" : "", "member" : "scala.collection.MapOps.KeySet", "link" : "prolog\/fluents\/DataBase.html#KeySetextendsAbstractSet[K]withMapOps.this.GenKeySetwithDefaultSerializable", "kind" : "class"}, {"label" : "revVars", "tail" : "(): LinkedHashMap[Var, String]", "member" : "prolog.fluents.DataBase.revVars", "link" : "prolog\/fluents\/DataBase.html#revVars():scala.collection.mutable.LinkedHashMap[prolog.terms.Var,String]", "kind" : "def"}, {"label" : "getMatches", "tail" : "(c: CLAUSE, verbose: Boolean): Deque[CLAUSE]", "member" : "prolog.fluents.DataBase.getMatches", "link" : "prolog\/fluents\/DataBase.html#getMatches(c:DataBase.this.CLAUSE,verbose:Boolean):prolog.fluents.Deque[DataBase.this.CLAUSE]", "kind" : "def"}, {"label" : "getMatches", "tail" : "(c: CLAUSE): Deque[CLAUSE]", "member" : "prolog.fluents.DataBase.getMatches", "link" : "prolog\/fluents\/DataBase.html#getMatches(c:DataBase.this.CLAUSE):prolog.fluents.Deque[DataBase.this.CLAUSE]", "kind" : "def"}, {"label" : "cleanUpKey", "tail" : "(h: Term): Unit", "member" : "prolog.fluents.DataBase.cleanUpKey", "link" : "prolog\/fluents\/DataBase.html#cleanUpKey(h:prolog.terms.Term):Unit", "kind" : "def"}, {"label" : "delAll", "tail" : "(h: Term): Unit", "member" : "prolog.fluents.DataBase.delAll", "link" : "prolog\/fluents\/DataBase.html#delAll(h:prolog.terms.Term):Unit", "kind" : "def"}, {"label" : "del1", "tail" : "(h: Term): List[Term]", "member" : "prolog.fluents.DataBase.del1", "link" : "prolog\/fluents\/DataBase.html#del1(h:prolog.terms.Term):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "push", "tail" : "(c: CLAUSE): Unit", "member" : "prolog.fluents.DataBase.push", "link" : "prolog\/fluents\/DataBase.html#push(c:DataBase.this.CLAUSE):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(c: CLAUSE): Unit", "member" : "prolog.fluents.DataBase.add", "link" : "prolog\/fluents\/DataBase.html#add(c:DataBase.this.CLAUSE):Unit", "kind" : "def"}, {"label" : "has_clauses", "tail" : "(h: Term): Int", "member" : "prolog.fluents.DataBase.has_clauses", "link" : "prolog\/fluents\/DataBase.html#has_clauses(h:prolog.terms.Term):Int", "kind" : "def"}, {"label" : "key", "tail" : "(c: Const): Key", "member" : "prolog.fluents.DataBase.key", "link" : "prolog\/fluents\/DataBase.html#key(c:prolog.terms.Const):prolog.fluents.Key", "kind" : "def"}, {"label" : "key", "tail" : "(c: CLAUSE): Key", "member" : "prolog.fluents.DataBase.key", "link" : "prolog\/fluents\/DataBase.html#key(c:DataBase.this.CLAUSE):prolog.fluents.Key", "kind" : "def"}, {"label" : "new_prog", "tail" : "(answer: Term, gs: List[Term]): Prog", "member" : "prolog.fluents.DataBase.new_prog", "link" : "prolog\/fluents\/DataBase.html#new_prog(answer:prolog.terms.Term,gs:List[prolog.terms.Term]):prolog.interp.Prog", "kind" : "def"}, {"label" : "add_or_exec", "tail" : "(c: CLAUSE): Boolean", "member" : "prolog.fluents.DataBase.add_or_exec", "link" : "prolog\/fluents\/DataBase.html#add_or_exec(c:DataBase.this.CLAUSE):Boolean", "kind" : "def"}, {"label" : "exec_cmd", "tail" : "(body: CLAUSE): Unit", "member" : "prolog.fluents.DataBase.exec_cmd", "link" : "prolog\/fluents\/DataBase.html#exec_cmd(body:DataBase.this.CLAUSE):Unit", "kind" : "def"}, {"label" : "addAll", "tail" : "(cs: List[CLAUSE]): Unit", "member" : "prolog.fluents.DataBase.addAll", "link" : "prolog\/fluents\/DataBase.html#addAll(cs:List[DataBase.this.CLAUSE]):Unit", "kind" : "def"}, {"label" : "fromFile", "tail" : "(f0: String, doClear: Boolean): Int", "member" : "prolog.fluents.DataBase.fromFile", "link" : "prolog\/fluents\/DataBase.html#fromFile(f0:String,doClear:Boolean):Int", "kind" : "final def"}, {"label" : "vars", "tail" : ": LinkedHashMap[String, Var]", "member" : "prolog.fluents.DataBase.vars", "link" : "prolog\/fluents\/DataBase.html#vars:scala.collection.mutable.LinkedHashMap[String,prolog.terms.Var]", "kind" : "val"}, {"label" : "CLAUSE", "tail" : "", "member" : "prolog.fluents.DataBase.CLAUSE", "link" : "prolog\/fluents\/DataBase.html#CLAUSE=List[prolog.terms.Term]", "kind" : "type"}, {"member" : "prolog.fluents.DataBase#<init>", "error" : "unsupported entity"}, {"member" : "prolog.fluents.DataBase#<init>", "error" : "unsupported entity"}, {"member" : "prolog.fluents.DataBase#<init>", "error" : "unsupported entity"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.mutable.LinkedHashMap.stringPrefix", "link" : "prolog\/fluents\/DataBase.html#stringPrefix:String", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.LinkedHashMap.clear", "link" : "prolog\/fluents\/DataBase.html#clear():Unit", "kind" : "def"}, {"label" : "foreachEntry", "tail" : "(f: (Key, Deque[List[Term]]) => U): Unit", "member" : "scala.collection.mutable.LinkedHashMap.foreachEntry", "link" : "prolog\/fluents\/DataBase.html#foreachEntry[U](f:(K,V)=>U):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: ((Key, Deque[List[Term]])) => U): Unit", "member" : "scala.collection.mutable.LinkedHashMap.foreach", "link" : "prolog\/fluents\/DataBase.html#foreach[U](f:((K,V))=>U):Unit", "kind" : "def"}, {"label" : "valuesIterator", "tail" : "(): Iterator[Deque[List[Term]]]", "member" : "scala.collection.mutable.LinkedHashMap.valuesIterator", "link" : "prolog\/fluents\/DataBase.html#valuesIterator:Iterator[V]", "kind" : "def"}, {"label" : "updateWith", "tail" : "(key: Key)(remappingFunction: (Option[Deque[List[Term]]]) => Option[Deque[List[Term]]]): Option[Deque[List[Term]]]", "member" : "scala.collection.mutable.LinkedHashMap.updateWith", "link" : "prolog\/fluents\/DataBase.html#updateWith(key:K)(remappingFunction:Option[V]=>Option[V]):Option[V]", "kind" : "def"}, {"label" : "keysIterator", "tail" : "(): Iterator[Key]", "member" : "scala.collection.mutable.LinkedHashMap.keysIterator", "link" : "prolog\/fluents\/DataBase.html#keysIterator:Iterator[K]", "kind" : "def"}, {"label" : "keySet", "tail" : "(): Set[Key]", "member" : "scala.collection.mutable.LinkedHashMap.keySet", "link" : "prolog\/fluents\/DataBase.html#keySet:scala.collection.Set[K]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[(Key, Deque[List[Term]])]", "member" : "scala.collection.mutable.LinkedHashMap.iterator", "link" : "prolog\/fluents\/DataBase.html#iterator:Iterator[(K,V)]", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(key: Key): DataBase.this.type", "member" : "scala.collection.mutable.LinkedHashMap.subtractOne", "link" : "prolog\/fluents\/DataBase.html#subtractOne(key:K):LinkedHashMap.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(kv: (Key, Deque[List[Term]])): DataBase.this.type", "member" : "scala.collection.mutable.LinkedHashMap.addOne", "link" : "prolog\/fluents\/DataBase.html#addOne(kv:(K,V)):LinkedHashMap.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(key: Key): Option[Deque[List[Term]]]", "member" : "scala.collection.mutable.LinkedHashMap.remove", "link" : "prolog\/fluents\/DataBase.html#remove(key:K):Option[V]", "kind" : "def"}, {"label" : "update", "tail" : "(key: Key, value: Deque[List[Term]]): Unit", "member" : "scala.collection.mutable.LinkedHashMap.update", "link" : "prolog\/fluents\/DataBase.html#update(key:K,value:V):Unit", "kind" : "def"}, {"label" : "put", "tail" : "(key: Key, value: Deque[List[Term]]): Option[Deque[List[Term]]]", "member" : "scala.collection.mutable.LinkedHashMap.put", "link" : "prolog\/fluents\/DataBase.html#put(key:K,value:V):Option[V]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Key): Boolean", "member" : "scala.collection.mutable.LinkedHashMap.contains", "link" : "prolog\/fluents\/DataBase.html#contains(key:K):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(key: Key): Option[Deque[List[Term]]]", "member" : "scala.collection.mutable.LinkedHashMap.get", "link" : "prolog\/fluents\/DataBase.html#get(key:K):Option[V]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.LinkedHashMap.isEmpty", "link" : "prolog\/fluents\/DataBase.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.LinkedHashMap.knownSize", "link" : "prolog\/fluents\/DataBase.html#knownSize:Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.mutable.LinkedHashMap.size", "link" : "prolog\/fluents\/DataBase.html#size:Int", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.mutable.LinkedHashMap.headOption", "link" : "prolog\/fluents\/DataBase.html#headOption:Option[(K,V)]", "kind" : "def"}, {"label" : "head", "tail" : "(): (Key, Deque[List[Term]])", "member" : "scala.collection.mutable.LinkedHashMap.head", "link" : "prolog\/fluents\/DataBase.html#head:(K,V)", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.mutable.LinkedHashMap.lastOption", "link" : "prolog\/fluents\/DataBase.html#lastOption:Option[(K,V)]", "kind" : "def"}, {"label" : "last", "tail" : "(): (Key, Deque[List[Term]])", "member" : "scala.collection.mutable.LinkedHashMap.last", "link" : "prolog\/fluents\/DataBase.html#last:(K,V)", "kind" : "def"}, {"label" : "lastEntry", "tail" : ": Entry", "member" : "scala.collection.mutable.LinkedHashMap.lastEntry", "link" : "prolog\/fluents\/DataBase.html#lastEntry:LinkedHashMap.this.Entry", "kind" : "var"}, {"label" : "firstEntry", "tail" : ": Entry", "member" : "scala.collection.mutable.LinkedHashMap.firstEntry", "link" : "prolog\/fluents\/DataBase.html#firstEntry:LinkedHashMap.this.Entry", "kind" : "var"}, {"label" : "mapFactory", "tail" : "(): MapFactory[LinkedHashMap]", "member" : "scala.collection.mutable.LinkedHashMap.mapFactory", "link" : "prolog\/fluents\/DataBase.html#mapFactory:scala.collection.MapFactory[scala.collection.mutable.LinkedHashMap]", "kind" : "def"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scala.collection.generic.DefaultSerializable.writeReplace", "link" : "prolog\/fluents\/DataBase.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "+", "tail" : "(elem1: (Key, V1), elem2: (Key, V1), elems: (Key, V1)*): LinkedHashMap[Key, V1]", "member" : "scala.collection.StrictOptimizedMapOps.+", "link" : "prolog\/fluents\/DataBase.html#+[V1>:V](elem1:(K,V1),elem2:(K,V1),elems:(K,V1)*):CC[K,V1]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(Key, Deque[List[Term]]), (K2, V2)]): LinkedHashMap[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.collect", "link" : "prolog\/fluents\/DataBase.html#collect[K2,V2](pf:PartialFunction[(K,V),(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[(Key, V2)]): LinkedHashMap[Key, V2]", "member" : "scala.collection.StrictOptimizedMapOps.concat", "link" : "prolog\/fluents\/DataBase.html#concat[V2>:V](suffix:scala.collection.IterableOnce[(K,V2)]):CC[K,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((Key, Deque[List[Term]])) => IterableOnce[(K2, V2)]): LinkedHashMap[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.flatMap", "link" : "prolog\/fluents\/DataBase.html#flatMap[K2,V2](f:((K,V))=>scala.collection.IterableOnce[(K2,V2)]):CC[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((Key, Deque[List[Term]])) => (K2, V2)): LinkedHashMap[K2, V2]", "member" : "scala.collection.StrictOptimizedMapOps.map", "link" : "prolog\/fluents\/DataBase.html#map[K2,V2](f:((K,V))=>(K2,V2)):CC[K2,V2]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "prolog\/fluents\/DataBase.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "prolog\/fluents\/DataBase.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: ((Key, Deque[List[Term]])) => U): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "prolog\/fluents\/DataBase.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: ((Key, Deque[List[Term]])) => Either[A1, A2]): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "prolog\/fluents\/DataBase.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: ((Key, Deque[List[Term]])) => Boolean, isFlipped: Boolean): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "prolog\/fluents\/DataBase.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: ((Key, Deque[List[Term]])) => Boolean): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "prolog\/fluents\/DataBase.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: ((Key, Deque[List[Term]])) => Boolean): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "prolog\/fluents\/DataBase.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, (Key, Deque[List[Term]])) => B): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "prolog\/fluents\/DataBase.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterable[((Key, Deque[List[Term]]), Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "prolog\/fluents\/DataBase.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[((Key, Deque[List[Term]]), B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "prolog\/fluents\/DataBase.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterable[((Key, Deque[List[Term]]), B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "prolog\/fluents\/DataBase.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: ((Key, Deque[List[Term]])) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "prolog\/fluents\/DataBase.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: ((Key, Deque[List[Term]])) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "prolog\/fluents\/DataBase.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[(Key, Deque[List[Term]]), B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "prolog\/fluents\/DataBase.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[(Key, Deque[List[Term]]), B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "prolog\/fluents\/DataBase.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "prolog\/fluents\/DataBase.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: ((Key, Deque[List[Term]])) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "prolog\/fluents\/DataBase.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: ((Key, Deque[List[Term]])) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "prolog\/fluents\/DataBase.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: ((Key, Deque[List[Term]])) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "prolog\/fluents\/DataBase.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: ((Key, Deque[List[Term]])) => B): Iterable[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "prolog\/fluents\/DataBase.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: ((Key, Deque[List[Term]])) => (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "prolog\/fluents\/DataBase.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: ((Key, Deque[List[Term]])) => (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "prolog\/fluents\/DataBase.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): (LinkedHashMap[Key, Deque[List[Term]]], LinkedHashMap[Key, Deque[List[Term]]])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "prolog\/fluents\/DataBase.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): (LinkedHashMap[Key, Deque[List[Term]]], LinkedHashMap[Key, Deque[List[Term]]])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "prolog\/fluents\/DataBase.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withDefaultValue", "tail" : "(d: Deque[List[Term]]): Map[Key, Deque[List[Term]]]", "member" : "scala.collection.mutable.Map.withDefaultValue", "link" : "prolog\/fluents\/DataBase.html#withDefaultValue(d:V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(d: (Key) => Deque[List[Term]]): Map[Key, Deque[List[Term]]]", "member" : "scala.collection.mutable.Map.withDefault", "link" : "prolog\/fluents\/DataBase.html#withDefault(d:K=>V):scala.collection.mutable.Map[K,V]", "kind" : "def"}, {"label" : "updated", "tail" : "(key: Key, value: V1): LinkedHashMap[Key, V1]", "member" : "scala.collection.mutable.MapOps.updated", "link" : "prolog\/fluents\/DataBase.html#updated[V1>:V](key:K,value:V1):CC[K,V1]", "kind" : "def"}, {"label" : "mapValuesInPlace", "tail" : "(f: (Key, Deque[List[Term]]) => Deque[List[Term]]): DataBase.this.type", "member" : "scala.collection.mutable.MapOps.mapValuesInPlace", "link" : "prolog\/fluents\/DataBase.html#mapValuesInPlace(f:(K,V)=>V):MapOps.this.type", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Key, Deque[List[Term]]) => Deque[List[Term]]): DataBase.this.type", "member" : "scala.collection.mutable.MapOps.transform", "link" : "prolog\/fluents\/DataBase.html#transform(f:(K,V)=>V):MapOps.this.type", "kind" : "final def"}, {"label" : "filterInPlace", "tail" : "(p: (Key, Deque[List[Term]]) => Boolean): DataBase.this.type", "member" : "scala.collection.mutable.MapOps.filterInPlace", "link" : "prolog\/fluents\/DataBase.html#filterInPlace(p:(K,V)=>Boolean):MapOps.this.type", "kind" : "def"}, {"label" : "retain", "tail" : "(p: (Key, Deque[List[Term]]) => Boolean): DataBase.this.type", "member" : "scala.collection.mutable.MapOps.retain", "link" : "prolog\/fluents\/DataBase.html#retain(p:(K,V)=>Boolean):MapOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.mutable.MapOps.clone", "link" : "prolog\/fluents\/DataBase.html#clone():C", "kind" : "def"}, {"label" : "getOrElseUpdate", "tail" : "(key: Key, op: => Deque[List[Term]]): Deque[List[Term]]", "member" : "scala.collection.mutable.MapOps.getOrElseUpdate", "link" : "prolog\/fluents\/DataBase.html#getOrElseUpdate(key:K,op:=>V):V", "kind" : "def"}, {"label" : "-", "tail" : "(key1: Key, key2: Key, keys: Key*): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.mutable.MapOps.-", "link" : "prolog\/fluents\/DataBase.html#-(key1:K,key2:K,keys:K*):C", "kind" : "final def"}, {"label" : "-", "tail" : "(key: Key): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.mutable.MapOps.-", "link" : "prolog\/fluents\/DataBase.html#-(key:K):C", "kind" : "final def"}, {"label" : "result", "tail" : "(): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.mutable.MapOps.result", "link" : "prolog\/fluents\/DataBase.html#result():C", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[Key]): DataBase.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "prolog\/fluents\/DataBase.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[Key]): DataBase.this.type", "member" : "scala.collection.mutable.Shrinkable.subtractAll", "link" : "prolog\/fluents\/DataBase.html#subtractAll(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: Key, elem2: Key, elems: Key*): DataBase.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/fluents\/DataBase.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: Key): DataBase.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/fluents\/DataBase.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "mapResult", "tail" : "(f: (LinkedHashMap[Key, Deque[List[Term]]]) => NewTo): Builder[(Key, Deque[List[Term]]), NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "prolog\/fluents\/DataBase.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[A,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: Iterable[_]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "prolog\/fluents\/DataBase.html#sizeHintBounded(size:Int,boundingColl:Iterable[_]):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(coll: IterableOnce[_], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "prolog\/fluents\/DataBase.html#sizeHint(coll:scala.collection.IterableOnce[_],delta:Int):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "prolog\/fluents\/DataBase.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: IterableOnce[(Key, Deque[List[Term]])]): DataBase.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "prolog\/fluents\/DataBase.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "addAll", "tail" : "(xs: IterableOnce[(Key, Deque[List[Term]])]): DataBase.this.type", "member" : "scala.collection.mutable.Growable.addAll", "link" : "prolog\/fluents\/DataBase.html#addAll(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: (Key, Deque[List[Term]]), elem2: (Key, Deque[List[Term]]), elems: (Key, Deque[List[Term]])*): DataBase.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/fluents\/DataBase.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: (Key, Deque[List[Term]])): DataBase.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/fluents\/DataBase.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.mutable.Iterable.iterableFactory", "link" : "prolog\/fluents\/DataBase.html#iterableFactory:scala.collection.IterableFactory[scala.collection.mutable.Iterable]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Map.toString", "link" : "prolog\/fluents\/DataBase.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Map.hashCode", "link" : "prolog\/fluents\/DataBase.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Map.equals", "link" : "prolog\/fluents\/DataBase.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Map.canEqual", "link" : "prolog\/fluents\/DataBase.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): WithFilter[Key, Deque[List[Term]], [x]Iterable[x], [x, y]LinkedHashMap[x, y]]", "member" : "scala.collection.MapFactoryDefaults.withFilter", "link" : "prolog\/fluents\/DataBase.html#withFilter(p:((K,V))=>Boolean):scala.collection.MapOps.WithFilter[K,V,WithFilterCC,CC]", "kind" : "def"}, {"label" : "empty", "tail" : "(): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.MapFactoryDefaults.empty", "link" : "prolog\/fluents\/DataBase.html#empty:CC[K,V@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[(Key, Deque[List[Term]]), LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.MapFactoryDefaults.newSpecificBuilder", "link" : "prolog\/fluents\/DataBase.html#newSpecificBuilder:scala.collection.mutable.Builder[(K,V@scala.annotation.unchecked.uncheckedVariance),CC[K,V@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[(Key, Deque[List[Term]])]): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.MapFactoryDefaults.fromSpecific", "link" : "prolog\/fluents\/DataBase.html#fromSpecific(coll:scala.collection.IterableOnce[(K,V@scala.annotation.unchecked.uncheckedVariance)]):CC[K,V@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[(Key, V1)]): LinkedHashMap[Key, V1]", "member" : "scala.collection.MapOps.++:", "link" : "prolog\/fluents\/DataBase.html#++:[V1>:V](that:scala.collection.IterableOnce[(K,V1)]):CC[K,V1]", "kind" : "def"}, {"label" : "--", "tail" : "(keys: IterableOnce[Key]): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.MapOps.--", "link" : "prolog\/fluents\/DataBase.html#--(keys:scala.collection.IterableOnce[K]):C", "kind" : "def"}, {"label" : "+", "tail" : "(kv: (Key, V1)): LinkedHashMap[Key, V1]", "member" : "scala.collection.MapOps.+", "link" : "prolog\/fluents\/DataBase.html#+[V1>:V](kv:(K,V1)):CC[K,V1]", "kind" : "def"}, {"label" : "addString", "tail" : "(sb: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.MapOps.addString", "link" : "prolog\/fluents\/DataBase.html#addString(sb:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "++", "tail" : "(xs: IterableOnce[(Key, V2)]): LinkedHashMap[Key, V2]", "member" : "scala.collection.MapOps.++", "link" : "prolog\/fluents\/DataBase.html#++[V2>:V](xs:scala.collection.IterableOnce[(K,V2)]):CC[K,V2]", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(key: Key): Boolean", "member" : "scala.collection.MapOps.isDefinedAt", "link" : "prolog\/fluents\/DataBase.html#isDefinedAt(key:K):Boolean", "kind" : "def"}, {"label" : "default", "tail" : "(key: Key): Deque[List[Term]]", "member" : "scala.collection.MapOps.default", "link" : "prolog\/fluents\/DataBase.html#default(key:K):V", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (Deque[List[Term]]) => W): MapView[Key, W]", "member" : "scala.collection.MapOps.mapValues", "link" : "prolog\/fluents\/DataBase.html#mapValues[W](f:V=>W):scala.collection.MapView[K,W]", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(p: (Key) => Boolean): MapView[Key, Deque[List[Term]]]", "member" : "scala.collection.MapOps.filterKeys", "link" : "prolog\/fluents\/DataBase.html#filterKeys(p:K=>Boolean):scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "values", "tail" : "(): Iterable[Deque[List[Term]]]", "member" : "scala.collection.MapOps.values", "link" : "prolog\/fluents\/DataBase.html#values:Iterable[V]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Iterable[Key]", "member" : "scala.collection.MapOps.keys", "link" : "prolog\/fluents\/DataBase.html#keys:Iterable[K]", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: K1, default: (K1) => V1): V1", "member" : "scala.collection.MapOps.applyOrElse", "link" : "prolog\/fluents\/DataBase.html#applyOrElse[K1<:K,V1>:V](x:K1,default:K1=>V1):V1", "kind" : "def"}, {"label" : "apply", "tail" : "(key: Key): Deque[List[Term]]", "member" : "scala.collection.MapOps.apply", "link" : "prolog\/fluents\/DataBase.html#apply(key:K):V", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(key: Key, default: => V1): V1", "member" : "scala.collection.MapOps.getOrElse", "link" : "prolog\/fluents\/DataBase.html#getOrElse[V1>:V](key:K,default:=>V1):V1", "kind" : "def"}, {"label" : "mapFromIterable", "tail" : "(it: Iterable[(K2, V2)]): LinkedHashMap[K2, V2]", "member" : "scala.collection.MapOps.mapFromIterable", "link" : "prolog\/fluents\/DataBase.html#mapFromIterable[K2,V2](it:Iterable[(K2,V2)]):CC[K2,V2]", "kind" : "final def"}, {"label" : "valueStepper", "tail" : "(shape: StepperShape[Deque[List[Term]], S]): S", "member" : "scala.collection.MapOps.valueStepper", "link" : "prolog\/fluents\/DataBase.html#valueStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[V,S]):S", "kind" : "def"}, {"label" : "keyStepper", "tail" : "(shape: StepperShape[Key, S]): S", "member" : "scala.collection.MapOps.keyStepper", "link" : "prolog\/fluents\/DataBase.html#keyStepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[K,S]):S", "kind" : "def"}, {"label" : "view", "tail" : "(): MapView[Key, Deque[List[Term]]]", "member" : "scala.collection.MapOps.view", "link" : "prolog\/fluents\/DataBase.html#view:scala.collection.MapView[K,V]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Deque[List[Term]]) => U): (Key) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "prolog\/fluents\/DataBase.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Key) => Option[Deque[List[Term]]]", "member" : "scala.PartialFunction.lift", "link" : "prolog\/fluents\/DataBase.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Key]): PartialFunction[R, Deque[List[Term]]]", "member" : "scala.PartialFunction.compose", "link" : "prolog\/fluents\/DataBase.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Deque[List[Term]], C]): PartialFunction[Key, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/fluents\/DataBase.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Deque[List[Term]]) => C): PartialFunction[Key, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/fluents\/DataBase.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "prolog\/fluents\/DataBase.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Key, Deque[List[Term]]]", "member" : "scala.PartialFunction.elementWise", "link" : "prolog\/fluents\/DataBase.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Key): Option[Deque[List[Term]]]", "member" : "scala.PartialFunction.unapply", "link" : "prolog\/fluents\/DataBase.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Key): (A) => Deque[List[Term]]", "member" : "scala.Function1.compose", "link" : "prolog\/fluents\/DataBase.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[(Key, Deque[List[Term]]), B, DataBase.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "prolog\/fluents\/DataBase.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "prolog\/fluents\/DataBase.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): DataBase.this.type", "member" : "scala.collection.Iterable.seq", "link" : "prolog\/fluents\/DataBase.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): DataBase.this.type", "member" : "scala.collection.Iterable.coll", "link" : "prolog\/fluents\/DataBase.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): DataBase.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "prolog\/fluents\/DataBase.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "prolog\/fluents\/DataBase.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.IterableOps.inits", "link" : "prolog\/fluents\/DataBase.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.IterableOps.tails", "link" : "prolog\/fluents\/DataBase.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "prolog\/fluents\/DataBase.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "prolog\/fluents\/DataBase.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "prolog\/fluents\/DataBase.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: ((Key, Deque[List[Term]]), B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "prolog\/fluents\/DataBase.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "prolog\/fluents\/DataBase.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: ((Key, Deque[List[Term]])) => K)(f: ((Key, Deque[List[Term]])) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "prolog\/fluents\/DataBase.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: ((Key, Deque[List[Term]])) => K)(f: ((Key, Deque[List[Term]])) => B): Map[K, Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "prolog\/fluents\/DataBase.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: ((Key, Deque[List[Term]])) => K): Map[K, LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "prolog\/fluents\/DataBase.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.slice", "link" : "prolog\/fluents\/DataBase.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.init", "link" : "prolog\/fluents\/DataBase.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.tail", "link" : "prolog\/fluents\/DataBase.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/fluents\/DataBase.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/fluents\/DataBase.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[LinkedHashMap[Key, Deque[List[Term]]]]", "member" : "scala.collection.IterableOps.grouped", "link" : "prolog\/fluents\/DataBase.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "prolog\/fluents\/DataBase.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.drop", "link" : "prolog\/fluents\/DataBase.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "prolog\/fluents\/DataBase.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.take", "link" : "prolog\/fluents\/DataBase.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (LinkedHashMap[Key, Deque[List[Term]]], LinkedHashMap[Key, Deque[List[Term]]])", "member" : "scala.collection.IterableOps.splitAt", "link" : "prolog\/fluents\/DataBase.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: ((Key, Deque[List[Term]])) => Iterable[B]): Iterable[Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "prolog\/fluents\/DataBase.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOps.view", "link" : "prolog\/fluents\/DataBase.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "prolog\/fluents\/DataBase.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "prolog\/fluents\/DataBase.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "prolog\/fluents\/DataBase.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Iterable[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "prolog\/fluents\/DataBase.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): LinkedHashMap[Key, Deque[List[Term]]]", "member" : "scala.collection.IterableOps.repr", "link" : "prolog\/fluents\/DataBase.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "prolog\/fluents\/DataBase.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "prolog\/fluents\/DataBase.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/fluents\/DataBase.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/fluents\/DataBase.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/fluents\/DataBase.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/fluents\/DataBase.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/fluents\/DataBase.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/fluents\/DataBase.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/fluents\/DataBase.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[(Key, Deque[List[Term]]), (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/fluents\/DataBase.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/fluents\/DataBase.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/fluents\/DataBase.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/fluents\/DataBase.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[(Key, Deque[List[Term]]), C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/fluents\/DataBase.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/DataBase.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/DataBase.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/DataBase.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/DataBase.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/DataBase.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: ((Key, Deque[List[Term]]), B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/fluents\/DataBase.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, (Key, Deque[List[Term]])) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/fluents\/DataBase.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[(Key, Deque[List[Term]]), B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/fluents\/DataBase.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: ((Key, Deque[List[Term]])) => B)(cmp: Ordering[B]): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/fluents\/DataBase.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: ((Key, Deque[List[Term]])) => B)(cmp: Ordering[B]): (Key, Deque[List[Term]])", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/fluents\/DataBase.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: ((Key, Deque[List[Term]])) => B)(cmp: Ordering[B]): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/fluents\/DataBase.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: ((Key, Deque[List[Term]])) => B)(cmp: Ordering[B]): (Key, Deque[List[Term]])", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/fluents\/DataBase.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/fluents\/DataBase.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): (Key, Deque[List[Term]])", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/fluents\/DataBase.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/fluents\/DataBase.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): (Key, Deque[List[Term]])", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/fluents\/DataBase.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/fluents\/DataBase.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/fluents\/DataBase.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/DataBase.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/DataBase.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/DataBase.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/fluents\/DataBase.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/fluents\/DataBase.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: ((Key, Deque[List[Term]]), B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/fluents\/DataBase.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, (Key, Deque[List[Term]])) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/fluents\/DataBase.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: ((Key, Deque[List[Term]]), B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/fluents\/DataBase.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, (Key, Deque[List[Term]])) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/fluents\/DataBase.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/fluents\/DataBase.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/fluents\/DataBase.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/fluents\/DataBase.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: ((Key, Deque[List[Term]]), B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/fluents\/DataBase.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, (Key, Deque[List[Term]])) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/fluents\/DataBase.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: ((Key, Deque[List[Term]]), B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/fluents\/DataBase.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, (Key, Deque[List[Term]])) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/fluents\/DataBase.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): Option[(Key, Deque[List[Term]])]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/fluents\/DataBase.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/fluents\/DataBase.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/fluents\/DataBase.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: ((Key, Deque[List[Term]])) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/fluents\/DataBase.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "prolog\/fluents\/DataBase.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[(Key, Deque[List[Term]]), S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/fluents\/DataBase.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/DataBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/DataBase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/DataBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/DataBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/DataBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/DataBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/DataBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/DataBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/DataBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/DataBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/DataBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/DataBase.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/DataBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/DataBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/DataBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fun2key", "tail" : "(fn: Fun): Key", "member" : "prolog.fluents.DataBase.fun2key", "link" : "prolog\/fluents\/DataBase$.html#fun2key(fn:prolog.terms.Fun):prolog.fluents.Key", "kind" : "def"}, {"label" : "key2fun", "tail" : "(k: Key): Fun", "member" : "prolog.fluents.DataBase.key2fun", "link" : "prolog\/fluents\/DataBase$.html#key2fun(k:prolog.fluents.Key):prolog.terms.Fun", "kind" : "def"}, {"label" : "getParser", "tail" : "(): TermParser", "member" : "prolog.fluents.DataBase.getParser", "link" : "prolog\/fluents\/DataBase$.html#getParser:prolog.io.TermParser", "kind" : "def"}, {"label" : "getLib", "tail" : "(): List[List[Term]]", "member" : "prolog.fluents.DataBase.getLib", "link" : "prolog\/fluents\/DataBase$.html#getLib:List[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "lib", "tail" : ": List[List[Term]]", "member" : "prolog.fluents.DataBase.lib", "link" : "prolog\/fluents\/DataBase$.html#lib:List[List[prolog.terms.Term]]", "kind" : "val"}, {"label" : "parser", "tail" : ": TermParser", "member" : "prolog.fluents.DataBase.parser", "link" : "prolog\/fluents\/DataBase$.html#parser:prolog.io.TermParser", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/DataBase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/DataBase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/DataBase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/DataBase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/DataBase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/DataBase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/DataBase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/DataBase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/DataBase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/DataBase$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/DataBase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/DataBase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/fluents\/DataBase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/DataBase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/DataBase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/DataBase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/DataBase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/DataBase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/DataBase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/DataBase.html", "kind" : "class"}, {"name" : "prolog.fluents.Deque", "shortDescription" : "", "members_class" : [{"label" : "add", "tail" : "(x: T): Deque[T]", "member" : "prolog.fluents.Deque.add", "link" : "prolog\/fluents\/Deque.html#add(x:T):prolog.fluents.Deque[T]", "kind" : "def"}, {"label" : "push", "tail" : "(x: T): Deque[T]", "member" : "prolog.fluents.Deque.push", "link" : "prolog\/fluents\/Deque.html#push(x:T):prolog.fluents.Deque[T]", "kind" : "def"}, {"member" : "prolog.fluents.Deque#<init>", "error" : "unsupported entity"}, {"label" : "ofArray", "tail" : "(array: Array[AnyRef], end: Int): Queue[T]", "member" : "scala.collection.mutable.Queue.ofArray", "link" : "prolog\/fluents\/Deque.html#ofArray(array:Array[AnyRef],end:Int):scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "klone", "tail" : "(): Queue[T]", "member" : "scala.collection.mutable.Queue.klone", "link" : "prolog\/fluents\/Deque.html#klone():scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "front", "tail" : "(): T", "member" : "scala.collection.mutable.Queue.front", "link" : "prolog\/fluents\/Deque.html#front:A", "kind" : "final def"}, {"label" : "dequeueWhile", "tail" : "(f: (T) => Boolean): Seq[T]", "member" : "scala.collection.mutable.Queue.dequeueWhile", "link" : "prolog\/fluents\/Deque.html#dequeueWhile(f:A=>Boolean):scala.collection.Seq[A]", "kind" : "def"}, {"label" : "dequeueAll", "tail" : "(p: (T) => Boolean): Seq[T]", "member" : "scala.collection.mutable.Queue.dequeueAll", "link" : "prolog\/fluents\/Deque.html#dequeueAll(p:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "dequeueFirst", "tail" : "(p: (T) => Boolean): Option[T]", "member" : "scala.collection.mutable.Queue.dequeueFirst", "link" : "prolog\/fluents\/Deque.html#dequeueFirst(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "dequeue", "tail" : "(): T", "member" : "scala.collection.mutable.Queue.dequeue", "link" : "prolog\/fluents\/Deque.html#dequeue():A", "kind" : "def"}, {"label" : "enqueueAll", "tail" : "(elems: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.Queue.enqueueAll", "link" : "prolog\/fluents\/Deque.html#enqueueAll(elems:scala.collection.IterableOnce[A]):Queue.this.type", "kind" : "def"}, {"label" : "enqueue", "tail" : "(elem1: T, elem2: T, elems: T*): Deque.this.type", "member" : "scala.collection.mutable.Queue.enqueue", "link" : "prolog\/fluents\/Deque.html#enqueue(elem1:A,elem2:A,elems:A*):Queue.this.type", "kind" : "def"}, {"label" : "enqueue", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.Queue.enqueue", "link" : "prolog\/fluents\/Deque.html#enqueue(elem:A):Queue.this.type", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.mutable.Queue.stringPrefix", "link" : "prolog\/fluents\/Deque.html#stringPrefix:String", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[Queue]", "member" : "scala.collection.mutable.Queue.iterableFactory", "link" : "prolog\/fluents\/Deque.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.Queue]", "kind" : "def"}, {"label" : "start_+", "tail" : "(idx: Int): Int", "member" : "scala.collection.mutable.ArrayDeque.start_+", "link" : "prolog\/fluents\/Deque.html#start_+(idx:Int):Int", "kind" : "def"}, {"label" : "trimToSize", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayDeque.trimToSize", "link" : "prolog\/fluents\/Deque.html#trimToSize():Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.mutable.ArrayDeque.toArray", "link" : "prolog\/fluents\/Deque.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(dest: Array[B], destStart: Int, len: Int): Int", "member" : "scala.collection.mutable.ArrayDeque.copyToArray", "link" : "prolog\/fluents\/Deque.html#copyToArray[B>:A](dest:Array[B],destStart:Int,len:Int):Int", "kind" : "def"}, {"label" : "clearAndShrink", "tail" : "(size: Int): Deque.this.type", "member" : "scala.collection.mutable.ArrayDeque.clearAndShrink", "link" : "prolog\/fluents\/Deque.html#clearAndShrink(size:Int):ArrayDeque.this.type", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayDeque.clear", "link" : "prolog\/fluents\/Deque.html#clear():Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.ArrayDeque.isEmpty", "link" : "prolog\/fluents\/Deque.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayDeque.length", "link" : "prolog\/fluents\/Deque.html#length:Int", "kind" : "def"}, {"label" : "ensureSize", "tail" : "(hint: Int): Unit", "member" : "scala.collection.mutable.ArrayDeque.ensureSize", "link" : "prolog\/fluents\/Deque.html#ensureSize(hint:Int):Unit", "kind" : "def"}, {"label" : "removeAll", "tail" : "(p: (T) => Boolean): Seq[T]", "member" : "scala.collection.mutable.ArrayDeque.removeAll", "link" : "prolog\/fluents\/Deque.html#removeAll(p:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeFirst", "tail" : "(p: (T) => Boolean, from: Int): Option[T]", "member" : "scala.collection.mutable.ArrayDeque.removeFirst", "link" : "prolog\/fluents\/Deque.html#removeFirst(p:A=>Boolean,from:Int):Option[A]", "kind" : "def"}, {"label" : "removeLastWhile", "tail" : "(f: (T) => Boolean): Seq[T]", "member" : "scala.collection.mutable.ArrayDeque.removeLastWhile", "link" : "prolog\/fluents\/Deque.html#removeLastWhile(f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeHeadWhile", "tail" : "(f: (T) => Boolean): Seq[T]", "member" : "scala.collection.mutable.ArrayDeque.removeHeadWhile", "link" : "prolog\/fluents\/Deque.html#removeHeadWhile(f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "removeAllReverse", "tail" : "(): Seq[T]", "member" : "scala.collection.mutable.ArrayDeque.removeAllReverse", "link" : "prolog\/fluents\/Deque.html#removeAllReverse():Seq[A]", "kind" : "def"}, {"label" : "removeAll", "tail" : "(): Seq[T]", "member" : "scala.collection.mutable.ArrayDeque.removeAll", "link" : "prolog\/fluents\/Deque.html#removeAll():Seq[A]", "kind" : "def"}, {"label" : "removeLast", "tail" : "(resizeInternalRepr: Boolean): T", "member" : "scala.collection.mutable.ArrayDeque.removeLast", "link" : "prolog\/fluents\/Deque.html#removeLast(resizeInternalRepr:Boolean):A", "kind" : "def"}, {"label" : "removeLastOption", "tail" : "(resizeInternalRepr: Boolean): Option[T]", "member" : "scala.collection.mutable.ArrayDeque.removeLastOption", "link" : "prolog\/fluents\/Deque.html#removeLastOption(resizeInternalRepr:Boolean):Option[A]", "kind" : "def"}, {"label" : "removeHead", "tail" : "(resizeInternalRepr: Boolean): T", "member" : "scala.collection.mutable.ArrayDeque.removeHead", "link" : "prolog\/fluents\/Deque.html#removeHead(resizeInternalRepr:Boolean):A", "kind" : "def"}, {"label" : "removeHeadOption", "tail" : "(resizeInternalRepr: Boolean): Option[T]", "member" : "scala.collection.mutable.ArrayDeque.removeHeadOption", "link" : "prolog\/fluents\/Deque.html#removeHeadOption(resizeInternalRepr:Boolean):Option[A]", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.ArrayDeque.subtractOne", "link" : "prolog\/fluents\/Deque.html#subtractOne(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(idx: Int): T", "member" : "scala.collection.mutable.ArrayDeque.remove", "link" : "prolog\/fluents\/Deque.html#remove(idx:Int):A", "kind" : "def"}, {"label" : "remove", "tail" : "(idx: Int, count: Int): Unit", "member" : "scala.collection.mutable.ArrayDeque.remove", "link" : "prolog\/fluents\/Deque.html#remove(idx:Int,count:Int):Unit", "kind" : "def"}, {"label" : "insertAll", "tail" : "(idx: Int, elems: IterableOnce[T]): Unit", "member" : "scala.collection.mutable.ArrayDeque.insertAll", "link" : "prolog\/fluents\/Deque.html#insertAll(idx:Int,elems:scala.collection.IterableOnce[A]):Unit", "kind" : "def"}, {"label" : "insert", "tail" : "(idx: Int, elem: T): Unit", "member" : "scala.collection.mutable.ArrayDeque.insert", "link" : "prolog\/fluents\/Deque.html#insert(idx:Int,elem:A):Unit", "kind" : "def"}, {"label" : "addAll", "tail" : "(elems: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.ArrayDeque.addAll", "link" : "prolog\/fluents\/Deque.html#addAll(elems:scala.collection.IterableOnce[A]):ArrayDeque.this.type", "kind" : "def"}, {"label" : "prependAll", "tail" : "(elems: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.ArrayDeque.prependAll", "link" : "prolog\/fluents\/Deque.html#prependAll(elems:scala.collection.IterableOnce[A]):ArrayDeque.this.type", "kind" : "def"}, {"label" : "prepend", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.ArrayDeque.prepend", "link" : "prolog\/fluents\/Deque.html#prepend(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.ArrayDeque.addOne", "link" : "prolog\/fluents\/Deque.html#addOne(elem:A):ArrayDeque.this.type", "kind" : "def"}, {"label" : "update", "tail" : "(idx: Int, elem: T): Unit", "member" : "scala.collection.mutable.ArrayDeque.update", "link" : "prolog\/fluents\/Deque.html#update(idx:Int,elem:A):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): T", "member" : "scala.collection.mutable.ArrayDeque.apply", "link" : "prolog\/fluents\/Deque.html#apply(idx:Int):A", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[T, S]): S with EfficientSplit", "member" : "scala.collection.mutable.ArrayDeque.stepper", "link" : "prolog\/fluents\/Deque.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayDeque.knownSize", "link" : "prolog\/fluents\/Deque.html#knownSize:Int", "kind" : "def"}, {"label" : "array", "tail" : ": Array[AnyRef]", "member" : "scala.collection.mutable.ArrayDeque.array", "link" : "prolog\/fluents\/Deque.html#array:Array[AnyRef]", "kind" : "var"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scala.collection.generic.DefaultSerializable.writeReplace", "link" : "prolog\/fluents\/Deque.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "grouped", "tail" : "(n: Int): Iterator[Queue[T]]", "member" : "scala.collection.mutable.ArrayDequeOps.grouped", "link" : "prolog\/fluents\/Deque.html#grouped(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(window: Int, step: Int): Iterator[Queue[T]]", "member" : "scala.collection.mutable.ArrayDequeOps.sliding", "link" : "prolog\/fluents\/Deque.html#sliding(window:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Queue[T]", "member" : "scala.collection.mutable.ArrayDequeOps.slice", "link" : "prolog\/fluents\/Deque.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Queue[T]", "member" : "scala.collection.mutable.ArrayDequeOps.reverse", "link" : "prolog\/fluents\/Deque.html#reverse:C", "kind" : "def"}, {"label" : "copySliceToArray", "tail" : "(srcStart: Int, dest: Array[_], destStart: Int, maxItems: Int): dest.type", "member" : "scala.collection.mutable.ArrayDequeOps.copySliceToArray", "link" : "prolog\/fluents\/Deque.html#copySliceToArray(srcStart:Int,dest:Array[_],destStart:Int,maxItems:Int):dest.type", "kind" : "def"}, {"label" : "requireBounds", "tail" : "(idx: Int, until: Int): Unit", "member" : "scala.collection.mutable.ArrayDequeOps.requireBounds", "link" : "prolog\/fluents\/Deque.html#requireBounds(idx:Int,until:Int):Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): Queue[T]", "member" : "scala.collection.mutable.ArrayDequeOps.clone", "link" : "prolog\/fluents\/Deque.html#clone():C", "kind" : "final def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Queue[T]", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "prolog\/fluents\/Deque.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Queue[T]", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "prolog\/fluents\/Deque.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Queue[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "prolog\/fluents\/Deque.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Queue[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "prolog\/fluents\/Deque.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Queue[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "prolog\/fluents\/Deque.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): Queue[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "prolog\/fluents\/Deque.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): Queue[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "prolog\/fluents\/Deque.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (T) => B): Queue[T]", "member" : "scala.collection.StrictOptimizedSeqOps.distinctBy", "link" : "prolog\/fluents\/Deque.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Queue[T]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "prolog\/fluents\/Deque.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Queue[T]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "prolog\/fluents\/Deque.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (T) => U): Queue[T]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "prolog\/fluents\/Deque.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (T) => Either[A1, A2]): (Queue[A1], Queue[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "prolog\/fluents\/Deque.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (T) => Boolean, isFlipped: Boolean): Queue[T]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "prolog\/fluents\/Deque.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (T) => Boolean): Queue[T]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "prolog\/fluents\/Deque.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (T) => Boolean): Queue[T]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "prolog\/fluents\/Deque.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) => B): Queue[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "prolog\/fluents\/Deque.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Queue[(T, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "prolog\/fluents\/Deque.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[(T, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "prolog\/fluents\/Deque.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Queue[(T, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "prolog\/fluents\/Deque.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (T) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "prolog\/fluents\/Deque.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (T) => IterableOnce[B]): Queue[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "prolog\/fluents\/Deque.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[T, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "prolog\/fluents\/Deque.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Queue[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "prolog\/fluents\/Deque.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "prolog\/fluents\/Deque.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (T) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "prolog\/fluents\/Deque.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (T) => IterableOnce[B]): Queue[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "prolog\/fluents\/Deque.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (T) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "prolog\/fluents\/Deque.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) => B): Queue[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "prolog\/fluents\/Deque.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (T) => (A1, A2, A3)): (Queue[A1], Queue[A2], Queue[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "prolog\/fluents\/Deque.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (T) => (A1, A2)): (Queue[A1], Queue[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "prolog\/fluents\/Deque.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) => Boolean): (Queue[T], Queue[T])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "prolog\/fluents\/Deque.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) => Boolean): (Queue[T], Queue[T])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "prolog\/fluents\/Deque.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "patchInPlace", "tail" : "(from: Int, patch: IterableOnce[T], replaced: Int): Deque.this.type", "member" : "scala.collection.mutable.IndexedBuffer.patchInPlace", "link" : "prolog\/fluents\/Deque.html#patchInPlace(from:Int,patch:scala.collection.IterableOnce[A],replaced:Int):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "filterInPlace", "tail" : "(p: (T) => Boolean): Deque.this.type", "member" : "scala.collection.mutable.IndexedBuffer.filterInPlace", "link" : "prolog\/fluents\/Deque.html#filterInPlace(p:A=>Boolean):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "flatMapInPlace", "tail" : "(f: (T) => IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.IndexedBuffer.flatMapInPlace", "link" : "prolog\/fluents\/Deque.html#flatMapInPlace(f:A=>scala.collection.IterableOnce[A]):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "sortInPlaceBy", "tail" : "(f: (T) => B)(ord: Ordering[B]): Deque.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceBy", "link" : "prolog\/fluents\/Deque.html#sortInPlaceBy[B](f:A=>B)(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlaceWith", "tail" : "(lt: (T, T) => Boolean): Deque.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceWith", "link" : "prolog\/fluents\/Deque.html#sortInPlaceWith(lt:(A,A)=>Boolean):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlace", "tail" : "()(ord: Ordering[B]): Deque.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlace", "link" : "prolog\/fluents\/Deque.html#sortInPlace[B>:A]()(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "mapInPlace", "tail" : "(f: (T) => T): Deque.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.mapInPlace", "link" : "prolog\/fluents\/Deque.html#mapInPlace(f:A=>A):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "prolog\/fluents\/Deque.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "prolog\/fluents\/Deque.html#search[B>:A](elem:B)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "prolog\/fluents\/Deque.html#lengthCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "prolog\/fluents\/Deque.html#lengthCompare(len:Int):Int", "kind" : "final def"}, {"label" : "last", "tail" : "(): T", "member" : "scala.collection.IndexedSeqOps.last", "link" : "prolog\/fluents\/Deque.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "scala.collection.IndexedSeqOps.headOption", "link" : "prolog\/fluents\/Deque.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): T", "member" : "scala.collection.IndexedSeqOps.head", "link" : "prolog\/fluents\/Deque.html#head:A", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Queue[T]", "member" : "scala.collection.IndexedSeqOps.drop", "link" : "prolog\/fluents\/Deque.html#drop(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Queue[T]", "member" : "scala.collection.IndexedSeqOps.take", "link" : "prolog\/fluents\/Deque.html#take(n:Int):C", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Iterable[T]", "member" : "scala.collection.IndexedSeqOps.reversed", "link" : "prolog\/fluents\/Deque.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[T]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "prolog\/fluents\/Deque.html#view(from:Int,until:Int):scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "view", "tail" : "(): IndexedSeqView[T]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "prolog\/fluents\/Deque.html#view:scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) => B): B", "member" : "scala.collection.IndexedSeqOps.foldRight", "link" : "prolog\/fluents\/Deque.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IndexedSeqOps.reverseIterator", "link" : "prolog\/fluents\/Deque.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IndexedSeqOps.iterator", "link" : "prolog\/fluents\/Deque.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "padToInPlace", "tail" : "(len: Int, elem: T): Deque.this.type", "member" : "scala.collection.mutable.Buffer.padToInPlace", "link" : "prolog\/fluents\/Deque.html#padToInPlace(len:Int,elem:A):Buffer.this.type", "kind" : "def"}, {"label" : "takeWhileInPlace", "tail" : "(p: (T) => Boolean): Deque.this.type", "member" : "scala.collection.mutable.Buffer.takeWhileInPlace", "link" : "prolog\/fluents\/Deque.html#takeWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "dropWhileInPlace", "tail" : "(p: (T) => Boolean): Deque.this.type", "member" : "scala.collection.mutable.Buffer.dropWhileInPlace", "link" : "prolog\/fluents\/Deque.html#dropWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "sliceInPlace", "tail" : "(start: Int, end: Int): Deque.this.type", "member" : "scala.collection.mutable.Buffer.sliceInPlace", "link" : "prolog\/fluents\/Deque.html#sliceInPlace(start:Int,end:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeRightInPlace", "tail" : "(n: Int): Deque.this.type", "member" : "scala.collection.mutable.Buffer.takeRightInPlace", "link" : "prolog\/fluents\/Deque.html#takeRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeInPlace", "tail" : "(n: Int): Deque.this.type", "member" : "scala.collection.mutable.Buffer.takeInPlace", "link" : "prolog\/fluents\/Deque.html#takeInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropRightInPlace", "tail" : "(n: Int): Deque.this.type", "member" : "scala.collection.mutable.Buffer.dropRightInPlace", "link" : "prolog\/fluents\/Deque.html#dropRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropInPlace", "tail" : "(n: Int): Deque.this.type", "member" : "scala.collection.mutable.Buffer.dropInPlace", "link" : "prolog\/fluents\/Deque.html#dropInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "trimEnd", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimEnd", "link" : "prolog\/fluents\/Deque.html#trimEnd(n:Int):Unit", "kind" : "def"}, {"label" : "trimStart", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimStart", "link" : "prolog\/fluents\/Deque.html#trimStart(n:Int):Unit", "kind" : "def"}, {"label" : "++=:", "tail" : "(elems: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.Buffer.++=:", "link" : "prolog\/fluents\/Deque.html#++=:(elems:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "prepend", "tail" : "(elems: T*): Deque.this.type", "member" : "scala.collection.mutable.Buffer.prepend", "link" : "prolog\/fluents\/Deque.html#prepend(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "+=:", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.Buffer.+=:", "link" : "prolog\/fluents\/Deque.html#+=:(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "appendAll", "tail" : "(xs: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.Buffer.appendAll", "link" : "prolog\/fluents\/Deque.html#appendAll(xs:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elems: T*): Deque.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "prolog\/fluents\/Deque.html#append(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "prolog\/fluents\/Deque.html#append(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "prolog\/fluents\/Deque.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.Shrinkable.subtractAll", "link" : "prolog\/fluents\/Deque.html#subtractAll(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: T, elem2: T, elems: T*): Deque.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/fluents\/Deque.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "prolog\/fluents\/Deque.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "++=", "tail" : "(xs: IterableOnce[T]): Deque.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "prolog\/fluents\/Deque.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem1: T, elem2: T, elems: T*): Deque.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/fluents\/Deque.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: T): Deque.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "prolog\/fluents\/Deque.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (T) => T): Deque.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "prolog\/fluents\/Deque.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Seq.toString", "link" : "prolog\/fluents\/Deque.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "prolog\/fluents\/Deque.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "prolog\/fluents\/Deque.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "prolog\/fluents\/Deque.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "prolog\/fluents\/Deque.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): Queue[B]", "member" : "scala.collection.SeqOps.updated", "link" : "prolog\/fluents\/Deque.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Queue[B]", "member" : "scala.collection.SeqOps.patch", "link" : "prolog\/fluents\/Deque.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (T, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "prolog\/fluents\/Deque.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "prolog\/fluents\/Deque.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "prolog\/fluents\/Deque.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "prolog\/fluents\/Deque.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "prolog\/fluents\/Deque.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "prolog\/fluents\/Deque.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (T) => B)(ord: Ordering[B]): Queue[T]", "member" : "scala.collection.SeqOps.sortBy", "link" : "prolog\/fluents\/Deque.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (T, T) => Boolean): Queue[T]", "member" : "scala.collection.SeqOps.sortWith", "link" : "prolog\/fluents\/Deque.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Queue[T]", "member" : "scala.collection.SeqOps.sorted", "link" : "prolog\/fluents\/Deque.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Queue[T]]", "member" : "scala.collection.SeqOps.combinations", "link" : "prolog\/fluents\/Deque.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Queue[T]]", "member" : "scala.collection.SeqOps.permutations", "link" : "prolog\/fluents\/Deque.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (T) => B): Queue[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "prolog\/fluents\/Deque.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "prolog\/fluents\/Deque.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "prolog\/fluents\/Deque.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (T) => Boolean): Option[T]", "member" : "scala.collection.SeqOps.findLast", "link" : "prolog\/fluents\/Deque.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "prolog\/fluents\/Deque.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "prolog\/fluents\/Deque.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "prolog\/fluents\/Deque.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "prolog\/fluents\/Deque.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "prolog\/fluents\/Deque.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (T) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "prolog\/fluents\/Deque.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "prolog\/fluents\/Deque.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "prolog\/fluents\/Deque.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "prolog\/fluents\/Deque.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "prolog\/fluents\/Deque.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "prolog\/fluents\/Deque.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "prolog\/fluents\/Deque.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (T) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "prolog\/fluents\/Deque.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "prolog\/fluents\/Deque.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "prolog\/fluents\/Deque.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "prolog\/fluents\/Deque.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "prolog\/fluents\/Deque.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Queue[T]", "member" : "scala.collection.SeqOps.distinct", "link" : "prolog\/fluents\/Deque.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "prolog\/fluents\/Deque.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Queue[B]", "member" : "scala.collection.SeqOps.union", "link" : "prolog\/fluents\/Deque.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Queue[B]", "member" : "scala.collection.SeqOps.concat", "link" : "prolog\/fluents\/Deque.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Queue[B]", "member" : "scala.collection.SeqOps.:++", "link" : "prolog\/fluents\/Deque.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Queue[B]", "member" : "scala.collection.SeqOps.++:", "link" : "prolog\/fluents\/Deque.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): Queue[B]", "member" : "scala.collection.SeqOps.:+", "link" : "prolog\/fluents\/Deque.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): Queue[B]", "member" : "scala.collection.SeqOps.+:", "link" : "prolog\/fluents\/Deque.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(action: (T) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "prolog\/fluents\/Deque.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "prolog\/fluents\/Deque.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[T]", "member" : "scala.PartialFunction.lift", "link" : "prolog\/fluents\/Deque.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, T]", "member" : "scala.PartialFunction.compose", "link" : "prolog\/fluents\/Deque.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[T, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/fluents\/Deque.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (T) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "prolog\/fluents\/Deque.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "prolog\/fluents\/Deque.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, T]", "member" : "scala.PartialFunction.elementWise", "link" : "prolog\/fluents\/Deque.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[T]", "member" : "scala.PartialFunction.unapply", "link" : "prolog\/fluents\/Deque.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => T", "member" : "scala.Function1.compose", "link" : "prolog\/fluents\/Deque.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[T, B, Deque.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "prolog\/fluents\/Deque.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "prolog\/fluents\/Deque.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Deque.this.type", "member" : "scala.collection.Iterable.seq", "link" : "prolog\/fluents\/Deque.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Deque.this.type", "member" : "scala.collection.Iterable.coll", "link" : "prolog\/fluents\/Deque.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Deque.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "prolog\/fluents\/Deque.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Queue[T]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "prolog\/fluents\/Deque.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[T, Queue[T]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "prolog\/fluents\/Deque.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[T]): Queue[T]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "prolog\/fluents\/Deque.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Queue[T]]", "member" : "scala.collection.IterableOps.inits", "link" : "prolog\/fluents\/Deque.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Queue[T]]", "member" : "scala.collection.IterableOps.tails", "link" : "prolog\/fluents\/Deque.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Queue[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "prolog\/fluents\/Deque.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Queue[B]", "member" : "scala.collection.IterableOps.++", "link" : "prolog\/fluents\/Deque.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) => B): Queue[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "prolog\/fluents\/Deque.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Queue[B]", "member" : "scala.collection.IterableOps.scan", "link" : "prolog\/fluents\/Deque.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (T) => K)(f: (T) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "prolog\/fluents\/Deque.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (T) => K)(f: (T) => B): Map[K, Queue[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "prolog\/fluents\/Deque.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (T) => K): Map[K, Queue[T]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "prolog\/fluents\/Deque.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "init", "tail" : "(): Queue[T]", "member" : "scala.collection.IterableOps.init", "link" : "prolog\/fluents\/Deque.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Queue[T]", "member" : "scala.collection.IterableOps.tail", "link" : "prolog\/fluents\/Deque.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Queue[T]]", "member" : "scala.collection.IterableOps.sliding", "link" : "prolog\/fluents\/Deque.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) => Boolean): Queue[T]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "prolog\/fluents\/Deque.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) => Boolean): Queue[T]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "prolog\/fluents\/Deque.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Queue[T], Queue[T])", "member" : "scala.collection.IterableOps.splitAt", "link" : "prolog\/fluents\/Deque.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) => Boolean): WithFilter[T, [_]Queue[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "prolog\/fluents\/Deque.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (T) => Iterable[B]): Queue[Queue[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "prolog\/fluents\/Deque.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "prolog\/fluents\/Deque.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "scala.collection.IterableOps.lastOption", "link" : "prolog\/fluents\/Deque.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Queue[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "prolog\/fluents\/Deque.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Queue[T]", "member" : "scala.collection.IterableOps.repr", "link" : "prolog\/fluents\/Deque.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "prolog\/fluents\/Deque.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "prolog\/fluents\/Deque.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/fluents\/Deque.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/fluents\/Deque.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/fluents\/Deque.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/fluents\/Deque.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/fluents\/Deque.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/fluents\/Deque.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/fluents\/Deque.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/fluents\/Deque.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/fluents\/Deque.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[T, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/fluents\/Deque.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/Deque.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/Deque.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/Deque.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/Deque.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/Deque.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/Deque.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (T, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/fluents\/Deque.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, T) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/fluents\/Deque.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/fluents\/Deque.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (T) => B)(cmp: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/fluents\/Deque.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) => B)(cmp: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/fluents\/Deque.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (T) => B)(cmp: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/fluents\/Deque.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) => B)(cmp: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/fluents\/Deque.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/fluents\/Deque.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/fluents\/Deque.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/fluents\/Deque.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/fluents\/Deque.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/fluents\/Deque.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/fluents\/Deque.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/Deque.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/Deque.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/fluents\/Deque.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/fluents\/Deque.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/fluents\/Deque.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/fluents\/Deque.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/fluents\/Deque.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/fluents\/Deque.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/fluents\/Deque.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/fluents\/Deque.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/fluents\/Deque.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/fluents\/Deque.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/fluents\/Deque.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/fluents\/Deque.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) => Boolean): Option[T]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/fluents\/Deque.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/fluents\/Deque.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/fluents\/Deque.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/fluents\/Deque.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/fluents\/Deque.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "prolog\/fluents\/Deque.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/Deque.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/Deque.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/Deque.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/Deque.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/Deque.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/Deque.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/Deque.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Deque.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Deque.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Deque.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/Deque.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/Deque.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/Deque.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/Deque.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/Deque.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/Deque.html", "kind" : "class"}, {"name" : "prolog.fluents.EmptySink", "shortDescription" : "", "members_class" : [{"label" : "collect", "tail" : "(): Const", "member" : "prolog.fluents.EmptySink.collect", "link" : "prolog\/fluents\/EmptySink.html#collect:prolog.terms.Const", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.fluents.EmptySink.stop", "link" : "prolog\/fluents\/EmptySink.html#stop():Unit", "kind" : "def"}, {"label" : "putElement", "tail" : "(x: Term): Int", "member" : "prolog.fluents.EmptySink.putElement", "link" : "prolog\/fluents\/EmptySink.html#putElement(x:prolog.terms.Term):Int", "kind" : "def"}, {"member" : "prolog.fluents.EmptySink#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/fluents\/EmptySink.html#name:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/fluents\/EmptySink.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/fluents\/EmptySink.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/fluents\/EmptySink.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/EmptySink.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/EmptySink.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/fluents\/EmptySink.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/fluents\/EmptySink.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/fluents\/EmptySink.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/fluents\/EmptySink.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/fluents\/EmptySink.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/fluents\/EmptySink.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/fluents\/EmptySink.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/EmptySink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/EmptySink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/EmptySink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/EmptySink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/EmptySink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/EmptySink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/EmptySink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/EmptySink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/EmptySink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/EmptySink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/EmptySink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/EmptySink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/EmptySink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/EmptySink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/EmptySink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/EmptySink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/EmptySink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/EmptySink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/EmptySink.html", "kind" : "class"}, {"name" : "prolog.fluents.Expander", "shortDescription" : "currently not used -- todo", "members_class" : [{"label" : "expandHeadTerm", "tail" : "(h: Term): Term", "member" : "prolog.fluents.Expander.expandHeadTerm", "link" : "prolog\/fluents\/Expander.html#expandHeadTerm(h:prolog.terms.Term):prolog.terms.Term", "kind" : "def"}, {"label" : "code", "tail" : ": ArrayBuffer[Term]", "member" : "prolog.fluents.Expander.code", "link" : "prolog\/fluents\/Expander.html#code:scala.collection.mutable.ArrayBuffer[prolog.terms.Term]", "kind" : "val"}, {"label" : "map", "tail" : ": LinkedHashMap[Var, Var]", "member" : "prolog.fluents.Expander.map", "link" : "prolog\/fluents\/Expander.html#map:scala.collection.mutable.LinkedHashMap[prolog.terms.Var,prolog.terms.Var]", "kind" : "val"}, {"member" : "prolog.fluents.Expander#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/Expander.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/Expander.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/Expander.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/Expander.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/Expander.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/Expander.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/Expander.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Expander.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Expander.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Expander.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/Expander.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/Expander.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/fluents\/Expander.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/Expander.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/Expander.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/Expander.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/Expander.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/Expander.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/Expander.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/Expander.html", "kind" : "class"}, {"name" : "prolog.fluents.IntegerSource", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/fluents\/IntegerSource.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.fluents.IntegerSource.toString", "link" : "prolog\/fluents\/IntegerSource.html#toString():String", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.fluents.IntegerSource.stop", "link" : "prolog\/fluents\/IntegerSource.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.fluents.IntegerSource.getElement", "link" : "prolog\/fluents\/IntegerSource.html#getElement():prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.fluents.IntegerSource#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": Int", "member" : "prolog.fluents.IntegerSource.x", "link" : "prolog\/fluents\/IntegerSource.html#x:Int", "kind" : "var"}, {"label" : "fuel", "tail" : ": Int", "member" : "prolog.fluents.IntegerSource.fuel", "link" : "prolog\/fluents\/IntegerSource.html#fuel:Int", "kind" : "var"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/fluents\/IntegerSource.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/fluents\/IntegerSource.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/fluents\/IntegerSource.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/fluents\/IntegerSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/fluents\/IntegerSource.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/fluents\/IntegerSource.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/fluents\/IntegerSource.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): IntegerSource.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/fluents\/IntegerSource.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/fluents\/IntegerSource.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/fluents\/IntegerSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/fluents\/IntegerSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/fluents\/IntegerSource.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/fluents\/IntegerSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/fluents\/IntegerSource.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/fluents\/IntegerSource.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/fluents\/IntegerSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/fluents\/IntegerSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/fluents\/IntegerSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/fluents\/IntegerSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/fluents\/IntegerSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/fluents\/IntegerSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/fluents\/IntegerSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/fluents\/IntegerSource.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/fluents\/IntegerSource.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/fluents\/IntegerSource.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/fluents\/IntegerSource.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/fluents\/IntegerSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/fluents\/IntegerSource.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/fluents\/IntegerSource.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/fluents\/IntegerSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/fluents\/IntegerSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/fluents\/IntegerSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/fluents\/IntegerSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/fluents\/IntegerSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/fluents\/IntegerSource.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/fluents\/IntegerSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/fluents\/IntegerSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/fluents\/IntegerSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/fluents\/IntegerSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/fluents\/IntegerSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/fluents\/IntegerSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/fluents\/IntegerSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/fluents\/IntegerSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/fluents\/IntegerSource.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/fluents\/IntegerSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/fluents\/IntegerSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/fluents\/IntegerSource.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/fluents\/IntegerSource.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/fluents\/IntegerSource.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/fluents\/IntegerSource.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/fluents\/IntegerSource.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/fluents\/IntegerSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/fluents\/IntegerSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/fluents\/IntegerSource.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/fluents\/IntegerSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/fluents\/IntegerSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/fluents\/IntegerSource.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/fluents\/IntegerSource.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/fluents\/IntegerSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/fluents\/IntegerSource.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/fluents\/IntegerSource.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/IntegerSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/IntegerSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/IntegerSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/IntegerSource.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/IntegerSource.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/IntegerSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/fluents\/IntegerSource.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/fluents\/IntegerSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/fluents\/IntegerSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/fluents\/IntegerSource.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/fluents\/IntegerSource.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/fluents\/IntegerSource.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/fluents\/IntegerSource.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/fluents\/IntegerSource.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/fluents\/IntegerSource.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/fluents\/IntegerSource.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/fluents\/IntegerSource.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/fluents\/IntegerSource.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/fluents\/IntegerSource.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/IntegerSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/IntegerSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/IntegerSource.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/fluents\/IntegerSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/fluents\/IntegerSource.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/fluents\/IntegerSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/fluents\/IntegerSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/fluents\/IntegerSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/fluents\/IntegerSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/fluents\/IntegerSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/fluents\/IntegerSource.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/fluents\/IntegerSource.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/fluents\/IntegerSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/fluents\/IntegerSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/fluents\/IntegerSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/fluents\/IntegerSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/fluents\/IntegerSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/fluents\/IntegerSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/fluents\/IntegerSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/fluents\/IntegerSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/fluents\/IntegerSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/fluents\/IntegerSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/fluents\/IntegerSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/fluents\/IntegerSource.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/fluents\/IntegerSource.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/fluents\/IntegerSource.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/fluents\/IntegerSource.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/fluents\/IntegerSource.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/fluents\/IntegerSource.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/IntegerSource.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/IntegerSource.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/fluents\/IntegerSource.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/fluents\/IntegerSource.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/fluents\/IntegerSource.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/fluents\/IntegerSource.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/fluents\/IntegerSource.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/fluents\/IntegerSource.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/fluents\/IntegerSource.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/IntegerSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/IntegerSource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/IntegerSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/IntegerSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/IntegerSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/IntegerSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/IntegerSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/IntegerSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/IntegerSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/IntegerSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/IntegerSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/IntegerSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/IntegerSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/IntegerSource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/IntegerSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/IntegerSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/IntegerSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/IntegerSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/IntegerSource.html", "kind" : "class"}, {"name" : "prolog.fluents.IteratorSource", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/fluents\/IteratorSource.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.fluents.IteratorSource.stop", "link" : "prolog\/fluents\/IteratorSource.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.fluents.IteratorSource.getElement", "link" : "prolog\/fluents\/IteratorSource.html#getElement():prolog.terms.Term", "kind" : "def"}, {"member" : "prolog.fluents.IteratorSource#<init>", "error" : "unsupported entity"}, {"label" : "i", "tail" : ": Iterator[Any]", "member" : "prolog.fluents.IteratorSource.i", "link" : "prolog\/fluents\/IteratorSource.html#i:Iterator[Any]", "kind" : "var"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/fluents\/IteratorSource.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/fluents\/IteratorSource.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/fluents\/IteratorSource.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/fluents\/IteratorSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/fluents\/IteratorSource.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/fluents\/IteratorSource.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/fluents\/IteratorSource.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): IteratorSource.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/fluents\/IteratorSource.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "prolog\/fluents\/IteratorSource.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/fluents\/IteratorSource.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/fluents\/IteratorSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/fluents\/IteratorSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/fluents\/IteratorSource.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/fluents\/IteratorSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/fluents\/IteratorSource.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/fluents\/IteratorSource.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/fluents\/IteratorSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/fluents\/IteratorSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/fluents\/IteratorSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/fluents\/IteratorSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/fluents\/IteratorSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/fluents\/IteratorSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/fluents\/IteratorSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/fluents\/IteratorSource.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/fluents\/IteratorSource.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/fluents\/IteratorSource.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/fluents\/IteratorSource.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/fluents\/IteratorSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/fluents\/IteratorSource.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/fluents\/IteratorSource.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/fluents\/IteratorSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/fluents\/IteratorSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/fluents\/IteratorSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/fluents\/IteratorSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/fluents\/IteratorSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/fluents\/IteratorSource.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/fluents\/IteratorSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/fluents\/IteratorSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/fluents\/IteratorSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/fluents\/IteratorSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/fluents\/IteratorSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/fluents\/IteratorSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/fluents\/IteratorSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/fluents\/IteratorSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/fluents\/IteratorSource.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/fluents\/IteratorSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/fluents\/IteratorSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/fluents\/IteratorSource.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/fluents\/IteratorSource.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/fluents\/IteratorSource.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/fluents\/IteratorSource.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/fluents\/IteratorSource.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/fluents\/IteratorSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/fluents\/IteratorSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/fluents\/IteratorSource.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/fluents\/IteratorSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/fluents\/IteratorSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/fluents\/IteratorSource.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/fluents\/IteratorSource.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/fluents\/IteratorSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/fluents\/IteratorSource.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/fluents\/IteratorSource.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/IteratorSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/IteratorSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/IteratorSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/IteratorSource.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/IteratorSource.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/IteratorSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/fluents\/IteratorSource.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/fluents\/IteratorSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/fluents\/IteratorSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/fluents\/IteratorSource.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/fluents\/IteratorSource.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/fluents\/IteratorSource.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/fluents\/IteratorSource.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/fluents\/IteratorSource.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/fluents\/IteratorSource.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/fluents\/IteratorSource.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/fluents\/IteratorSource.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/fluents\/IteratorSource.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/fluents\/IteratorSource.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/IteratorSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/IteratorSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/IteratorSource.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/fluents\/IteratorSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/fluents\/IteratorSource.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/fluents\/IteratorSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/fluents\/IteratorSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/fluents\/IteratorSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/fluents\/IteratorSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/fluents\/IteratorSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/fluents\/IteratorSource.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/fluents\/IteratorSource.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/fluents\/IteratorSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/fluents\/IteratorSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/fluents\/IteratorSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/fluents\/IteratorSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/fluents\/IteratorSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/fluents\/IteratorSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/fluents\/IteratorSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/fluents\/IteratorSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/fluents\/IteratorSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/fluents\/IteratorSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/fluents\/IteratorSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/fluents\/IteratorSource.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/fluents\/IteratorSource.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/fluents\/IteratorSource.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/fluents\/IteratorSource.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/fluents\/IteratorSource.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/fluents\/IteratorSource.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/IteratorSource.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/IteratorSource.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/fluents\/IteratorSource.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/fluents\/IteratorSource.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/fluents\/IteratorSource.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/fluents\/IteratorSource.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/fluents\/IteratorSource.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/fluents\/IteratorSource.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/fluents\/IteratorSource.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/IteratorSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/IteratorSource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/IteratorSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/IteratorSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/IteratorSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/IteratorSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/IteratorSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/IteratorSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/IteratorSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/IteratorSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/IteratorSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/IteratorSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/IteratorSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/IteratorSource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/IteratorSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/IteratorSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/IteratorSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/IteratorSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/IteratorSource.html", "kind" : "class"}, {"name" : "prolog.fluents.Key", "shortDescription" : "", "members_case class" : [{"member" : "prolog.fluents.Key#<init>", "error" : "unsupported entity"}, {"label" : "n", "tail" : ": Int", "member" : "prolog.fluents.Key.n", "link" : "prolog\/fluents\/Key.html#n:Int", "kind" : "val"}, {"label" : "f", "tail" : ": String", "member" : "prolog.fluents.Key.f", "link" : "prolog\/fluents\/Key.html#f:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/fluents\/Key.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/Key.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/Key.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/Key.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/Key.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/Key.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/Key.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/Key.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Key.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Key.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Key.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/Key.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/Key.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/Key.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/Key.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/Key.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/Key.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/fluents\/Key.html", "kind" : "case class"}, {"name" : "prolog.fluents.Lib", "shortDescription" : "", "object" : "prolog\/fluents\/Lib$.html", "members_object" : [{"label" : "code", "tail" : ": String", "member" : "prolog.fluents.Lib.code", "link" : "prolog\/fluents\/Lib$.html#code:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/Lib$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/Lib$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/Lib$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/Lib$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/Lib$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/Lib$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/Lib$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Lib$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Lib$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/Lib$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/Lib$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/Lib$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/fluents\/Lib$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/Lib$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/Lib$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/Lib$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/Lib$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/Lib$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/Lib$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.fluents.RangeSource", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/fluents\/RangeSource.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.fluents.RangeSource.toString", "link" : "prolog\/fluents\/RangeSource.html#toString():String", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.fluents.RangeSource.stop", "link" : "prolog\/fluents\/RangeSource.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.fluents.RangeSource.getElement", "link" : "prolog\/fluents\/RangeSource.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "current", "tail" : ": Int", "member" : "prolog.fluents.RangeSource.current", "link" : "prolog\/fluents\/RangeSource.html#current:Int", "kind" : "var"}, {"member" : "prolog.fluents.RangeSource#<init>", "error" : "unsupported entity"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/fluents\/RangeSource.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/fluents\/RangeSource.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/fluents\/RangeSource.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/fluents\/RangeSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/fluents\/RangeSource.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/fluents\/RangeSource.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/fluents\/RangeSource.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): RangeSource.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/fluents\/RangeSource.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/fluents\/RangeSource.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/fluents\/RangeSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/fluents\/RangeSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/fluents\/RangeSource.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/fluents\/RangeSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/fluents\/RangeSource.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/fluents\/RangeSource.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/fluents\/RangeSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/fluents\/RangeSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/fluents\/RangeSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/fluents\/RangeSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/fluents\/RangeSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/fluents\/RangeSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/fluents\/RangeSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/fluents\/RangeSource.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/fluents\/RangeSource.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/fluents\/RangeSource.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/fluents\/RangeSource.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/fluents\/RangeSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/fluents\/RangeSource.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/fluents\/RangeSource.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/fluents\/RangeSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/fluents\/RangeSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/fluents\/RangeSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/fluents\/RangeSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/fluents\/RangeSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/fluents\/RangeSource.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/fluents\/RangeSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/fluents\/RangeSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/fluents\/RangeSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/fluents\/RangeSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/fluents\/RangeSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/fluents\/RangeSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/fluents\/RangeSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/fluents\/RangeSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/fluents\/RangeSource.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/fluents\/RangeSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/fluents\/RangeSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/fluents\/RangeSource.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/fluents\/RangeSource.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/fluents\/RangeSource.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/fluents\/RangeSource.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/fluents\/RangeSource.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/fluents\/RangeSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/fluents\/RangeSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/fluents\/RangeSource.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/fluents\/RangeSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/fluents\/RangeSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/fluents\/RangeSource.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/fluents\/RangeSource.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/fluents\/RangeSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/fluents\/RangeSource.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/fluents\/RangeSource.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/RangeSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/RangeSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/fluents\/RangeSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/RangeSource.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/RangeSource.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/fluents\/RangeSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/fluents\/RangeSource.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/fluents\/RangeSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/fluents\/RangeSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/fluents\/RangeSource.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/fluents\/RangeSource.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/fluents\/RangeSource.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/fluents\/RangeSource.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/fluents\/RangeSource.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/fluents\/RangeSource.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/fluents\/RangeSource.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/fluents\/RangeSource.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/fluents\/RangeSource.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/fluents\/RangeSource.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/RangeSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/RangeSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/fluents\/RangeSource.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/fluents\/RangeSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/fluents\/RangeSource.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/fluents\/RangeSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/fluents\/RangeSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/fluents\/RangeSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/fluents\/RangeSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/fluents\/RangeSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/fluents\/RangeSource.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/fluents\/RangeSource.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/fluents\/RangeSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/fluents\/RangeSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/fluents\/RangeSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/fluents\/RangeSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/fluents\/RangeSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/fluents\/RangeSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/fluents\/RangeSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/fluents\/RangeSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/fluents\/RangeSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/fluents\/RangeSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/fluents\/RangeSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/fluents\/RangeSource.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/fluents\/RangeSource.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/fluents\/RangeSource.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/fluents\/RangeSource.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/fluents\/RangeSource.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/fluents\/RangeSource.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/RangeSource.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/RangeSource.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/fluents\/RangeSource.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/fluents\/RangeSource.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/fluents\/RangeSource.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/fluents\/RangeSource.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/fluents\/RangeSource.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/fluents\/RangeSource.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/fluents\/RangeSource.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/RangeSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/RangeSource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/RangeSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/RangeSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/RangeSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/RangeSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/RangeSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/RangeSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/RangeSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/RangeSource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/RangeSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/RangeSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/RangeSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/RangeSource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/RangeSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/RangeSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/RangeSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/RangeSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/RangeSource.html", "kind" : "class"}, {"name" : "prolog.fluents.StringSink", "shortDescription" : "", "members_class" : [{"label" : "collect", "tail" : "(): Const", "member" : "prolog.fluents.StringSink.collect", "link" : "prolog\/fluents\/StringSink.html#collect:prolog.terms.Const", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.fluents.StringSink.stop", "link" : "prolog\/fluents\/StringSink.html#stop():Unit", "kind" : "def"}, {"label" : "putElement", "tail" : "(x: Term): Int", "member" : "prolog.fluents.StringSink.putElement", "link" : "prolog\/fluents\/StringSink.html#putElement(x:prolog.terms.Term):Int", "kind" : "def"}, {"label" : "s", "tail" : ": StringBuilder", "member" : "prolog.fluents.StringSink.s", "link" : "prolog\/fluents\/StringSink.html#s:StringBuilder", "kind" : "var"}, {"member" : "prolog.fluents.StringSink#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/fluents\/StringSink.html#name:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Nonvar.toString", "link" : "prolog\/fluents\/StringSink.html#toString():String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/fluents\/StringSink.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/fluents\/StringSink.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/StringSink.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/fluents\/StringSink.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/fluents\/StringSink.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/fluents\/StringSink.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/fluents\/StringSink.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/fluents\/StringSink.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/fluents\/StringSink.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/fluents\/StringSink.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/fluents\/StringSink.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/fluents\/StringSink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/fluents\/StringSink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/fluents\/StringSink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/fluents\/StringSink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/fluents\/StringSink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/fluents\/StringSink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/fluents\/StringSink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/StringSink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/StringSink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/fluents\/StringSink.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/fluents\/StringSink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/fluents\/StringSink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/fluents\/StringSink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/fluents\/StringSink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/fluents\/StringSink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/fluents\/StringSink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/fluents\/StringSink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/fluents\/StringSink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/fluents\/StringSink.html", "kind" : "class"}], "prolog.io" : [{"name" : "prolog.io.CharReader", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/io\/CharReader.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.io.CharReader.toString", "link" : "prolog\/io\/CharReader.html#toString():String", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.io.CharReader.stop", "link" : "prolog\/io\/CharReader.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.io.CharReader.getElement", "link" : "prolog\/io\/CharReader.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "in", "tail" : ": BufferedSource", "member" : "prolog.io.CharReader.in", "link" : "prolog\/io\/CharReader.html#in:scala.io.BufferedSource", "kind" : "val"}, {"member" : "prolog.io.CharReader#<init>", "error" : "unsupported entity"}, {"label" : "fname", "tail" : ": String", "member" : "prolog.io.CharReader.fname", "link" : "prolog\/io\/CharReader.html#fname:String", "kind" : "val"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/io\/CharReader.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/io\/CharReader.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/io\/CharReader.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/io\/CharReader.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/io\/CharReader.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/io\/CharReader.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/io\/CharReader.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): CharReader.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/io\/CharReader.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/io\/CharReader.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/io\/CharReader.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/io\/CharReader.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/io\/CharReader.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/io\/CharReader.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/io\/CharReader.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/io\/CharReader.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/io\/CharReader.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/io\/CharReader.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/io\/CharReader.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/io\/CharReader.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/io\/CharReader.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/io\/CharReader.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/io\/CharReader.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/io\/CharReader.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/io\/CharReader.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/io\/CharReader.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/io\/CharReader.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/io\/CharReader.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/io\/CharReader.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/io\/CharReader.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/io\/CharReader.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/io\/CharReader.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/io\/CharReader.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/io\/CharReader.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/io\/CharReader.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/io\/CharReader.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/io\/CharReader.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/io\/CharReader.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/io\/CharReader.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/io\/CharReader.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/io\/CharReader.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/io\/CharReader.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/io\/CharReader.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/io\/CharReader.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/io\/CharReader.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/io\/CharReader.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/io\/CharReader.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/io\/CharReader.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/io\/CharReader.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/io\/CharReader.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/io\/CharReader.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/io\/CharReader.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/io\/CharReader.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/io\/CharReader.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/io\/CharReader.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/io\/CharReader.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/io\/CharReader.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/io\/CharReader.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/io\/CharReader.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/io\/CharReader.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/io\/CharReader.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/io\/CharReader.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/io\/CharReader.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/io\/CharReader.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/io\/CharReader.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/io\/CharReader.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/io\/CharReader.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/io\/CharReader.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/io\/CharReader.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/io\/CharReader.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/io\/CharReader.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/io\/CharReader.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/io\/CharReader.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/io\/CharReader.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/io\/CharReader.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/io\/CharReader.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/io\/CharReader.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/io\/CharReader.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/io\/CharReader.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/io\/CharReader.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/io\/CharReader.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/io\/CharReader.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/io\/CharReader.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/io\/CharReader.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/io\/CharReader.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/io\/CharReader.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/io\/CharReader.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/io\/CharReader.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/io\/CharReader.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/io\/CharReader.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/io\/CharReader.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/io\/CharReader.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/io\/CharReader.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/io\/CharReader.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/io\/CharReader.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/io\/CharReader.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/io\/CharReader.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/io\/CharReader.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/io\/CharReader.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/io\/CharReader.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/io\/CharReader.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/io\/CharReader.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/io\/CharReader.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/io\/CharReader.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/io\/CharReader.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/io\/CharReader.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/io\/CharReader.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/io\/CharReader.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/io\/CharReader.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/io\/CharReader.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/io\/CharReader.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/io\/CharReader.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/io\/CharReader.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/io\/CharReader.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/io\/CharReader.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/io\/CharReader.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/io\/CharReader.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/io\/CharReader.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/io\/CharReader.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/io\/CharReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/io\/CharReader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/io\/CharReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/io\/CharReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/io\/CharReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/io\/CharReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/io\/CharReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/CharReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/CharReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/CharReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/io\/CharReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/io\/CharReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/io\/CharReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/io\/CharReader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/io\/CharReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/io\/CharReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/io\/CharReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/io\/CharReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/io\/CharReader.html", "kind" : "class"}, {"name" : "prolog.io.ClauseReader", "shortDescription" : "", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/io\/ClauseReader.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.io.ClauseReader.toString", "link" : "prolog\/io\/ClauseReader.html#toString():String", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.io.ClauseReader.stop", "link" : "prolog\/io\/ClauseReader.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.io.ClauseReader.getElement", "link" : "prolog\/io\/ClauseReader.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "clauses", "tail" : ": Iterator[List[Term]]", "member" : "prolog.io.ClauseReader.clauses", "link" : "prolog\/io\/ClauseReader.html#clauses:Iterator[List[prolog.terms.Term]]", "kind" : "val"}, {"label" : "parser", "tail" : ": TermParser", "member" : "prolog.io.ClauseReader.parser", "link" : "prolog\/io\/ClauseReader.html#parser:prolog.io.TermParser", "kind" : "val"}, {"member" : "prolog.io.ClauseReader#<init>", "error" : "unsupported entity"}, {"label" : "fname", "tail" : ": String", "member" : "prolog.io.ClauseReader.fname", "link" : "prolog\/io\/ClauseReader.html#fname:String", "kind" : "val"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/io\/ClauseReader.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/io\/ClauseReader.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/io\/ClauseReader.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/io\/ClauseReader.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/io\/ClauseReader.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/io\/ClauseReader.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/io\/ClauseReader.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): ClauseReader.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/io\/ClauseReader.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/io\/ClauseReader.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/io\/ClauseReader.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/io\/ClauseReader.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/io\/ClauseReader.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/io\/ClauseReader.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/io\/ClauseReader.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/io\/ClauseReader.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/io\/ClauseReader.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/io\/ClauseReader.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/io\/ClauseReader.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/io\/ClauseReader.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/io\/ClauseReader.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/io\/ClauseReader.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/io\/ClauseReader.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/io\/ClauseReader.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/io\/ClauseReader.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/io\/ClauseReader.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/io\/ClauseReader.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/io\/ClauseReader.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/io\/ClauseReader.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/io\/ClauseReader.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/io\/ClauseReader.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/io\/ClauseReader.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/io\/ClauseReader.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/io\/ClauseReader.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/io\/ClauseReader.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/io\/ClauseReader.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/io\/ClauseReader.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/io\/ClauseReader.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/io\/ClauseReader.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/io\/ClauseReader.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/io\/ClauseReader.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/io\/ClauseReader.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/io\/ClauseReader.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/io\/ClauseReader.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/io\/ClauseReader.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/io\/ClauseReader.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/io\/ClauseReader.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/io\/ClauseReader.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/io\/ClauseReader.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/io\/ClauseReader.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/io\/ClauseReader.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/io\/ClauseReader.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/io\/ClauseReader.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/io\/ClauseReader.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/io\/ClauseReader.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/io\/ClauseReader.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/io\/ClauseReader.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/io\/ClauseReader.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/io\/ClauseReader.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/io\/ClauseReader.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/io\/ClauseReader.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/io\/ClauseReader.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/io\/ClauseReader.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/io\/ClauseReader.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/io\/ClauseReader.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/io\/ClauseReader.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/io\/ClauseReader.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/io\/ClauseReader.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/io\/ClauseReader.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/io\/ClauseReader.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/io\/ClauseReader.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/io\/ClauseReader.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/io\/ClauseReader.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/io\/ClauseReader.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/io\/ClauseReader.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/io\/ClauseReader.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/io\/ClauseReader.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/io\/ClauseReader.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/io\/ClauseReader.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/io\/ClauseReader.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/io\/ClauseReader.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/io\/ClauseReader.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/io\/ClauseReader.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/io\/ClauseReader.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/io\/ClauseReader.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/io\/ClauseReader.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/io\/ClauseReader.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/io\/ClauseReader.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/io\/ClauseReader.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/io\/ClauseReader.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/io\/ClauseReader.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/io\/ClauseReader.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/io\/ClauseReader.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/io\/ClauseReader.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/io\/ClauseReader.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/io\/ClauseReader.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/io\/ClauseReader.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/io\/ClauseReader.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/io\/ClauseReader.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/io\/ClauseReader.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/io\/ClauseReader.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/io\/ClauseReader.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/io\/ClauseReader.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/io\/ClauseReader.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/io\/ClauseReader.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/io\/ClauseReader.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/io\/ClauseReader.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/io\/ClauseReader.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/io\/ClauseReader.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/io\/ClauseReader.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/io\/ClauseReader.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/io\/ClauseReader.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/io\/ClauseReader.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/io\/ClauseReader.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/io\/ClauseReader.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/io\/ClauseReader.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/io\/ClauseReader.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/io\/ClauseReader.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/io\/ClauseReader.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/io\/ClauseReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/io\/ClauseReader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/io\/ClauseReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/io\/ClauseReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/io\/ClauseReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/io\/ClauseReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/io\/ClauseReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/ClauseReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/ClauseReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/ClauseReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/io\/ClauseReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/io\/ClauseReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/io\/ClauseReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/io\/ClauseReader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/io\/ClauseReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/io\/ClauseReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/io\/ClauseReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/io\/ClauseReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/io\/ClauseReader.html", "kind" : "class"}, {"name" : "prolog.io.IO", "shortDescription" : "", "object" : "prolog\/io\/IO$.html", "members_object" : [{"label" : "warnmes", "tail" : "(mes: String): Int", "member" : "prolog.io.IO.warnmes", "link" : "prolog\/io\/IO$.html#warnmes(mes:String):Int", "kind" : "def"}, {"label" : "errmes", "tail" : "(mes: String, culprit: Term, p: Prog): Int", "member" : "prolog.io.IO.errmes", "link" : "prolog\/io\/IO$.html#errmes(mes:String,culprit:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "print", "tail" : "(s: Any): Unit", "member" : "prolog.io.IO.print", "link" : "prolog\/io\/IO$.html#print(s:Any):Unit", "kind" : "def"}, {"label" : "printlnInfo", "tail" : "(s: Any): Unit", "member" : "prolog.io.IO.printlnInfo", "link" : "prolog\/io\/IO$.html#printlnInfo(s:Any):Unit", "kind" : "def"}, {"label" : "readLine", "tail" : "(prompt: String): String", "member" : "prolog.io.IO.readLine", "link" : "prolog\/io\/IO$.html#readLine(prompt:String):String", "kind" : "def"}, {"label" : "find_file", "tail" : "(f0: String): String", "member" : "prolog.io.IO.find_file", "link" : "prolog\/io\/IO$.html#find_file(f0:String):String", "kind" : "final def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.io.IO.stop", "link" : "prolog\/io\/IO$.html#stop:Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "prolog.io.IO.start", "link" : "prolog\/io\/IO$.html#start:Unit", "kind" : "def"}, {"label" : "t0", "tail" : ": Long", "member" : "prolog.io.IO.t0", "link" : "prolog\/io\/IO$.html#t0:Long", "kind" : "val"}, {"label" : "time", "tail" : "(): Long", "member" : "prolog.io.IO.time", "link" : "prolog\/io\/IO$.html#time:Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/io\/IO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/io\/IO$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/io\/IO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/io\/IO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/io\/IO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/io\/IO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/io\/IO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/IO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/IO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/IO$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/io\/IO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/io\/IO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/io\/IO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/io\/IO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/io\/IO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/io\/IO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/io\/IO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/io\/IO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/io\/IO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.io.TermParser", "shortDescription" : "", "object" : "prolog\/io\/TermParser$.html", "members_class" : [{"label" : "OnceParser", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.OnceParser", "link" : "prolog\/io\/TermParser.html#OnceParser[+T<:<?>]extendsParsers.this.Parser[T]", "kind" : "trait"}, {"label" : "~", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.~", "link" : "prolog\/io\/TermParser.html#~[+a,+b]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Parser", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.Parser", "link" : "prolog\/io\/TermParser.html#Parser[+T]extendsParsers.this.Input=>Parsers.this.ParseResult[T]", "kind" : "abstract class"}, {"label" : "Error", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.Error", "link" : "prolog\/io\/TermParser.html#ErrorextendsParsers.this.NoSuccesswithProductwithSerializable", "kind" : "case class"}, {"label" : "Failure", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.Failure", "link" : "prolog\/io\/TermParser.html#FailureextendsParsers.this.NoSuccesswithProductwithSerializable", "kind" : "case class"}, {"label" : "NoSuccess", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.NoSuccess", "link" : "prolog\/io\/TermParser.html#NoSuccessextendsParsers.this.ParseResult[Nothing]", "kind" : "sealed abstract class"}, {"label" : "Success", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.Success", "link" : "prolog\/io\/TermParser.html#Success[+T]extendsParsers.this.ParseResult[T]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.ParseResult", "link" : "prolog\/io\/TermParser.html#ParseResult[+T<:<?>]extendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "readGoal", "tail" : "(): (List[Term], LinkedHashMap[String, Var])", "member" : "prolog.io.TermParser.readGoal", "link" : "prolog\/io\/TermParser.html#readGoal():(List[prolog.terms.Term],scala.collection.mutable.LinkedHashMap[String,prolog.terms.Var])", "kind" : "def"}, {"label" : "file2clauses", "tail" : "(fname: String): List[List[Term]]", "member" : "prolog.io.TermParser.file2clauses", "link" : "prolog\/io\/TermParser.html#file2clauses(fname:String):List[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "parseProg", "tail" : "(text: String): List[List[Term]]", "member" : "prolog.io.TermParser.parseProg", "link" : "prolog\/io\/TermParser.html#parseProg(text:String):List[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): List[Term]", "member" : "prolog.io.TermParser.parse", "link" : "prolog\/io\/TermParser.html#parse(s:String):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "args", "tail" : "(): Parser[List[Term]]", "member" : "prolog.io.TermParser.args", "link" : "prolog\/io\/TermParser.html#args:TermParser.this.Parser[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "listArgs", "tail" : "(): Parser[~[List[Term], Option[Term]]]", "member" : "prolog.io.TermParser.listArgs", "link" : "prolog\/io\/TermParser.html#listArgs:TermParser.this.Parser[List[prolog.terms.Term]~Option[prolog.terms.Term]]", "kind" : "def"}, {"label" : "listTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.listTerm", "link" : "prolog\/io\/TermParser.html#listTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "stringTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.stringTerm", "link" : "prolog\/io\/TermParser.html#stringTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "funTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.funTerm", "link" : "prolog\/io\/TermParser.html#funTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "plainTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.plainTerm", "link" : "prolog\/io\/TermParser.html#plainTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "dcg_escape", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.dcg_escape", "link" : "prolog\/io\/TermParser.html#dcg_escape:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "parTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.parTerm", "link" : "prolog\/io\/TermParser.html#parTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "timesTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.timesTerm", "link" : "prolog\/io\/TermParser.html#timesTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "plusTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.plusTerm", "link" : "prolog\/io\/TermParser.html#plusTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "isTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.isTerm", "link" : "prolog\/io\/TermParser.html#isTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "conjTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.conjTerm", "link" : "prolog\/io\/TermParser.html#conjTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "implTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.implTerm", "link" : "prolog\/io\/TermParser.html#implTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "disjTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.disjTerm", "link" : "prolog\/io\/TermParser.html#disjTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "clauseTerm", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.clauseTerm", "link" : "prolog\/io\/TermParser.html#clauseTerm:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "term", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.term", "link" : "prolog\/io\/TermParser.html#term:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "conj", "tail" : "(): Parser[List[Term]]", "member" : "prolog.io.TermParser.conj", "link" : "prolog\/io\/TermParser.html#conj:TermParser.this.Parser[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "mkTerm", "tail" : "(t: ~[Term, Option[~[String, Term]]]): Term", "member" : "prolog.io.TermParser.mkTerm", "link" : "prolog\/io\/TermParser.html#mkTerm(t:prolog.terms.Term~Option[String~prolog.terms.Term]):prolog.terms.Term", "kind" : "def"}, {"label" : "body", "tail" : "(): Parser[List[Term]]", "member" : "prolog.io.TermParser.body", "link" : "prolog\/io\/TermParser.html#body:TermParser.this.Parser[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "head", "tail" : "(): Parser[Term]", "member" : "prolog.io.TermParser.head", "link" : "prolog\/io\/TermParser.html#head:TermParser.this.Parser[prolog.terms.Term]", "kind" : "def"}, {"label" : "clause", "tail" : "(): Parser[List[Term]]", "member" : "prolog.io.TermParser.clause", "link" : "prolog\/io\/TermParser.html#clause:TermParser.this.Parser[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "mk_cmd", "tail" : "(bs: List[Term]): List[Term]", "member" : "prolog.io.TermParser.mk_cmd", "link" : "prolog\/io\/TermParser.html#mk_cmd(bs:List[prolog.terms.Term]):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "cmd", "tail" : "(): Parser[List[Term]]", "member" : "prolog.io.TermParser.cmd", "link" : "prolog\/io\/TermParser.html#cmd:TermParser.this.Parser[List[prolog.terms.Term]]", "kind" : "def"}, {"label" : "prog", "tail" : "(): Parser[List[List[Term]]]", "member" : "prolog.io.TermParser.prog", "link" : "prolog\/io\/TermParser.html#prog:TermParser.this.Parser[List[List[prolog.terms.Term]]]", "kind" : "def"}, {"label" : "idToken", "tail" : "(): Parser[String]", "member" : "prolog.io.TermParser.idToken", "link" : "prolog\/io\/TermParser.html#idToken:TermParser.this.Parser[String]", "kind" : "def"}, {"label" : "timesTok", "tail" : ": Regex", "member" : "prolog.io.TermParser.timesTok", "link" : "prolog\/io\/TermParser.html#timesTok:scala.util.matching.Regex", "kind" : "val"}, {"label" : "plusTok", "tail" : ": Regex", "member" : "prolog.io.TermParser.plusTok", "link" : "prolog\/io\/TermParser.html#plusTok:scala.util.matching.Regex", "kind" : "val"}, {"label" : "isTok", "tail" : ": Regex", "member" : "prolog.io.TermParser.isTok", "link" : "prolog\/io\/TermParser.html#isTok:scala.util.matching.Regex", "kind" : "val"}, {"label" : "conjTok", "tail" : ": Regex", "member" : "prolog.io.TermParser.conjTok", "link" : "prolog\/io\/TermParser.html#conjTok:scala.util.matching.Regex", "kind" : "val"}, {"label" : "implTok", "tail" : ": Regex", "member" : "prolog.io.TermParser.implTok", "link" : "prolog\/io\/TermParser.html#implTok:scala.util.matching.Regex", "kind" : "val"}, {"label" : "disjTok", "tail" : ": Regex", "member" : "prolog.io.TermParser.disjTok", "link" : "prolog\/io\/TermParser.html#disjTok:scala.util.matching.Regex", "kind" : "val"}, {"label" : "clauseTok", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.clauseTok", "link" : "prolog\/io\/TermParser.html#clauseTok:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "topToken", "tail" : ": Regex", "member" : "prolog.io.TermParser.topToken", "link" : "prolog\/io\/TermParser.html#topToken:scala.util.matching.Regex", "kind" : "val"}, {"label" : "dcgTopToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.dcgTopToken", "link" : "prolog\/io\/TermParser.html#dcgTopToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "eocToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.eocToken", "link" : "prolog\/io\/TermParser.html#eocToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "stringToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.stringToken", "link" : "prolog\/io\/TermParser.html#stringToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "quotedToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.quotedToken", "link" : "prolog\/io\/TermParser.html#quotedToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "specToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.specToken", "link" : "prolog\/io\/TermParser.html#specToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "numToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.numToken", "link" : "prolog\/io\/TermParser.html#numToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "symToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.symToken", "link" : "prolog\/io\/TermParser.html#symToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "varToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.varToken", "link" : "prolog\/io\/TermParser.html#varToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "evarToken", "tail" : ": Parser[String]", "member" : "prolog.io.TermParser.evarToken", "link" : "prolog\/io\/TermParser.html#evarToken:TermParser.this.Parser[String]", "kind" : "val"}, {"label" : "whiteSpace", "tail" : ": Regex", "member" : "prolog.io.TermParser.whiteSpace", "link" : "prolog\/io\/TermParser.html#whiteSpace:scala.util.matching.Regex", "kind" : "val"}, {"label" : "trimQuotes", "tail" : "(q: String): String", "member" : "prolog.io.TermParser.trimQuotes", "link" : "prolog\/io\/TermParser.html#trimQuotes(q:String):String", "kind" : "def"}, {"label" : "mkEVar", "tail" : "(x: String): Var", "member" : "prolog.io.TermParser.mkEVar", "link" : "prolog\/io\/TermParser.html#mkEVar(x:String):prolog.terms.Var", "kind" : "def"}, {"label" : "mkVar", "tail" : "(x0: String): Var", "member" : "prolog.io.TermParser.mkVar", "link" : "prolog\/io\/TermParser.html#mkVar(x0:String):prolog.terms.Var", "kind" : "def"}, {"label" : "randomString", "tail" : "(length: Int): String", "member" : "prolog.io.TermParser.randomString", "link" : "prolog\/io\/TermParser.html#randomString(length:Int):String", "kind" : "def"}, {"member" : "prolog.io.TermParser#<init>", "error" : "unsupported entity"}, {"member" : "prolog.io.TermParser#<init>", "error" : "unsupported entity"}, {"label" : "vars", "tail" : ": LinkedHashMap[String, Var]", "member" : "prolog.io.TermParser.vars", "link" : "prolog\/io\/TermParser.html#vars:scala.collection.mutable.LinkedHashMap[String,prolog.terms.Var]", "kind" : "val"}, {"label" : "parseAll", "tail" : "(p: Parser[T], in: CharSequence): ParseResult[T]", "member" : "scala.util.parsing.combinator.RegexParsers.parseAll", "link" : "prolog\/io\/TermParser.html#parseAll[T](p:RegexParsers.this.Parser[T],in:CharSequence):RegexParsers.this.ParseResult[T]", "kind" : "def"}, {"label" : "parseAll", "tail" : "(p: Parser[T], in: Reader): ParseResult[T]", "member" : "scala.util.parsing.combinator.RegexParsers.parseAll", "link" : "prolog\/io\/TermParser.html#parseAll[T](p:RegexParsers.this.Parser[T],in:java.io.Reader):RegexParsers.this.ParseResult[T]", "kind" : "def"}, {"label" : "parseAll", "tail" : "(p: Parser[T], in: Reader[Char]): ParseResult[T]", "member" : "scala.util.parsing.combinator.RegexParsers.parseAll", "link" : "prolog\/io\/TermParser.html#parseAll[T](p:RegexParsers.this.Parser[T],in:scala.util.parsing.input.Reader[Char]):RegexParsers.this.ParseResult[T]", "kind" : "def"}, {"label" : "parse", "tail" : "(p: Parser[T], in: Reader): ParseResult[T]", "member" : "scala.util.parsing.combinator.RegexParsers.parse", "link" : "prolog\/io\/TermParser.html#parse[T](p:RegexParsers.this.Parser[T],in:java.io.Reader):RegexParsers.this.ParseResult[T]", "kind" : "def"}, {"label" : "parse", "tail" : "(p: Parser[T], in: CharSequence): ParseResult[T]", "member" : "scala.util.parsing.combinator.RegexParsers.parse", "link" : "prolog\/io\/TermParser.html#parse[T](p:RegexParsers.this.Parser[T],in:CharSequence):RegexParsers.this.ParseResult[T]", "kind" : "def"}, {"label" : "parse", "tail" : "(p: Parser[T], in: Reader[Char]): ParseResult[T]", "member" : "scala.util.parsing.combinator.RegexParsers.parse", "link" : "prolog\/io\/TermParser.html#parse[T](p:RegexParsers.this.Parser[T],in:scala.util.parsing.input.Reader[Char]):RegexParsers.this.ParseResult[T]", "kind" : "def"}, {"label" : "phrase", "tail" : "(p: Parser[T]): Parser[T]", "member" : "scala.util.parsing.combinator.RegexParsers.phrase", "link" : "prolog\/io\/TermParser.html#phrase[T](p:RegexParsers.this.Parser[T]):RegexParsers.this.Parser[T]", "kind" : "def"}, {"label" : "positioned", "tail" : "(p: => Parser[T]): Parser[T]", "member" : "scala.util.parsing.combinator.RegexParsers.positioned", "link" : "prolog\/io\/TermParser.html#positioned[T<:scala.util.parsing.input.Positional](p:=>RegexParsers.this.Parser[T]):RegexParsers.this.Parser[T]", "kind" : "def"}, {"label" : "regex", "tail" : "(r: Regex): Parser[String]", "member" : "scala.util.parsing.combinator.RegexParsers.regex", "link" : "prolog\/io\/TermParser.html#regex(r:scala.util.matching.Regex):RegexParsers.this.Parser[String]", "kind" : "implicit def"}, {"label" : "literal", "tail" : "(s: String): Parser[String]", "member" : "scala.util.parsing.combinator.RegexParsers.literal", "link" : "prolog\/io\/TermParser.html#literal(s:String):RegexParsers.this.Parser[String]", "kind" : "implicit def"}, {"label" : "handleWhiteSpace", "tail" : "(source: CharSequence, offset: Int): Int", "member" : "scala.util.parsing.combinator.RegexParsers.handleWhiteSpace", "link" : "prolog\/io\/TermParser.html#handleWhiteSpace(source:CharSequence,offset:Int):Int", "kind" : "def"}, {"label" : "skipWhitespace", "tail" : "(): Boolean", "member" : "scala.util.parsing.combinator.RegexParsers.skipWhitespace", "link" : "prolog\/io\/TermParser.html#skipWhitespace:Boolean", "kind" : "def"}, {"label" : "Elem", "tail" : "", "member" : "scala.util.parsing.combinator.RegexParsers.Elem", "link" : "prolog\/io\/TermParser.html#Elem=Char", "kind" : "type"}, {"label" : "mkList", "tail" : "(): (~[T, List[T]]) => List[T]", "member" : "scala.util.parsing.combinator.Parsers.mkList", "link" : "prolog\/io\/TermParser.html#mkList[T]:T~List[T]=>List[T]", "kind" : "def"}, {"label" : "guard", "tail" : "(p: => Parser[T]): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.guard", "link" : "prolog\/io\/TermParser.html#guard[T](p:=>Parsers.this.Parser[T]):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "not", "tail" : "(p: => Parser[T]): Parser[Unit]", "member" : "scala.util.parsing.combinator.Parsers.not", "link" : "prolog\/io\/TermParser.html#not[T](p:=>Parsers.this.Parser[T]):Parsers.this.Parser[Unit]", "kind" : "def"}, {"label" : "opt", "tail" : "(p: => Parser[T]): Parser[Option[T]]", "member" : "scala.util.parsing.combinator.Parsers.opt", "link" : "prolog\/io\/TermParser.html#opt[T](p:=>Parsers.this.Parser[T]):Parsers.this.Parser[Option[T]]", "kind" : "def"}, {"label" : "chainr1", "tail" : "(p: => Parser[T], q: => Parser[(T, U) => U], combine: (T, U) => U, first: U): Parser[U]", "member" : "scala.util.parsing.combinator.Parsers.chainr1", "link" : "prolog\/io\/TermParser.html#chainr1[T,U](p:=>Parsers.this.Parser[T],q:=>Parsers.this.Parser[(T,U)=>U],combine:(T,U)=>U,first:U):Parsers.this.Parser[U]", "kind" : "def"}, {"label" : "chainl1", "tail" : "(first: => Parser[T], p: => Parser[U], q: => Parser[(T, U) => T]): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.chainl1", "link" : "prolog\/io\/TermParser.html#chainl1[T,U](first:=>Parsers.this.Parser[T],p:=>Parsers.this.Parser[U],q:=>Parsers.this.Parser[(T,U)=>T]):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "chainl1", "tail" : "(p: => Parser[T], q: => Parser[(T, T) => T]): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.chainl1", "link" : "prolog\/io\/TermParser.html#chainl1[T](p:=>Parsers.this.Parser[T],q:=>Parsers.this.Parser[(T,T)=>T]):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(p: => Parser[T], q: => Parser[Any]): Parser[List[T]]", "member" : "scala.util.parsing.combinator.Parsers.rep1sep", "link" : "prolog\/io\/TermParser.html#rep1sep[T](p:=>Parsers.this.Parser[T],q:=>Parsers.this.Parser[Any]):Parsers.this.Parser[List[T]]", "kind" : "def"}, {"label" : "repN", "tail" : "(num: Int, p: => Parser[T]): Parser[List[T]]", "member" : "scala.util.parsing.combinator.Parsers.repN", "link" : "prolog\/io\/TermParser.html#repN[T](num:Int,p:=>Parsers.this.Parser[T]):Parsers.this.Parser[List[T]]", "kind" : "def"}, {"label" : "rep1", "tail" : "(first: => Parser[T], p0: => Parser[T]): Parser[List[T]]", "member" : "scala.util.parsing.combinator.Parsers.rep1", "link" : "prolog\/io\/TermParser.html#rep1[T](first:=>Parsers.this.Parser[T],p0:=>Parsers.this.Parser[T]):Parsers.this.Parser[List[T]]", "kind" : "def"}, {"label" : "rep1", "tail" : "(p: => Parser[T]): Parser[List[T]]", "member" : "scala.util.parsing.combinator.Parsers.rep1", "link" : "prolog\/io\/TermParser.html#rep1[T](p:=>Parsers.this.Parser[T]):Parsers.this.Parser[List[T]]", "kind" : "def"}, {"label" : "repsep", "tail" : "(p: => Parser[T], q: => Parser[Any]): Parser[List[T]]", "member" : "scala.util.parsing.combinator.Parsers.repsep", "link" : "prolog\/io\/TermParser.html#repsep[T](p:=>Parsers.this.Parser[T],q:=>Parsers.this.Parser[Any]):Parsers.this.Parser[List[T]]", "kind" : "def"}, {"label" : "rep", "tail" : "(p: => Parser[T]): Parser[List[T]]", "member" : "scala.util.parsing.combinator.Parsers.rep", "link" : "prolog\/io\/TermParser.html#rep[T](p:=>Parsers.this.Parser[T]):Parsers.this.Parser[List[T]]", "kind" : "def"}, {"label" : "log", "tail" : "(p: => Parser[T])(name: String): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.log", "link" : "prolog\/io\/TermParser.html#log[T](p:=>Parsers.this.Parser[T])(name:String):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "success", "tail" : "(v: T): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.success", "link" : "prolog\/io\/TermParser.html#success[T](v:T):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "err", "tail" : "(msg: String): Parser[Nothing]", "member" : "scala.util.parsing.combinator.Parsers.err", "link" : "prolog\/io\/TermParser.html#err(msg:String):Parsers.this.Parser[Nothing]", "kind" : "def"}, {"label" : "failure", "tail" : "(msg: String): Parser[Nothing]", "member" : "scala.util.parsing.combinator.Parsers.failure", "link" : "prolog\/io\/TermParser.html#failure(msg:String):Parsers.this.Parser[Nothing]", "kind" : "def"}, {"label" : "acceptSeq", "tail" : "(es: ES)(f: (ES) => Iterable[Elem]): Parser[List[Elem]]", "member" : "scala.util.parsing.combinator.Parsers.acceptSeq", "link" : "prolog\/io\/TermParser.html#acceptSeq[ES](es:ES)(implicitf:ES=>Iterable[Parsers.this.Elem]):Parsers.this.Parser[List[Parsers.this.Elem]]", "kind" : "def"}, {"label" : "acceptMatch", "tail" : "(expected: String, f: PartialFunction[Elem, U]): Parser[U]", "member" : "scala.util.parsing.combinator.Parsers.acceptMatch", "link" : "prolog\/io\/TermParser.html#acceptMatch[U](expected:String,f:PartialFunction[Parsers.this.Elem,U]):Parsers.this.Parser[U]", "kind" : "def"}, {"label" : "acceptIf", "tail" : "(p: (Elem) => Boolean)(err: (Elem) => String): Parser[Elem]", "member" : "scala.util.parsing.combinator.Parsers.acceptIf", "link" : "prolog\/io\/TermParser.html#acceptIf(p:Parsers.this.Elem=>Boolean)(err:Parsers.this.Elem=>String):Parsers.this.Parser[Parsers.this.Elem]", "kind" : "def"}, {"label" : "accept", "tail" : "(expected: String, f: PartialFunction[Elem, U]): Parser[U]", "member" : "scala.util.parsing.combinator.Parsers.accept", "link" : "prolog\/io\/TermParser.html#accept[U](expected:String,f:PartialFunction[Parsers.this.Elem,U]):Parsers.this.Parser[U]", "kind" : "def"}, {"label" : "accept", "tail" : "(es: ES)(f: (ES) => List[Elem]): Parser[List[Elem]]", "member" : "scala.util.parsing.combinator.Parsers.accept", "link" : "prolog\/io\/TermParser.html#accept[ES](es:ES)(implicitf:ES=>List[Parsers.this.Elem]):Parsers.this.Parser[List[Parsers.this.Elem]]", "kind" : "def"}, {"label" : "accept", "tail" : "(e: Elem): Parser[Elem]", "member" : "scala.util.parsing.combinator.Parsers.accept", "link" : "prolog\/io\/TermParser.html#accept(e:Parsers.this.Elem):Parsers.this.Parser[Parsers.this.Elem]", "kind" : "implicit def"}, {"label" : "elem", "tail" : "(e: Elem): Parser[Elem]", "member" : "scala.util.parsing.combinator.Parsers.elem", "link" : "prolog\/io\/TermParser.html#elem(e:Parsers.this.Elem):Parsers.this.Parser[Parsers.this.Elem]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: String, p: (Elem) => Boolean): Parser[Elem]", "member" : "scala.util.parsing.combinator.Parsers.elem", "link" : "prolog\/io\/TermParser.html#elem(kind:String,p:Parsers.this.Elem=>Boolean):Parsers.this.Parser[Parsers.this.Elem]", "kind" : "def"}, {"label" : "commit", "tail" : "(p: => Parser[T]): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.commit", "link" : "prolog\/io\/TermParser.html#commit[T](p:=>Parsers.this.Parser[T]):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "OnceParser", "tail" : "(f: (Input) => ParseResult[T]): Parser[T] with OnceParser[T]", "member" : "scala.util.parsing.combinator.Parsers.OnceParser", "link" : "prolog\/io\/TermParser.html#OnceParser[T](f:Parsers.this.Input=>Parsers.this.ParseResult[T]):Parsers.this.Parser[T]withParsers.this.OnceParser[T]", "kind" : "def"}, {"label" : "Parser", "tail" : "(f: (Input) => ParseResult[T]): Parser[T]", "member" : "scala.util.parsing.combinator.Parsers.Parser", "link" : "prolog\/io\/TermParser.html#Parser[T](f:Parsers.this.Input=>Parsers.this.ParseResult[T]):Parsers.this.Parser[T]", "kind" : "def"}, {"label" : "Input", "tail" : "", "member" : "scala.util.parsing.combinator.Parsers.Input", "link" : "prolog\/io\/TermParser.html#Input=scala.util.parsing.input.Reader[Parsers.this.Elem]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/io\/TermParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/io\/TermParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/io\/TermParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/io\/TermParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/io\/TermParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/io\/TermParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/io\/TermParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/io\/TermParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/io\/TermParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/io\/TermParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/io\/TermParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/io\/TermParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/io\/TermParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/io\/TermParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/io\/TermParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/io\/TermParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "string2goal", "tail" : "(s: String): List[Term]", "member" : "prolog.io.TermParser.string2goal", "link" : "prolog\/io\/TermParser$.html#string2goal(s:String):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "string2goal", "tail" : "(s: String, parser: TermParser): List[Term]", "member" : "prolog.io.TermParser.string2goal", "link" : "prolog\/io\/TermParser$.html#string2goal(s:String,parser:prolog.io.TermParser):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "dcg_conj", "tail" : "(ts: List[Term], S1: Var, S2: Var): List[Term]", "member" : "prolog.io.TermParser.dcg_conj", "link" : "prolog\/io\/TermParser$.html#dcg_conj(ts:List[prolog.terms.Term],S1:prolog.terms.Var,S2:prolog.terms.Var):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "dcg_body", "tail" : "(bs: List[Term], S1: Var, S2: Var): List[Term]", "member" : "prolog.io.TermParser.dcg_body", "link" : "prolog\/io\/TermParser$.html#dcg_body(bs:List[prolog.terms.Term],S1:prolog.terms.Var,S2:prolog.terms.Var):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "dcg_goal", "tail" : "(g0: Term, S1: Var, S2: Var): Term", "member" : "prolog.io.TermParser.dcg_goal", "link" : "prolog\/io\/TermParser$.html#dcg_goal(g0:prolog.terms.Term,S1:prolog.terms.Var,S2:prolog.terms.Var):prolog.terms.Term", "kind" : "def"}, {"label" : "dcgExpand", "tail" : "(a: Term, bs: List[Term]): (Term, List[Term])", "member" : "prolog.io.TermParser.dcgExpand", "link" : "prolog\/io\/TermParser$.html#dcgExpand(a:prolog.terms.Term,bs:List[prolog.terms.Term]):(prolog.terms.Term,List[prolog.terms.Term])", "kind" : "def"}, {"label" : "DCG_MARKER", "tail" : ": Const", "member" : "prolog.io.TermParser.DCG_MARKER", "link" : "prolog\/io\/TermParser$.html#DCG_MARKER:prolog.terms.Const", "kind" : "val"}, {"label" : "postProcessBody", "tail" : "(h: Term, xs: List[Term]): List[Term]", "member" : "prolog.io.TermParser.postProcessBody", "link" : "prolog\/io\/TermParser$.html#postProcessBody(h:prolog.terms.Term,xs:List[prolog.terms.Term]):List[prolog.terms.Term]", "kind" : "def"}, {"label" : "list2cons", "tail" : "(xs: List[Term], z: Term): Term", "member" : "prolog.io.TermParser.list2cons", "link" : "prolog\/io\/TermParser$.html#list2cons(xs:List[prolog.terms.Term],z:prolog.terms.Term):prolog.terms.Term", "kind" : "def"}, {"label" : "term2string", "tail" : "(rvars: VMAP, xs: List[Term], end: String): String", "member" : "prolog.io.TermParser.term2string", "link" : "prolog\/io\/TermParser$.html#term2string(rvars:prolog.io.TermParser.VMAP,xs:List[prolog.terms.Term],end:String):String", "kind" : "def"}, {"label" : "clause2string", "tail" : "(rvars: VMAP, xs: List[Term]): String", "member" : "prolog.io.TermParser.clause2string", "link" : "prolog\/io\/TermParser$.html#clause2string(rvars:prolog.io.TermParser.VMAP,xs:List[prolog.terms.Term]):String", "kind" : "def"}, {"label" : "term2string", "tail" : "(t: Term): String", "member" : "prolog.io.TermParser.term2string", "link" : "prolog\/io\/TermParser$.html#term2string(t:prolog.terms.Term):String", "kind" : "def"}, {"label" : "printclause", "tail" : "(rvars: VMAP, xs: List[Term]): Unit", "member" : "prolog.io.TermParser.printclause", "link" : "prolog\/io\/TermParser$.html#printclause(rvars:prolog.io.TermParser.VMAP,xs:List[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "toQuoted", "tail" : "(s: String): String", "member" : "prolog.io.TermParser.toQuoted", "link" : "prolog\/io\/TermParser$.html#toQuoted(s:String):String", "kind" : "def"}, {"label" : "toFunBuiltin", "tail" : "(f: Fun): Fun", "member" : "prolog.io.TermParser.toFunBuiltin", "link" : "prolog\/io\/TermParser$.html#toFunBuiltin(f:prolog.terms.Fun):prolog.terms.Fun", "kind" : "def"}, {"label" : "string2FunBuiltin", "tail" : "(s: String): FunBuiltin", "member" : "prolog.io.TermParser.string2FunBuiltin", "link" : "prolog\/io\/TermParser$.html#string2FunBuiltin(s:String):prolog.terms.FunBuiltin", "kind" : "def"}, {"label" : "string2ConstBuiltin", "tail" : "(s: String): ConstBuiltin", "member" : "prolog.io.TermParser.string2ConstBuiltin", "link" : "prolog\/io\/TermParser$.html#string2ConstBuiltin(s:String):prolog.terms.ConstBuiltin", "kind" : "def"}, {"label" : "toConstBuiltin", "tail" : "(c: Const): Const", "member" : "prolog.io.TermParser.toConstBuiltin", "link" : "prolog\/io\/TermParser$.html#toConstBuiltin(c:prolog.terms.Const):prolog.terms.Const", "kind" : "def"}, {"label" : "builtinMap", "tail" : ": HashMap[String, Const]", "member" : "prolog.io.TermParser.builtinMap", "link" : "prolog\/io\/TermParser$.html#builtinMap:scala.collection.mutable.HashMap[String,prolog.terms.Const]", "kind" : "val"}, {"label" : "VMAP", "tail" : "", "member" : "prolog.io.TermParser.VMAP", "link" : "prolog\/io\/TermParser$.html#VMAP=scala.collection.mutable.LinkedHashMap[prolog.terms.Var,String]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/io\/TermParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/io\/TermParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/io\/TermParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/io\/TermParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/io\/TermParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/io\/TermParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/io\/TermParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/io\/TermParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/io\/TermParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/io\/TermParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/io\/TermParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/io\/TermParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/io\/TermParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/io\/TermParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/io\/TermParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/io\/TermParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/io\/TermParser.html", "kind" : "class"}, {"name" : "prolog.io.TermWriter", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.io.TermWriter.toString", "link" : "prolog\/io\/TermWriter.html#toString():String", "kind" : "def"}, {"label" : "collect", "tail" : "(): Const", "member" : "prolog.io.TermWriter.collect", "link" : "prolog\/io\/TermWriter.html#collect:prolog.terms.Const", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.io.TermWriter.stop", "link" : "prolog\/io\/TermWriter.html#stop():Unit", "kind" : "def"}, {"label" : "putElement", "tail" : "(x: Term): Int", "member" : "prolog.io.TermWriter.putElement", "link" : "prolog\/io\/TermWriter.html#putElement(x:prolog.terms.Term):Int", "kind" : "def"}, {"label" : "out", "tail" : ": Closeable with Appendable with Flushable { ... \/* 3 definitions in type refinement *\/ }", "member" : "prolog.io.TermWriter.out", "link" : "prolog\/io\/TermWriter.html#out:java.io.CloseablewithAppendablewithjava.io.Flushable{defappend(x$1:Char):java.io.CloseablewithAppendablewithjava.io.Flushable;defappend(x$1:CharSequence,x$2:Int,x$3:Int):java.io.CloseablewithAppendablewithjava.io.Flushable;defappend(x$1:CharSequence):java.io.CloseablewithAppendablewithjava.io.Flushable}", "kind" : "val"}, {"member" : "prolog.io.TermWriter#<init>", "error" : "unsupported entity"}, {"label" : "fname", "tail" : ": String", "member" : "prolog.io.TermWriter.fname", "link" : "prolog\/io\/TermWriter.html#fname:String", "kind" : "val"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/io\/TermWriter.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/io\/TermWriter.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/io\/TermWriter.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/io\/TermWriter.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/io\/TermWriter.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/io\/TermWriter.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/io\/TermWriter.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/io\/TermWriter.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/io\/TermWriter.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/io\/TermWriter.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/io\/TermWriter.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/io\/TermWriter.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/io\/TermWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/io\/TermWriter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/io\/TermWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/io\/TermWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/io\/TermWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/io\/TermWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/io\/TermWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/io\/TermWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/io\/TermWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/io\/TermWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/io\/TermWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/io\/TermWriter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/io\/TermWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/io\/TermWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/io\/TermWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/io\/TermWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/io\/TermWriter.html", "kind" : "class"}], "prolog.tests" : [{"name" : "prolog.tests.append0", "shortDescription" : "", "members_case class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.tests.append0.exec", "link" : "prolog\/tests\/append0.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.tests.append0#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/tests\/append0.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/tests\/append0.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/tests\/append0.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/tests\/append0.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/tests\/append0.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/tests\/append0.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/tests\/append0.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/tests\/append0.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/tests\/append0.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/tests\/append0.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/tests\/append0.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/tests\/append0.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/tests\/append0.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/tests\/append0.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/tests\/append0.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/tests\/append0.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/tests\/append0.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/tests\/append0.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/tests\/append0.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/tests\/append0.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/tests\/append0.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/append0.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/append0.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/append0.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/append0.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/append0.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/append0.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/append0.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/append0.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/append0.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/append0.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/append0.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/append0.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/append0.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/append0.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/append0.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/append0.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/tests\/append0.html", "kind" : "case class"}, {"name" : "prolog.tests.append1", "shortDescription" : "", "members_case class" : [{"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.tests.append1.exec", "link" : "prolog\/tests\/append1.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"member" : "prolog.tests.append1#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/tests\/append1.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "const", "tail" : "(name: String, a: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.const", "link" : "prolog\/tests\/append1.html#const(name:String,a:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "arg", "tail" : "(i: Int, v: Term, a: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.arg", "link" : "prolog\/tests\/append1.html#arg(i:Int,v:prolog.terms.Term,a:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "cons", "tail" : "(c: Term, x: Term, xs: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.cons", "link" : "prolog\/tests\/append1.html#cons(c:prolog.terms.Term,x:prolog.terms.Term,xs:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "fun", "tail" : "(name: String, arity: Int, v: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.fun", "link" : "prolog\/tests\/append1.html#fun(name:String,arity:Int,v:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "arity", "tail" : ": Int", "member" : "prolog.terms.FunBuiltin.arity", "link" : "prolog\/tests\/append1.html#arity:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "prolog.terms.Fun.toString", "link" : "prolog\/tests\/append1.html#toString():String", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Fun.vcollect", "link" : "prolog\/tests\/append1.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Fun", "member" : "prolog.terms.Fun.tcopy", "link" : "prolog\/tests\/append1.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Fun", "kind" : "def"}, {"label" : "funClone", "tail" : "(): Fun", "member" : "prolog.terms.Fun.funClone", "link" : "prolog\/tests\/append1.html#funClone():prolog.terms.Fun", "kind" : "final def"}, {"label" : "unify", "tail" : "(term: Term, trail: Trail): Boolean", "member" : "prolog.terms.Fun.unify", "link" : "prolog\/tests\/append1.html#unify(term:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "putArg", "tail" : "(i: Int, t: Term, p: Prog): Int", "member" : "prolog.terms.Fun.putArg", "link" : "prolog\/tests\/append1.html#putArg(i:Int,t:prolog.terms.Term,p:prolog.interp.Prog):Int", "kind" : "final def"}, {"label" : "getArg", "tail" : "(i: Int): Term", "member" : "prolog.terms.Fun.getArg", "link" : "prolog\/tests\/append1.html#getArg(i:Int):prolog.terms.Term", "kind" : "final def"}, {"label" : "init", "tail" : "(arity: Int): Unit", "member" : "prolog.terms.Fun.init", "link" : "prolog\/tests\/append1.html#init(arity:Int):Unit", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "prolog.terms.Fun.len", "link" : "prolog\/tests\/append1.html#len:Int", "kind" : "def"}, {"label" : "args", "tail" : ": Array[Term]", "member" : "prolog.terms.Fun.args", "link" : "prolog\/tests\/append1.html#args:Array[prolog.terms.Term]", "kind" : "var"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Const.bind_to", "link" : "prolog\/tests\/append1.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.Const.name", "link" : "prolog\/tests\/append1.html#name:String", "kind" : "def"}, {"label" : "sym", "tail" : ": String", "member" : "prolog.terms.Const.sym", "link" : "prolog\/tests\/append1.html#sym:String", "kind" : "val"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/tests\/append1.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/tests\/append1.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/tests\/append1.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/tests\/append1.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/tests\/append1.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/tests\/append1.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/append1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/append1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/append1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/append1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/append1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/append1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/append1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/append1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/append1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/append1.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/append1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/append1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/append1.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/append1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/append1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/append1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/tests\/append1.html", "kind" : "case class"}, {"name" : "prolog.tests.E", "case object" : "prolog\/tests\/E$.html", "shortDescription" : "", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/tests\/E$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "prolog\/tests\/E$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "p", "tail" : "(a: T): T", "member" : "prolog.tests.T.p", "link" : "prolog\/tests\/E$.html#p(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "s", "tail" : "(a: T): T", "member" : "prolog.tests.T.s", "link" : "prolog\/tests\/E$.html#s(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/E$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/E$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/E$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/E$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/E$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/E$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/E$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/E$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/E$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/E$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/E$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/E$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/E$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/E$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/E$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/E$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/E$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "prolog.tests.go", "shortDescription" : "", "object" : "prolog\/tests\/go$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "prolog\/tests\/go$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "prolog\/tests\/go$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "prolog\/tests\/go$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "prolog\/tests\/go$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/go$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/go$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/go$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/go$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/go$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/go$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/go$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/go$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/go$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/go$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/go$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/go$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/go$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/go$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/go$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/go$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/go$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/go$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/go$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.tests.I", "shortDescription" : "", "members_case class" : [{"member" : "prolog.tests.I#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": A", "member" : "prolog.tests.I.x", "link" : "prolog\/tests\/I.html#x:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/tests\/I.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "p", "tail" : "(a: T): T", "member" : "prolog.tests.T.p", "link" : "prolog\/tests\/I.html#p(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "s", "tail" : "(a: T): T", "member" : "prolog.tests.T.s", "link" : "prolog\/tests\/I.html#s(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/I.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/I.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/I.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/I.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/I.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/I.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/I.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/I.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/I.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/I.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/I.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/I.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/I.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/I.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/I.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/I.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/tests\/I.html", "kind" : "case class"}, {"name" : "prolog.tests.Instructions", "trait" : "prolog\/tests\/Instructions.html", "kind" : "trait", "members_trait" : [{"label" : "const", "tail" : "(name: String, a: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.const", "link" : "prolog\/tests\/Instructions.html#const(name:String,a:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "arg", "tail" : "(i: Int, v: Term, a: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.arg", "link" : "prolog\/tests\/Instructions.html#arg(i:Int,v:prolog.terms.Term,a:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "cons", "tail" : "(c: Term, x: Term, xs: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.cons", "link" : "prolog\/tests\/Instructions.html#cons(c:prolog.terms.Term,x:prolog.terms.Term,xs:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "fun", "tail" : "(name: String, arity: Int, v: Term, p: Prog): Boolean", "member" : "prolog.tests.Instructions.fun", "link" : "prolog\/tests\/Instructions.html#fun(name:String,arity:Int,v:prolog.terms.Term,p:prolog.interp.Prog):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/Instructions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/Instructions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/Instructions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/Instructions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/Instructions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/Instructions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/Instructions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Instructions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Instructions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Instructions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/Instructions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/Instructions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/Instructions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/Instructions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/Instructions.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/Instructions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/Instructions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/Instructions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/Instructions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "sketch of a compilation mechanism"}, {"name" : "prolog.tests.O", "shortDescription" : "", "members_case class" : [{"member" : "prolog.tests.O#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": A", "member" : "prolog.tests.O.x", "link" : "prolog\/tests\/O.html#x:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "prolog\/tests\/O.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "p", "tail" : "(a: T): T", "member" : "prolog.tests.T.p", "link" : "prolog\/tests\/O.html#p(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "s", "tail" : "(a: T): T", "member" : "prolog.tests.T.s", "link" : "prolog\/tests\/O.html#s(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/O.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/O.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/O.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/O.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/O.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/O.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/O.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/O.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/O.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/O.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/O.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/O.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/O.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/O.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/O.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/O.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "prolog\/tests\/O.html", "kind" : "case class"}, {"name" : "prolog.tests.prog", "shortDescription" : "", "object" : "prolog\/tests\/prog$.html", "members_object" : [{"label" : "undefined", "tail" : "", "member" : "prolog.interp.Prog.undefined", "link" : "prolog\/interp\/Prog.html#undefinedextendsAnyRef", "kind" : "trait"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/tests\/prog$.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "substitutions", "tail" : "(): Map[String, Term]", "member" : "prolog.interp.Prog.substitutions", "link" : "prolog\/tests\/prog$.html#substitutions():scala.collection.immutable.Map[String,prolog.terms.Term]", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.interp.Prog.stop", "link" : "prolog\/tests\/prog$.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.interp.Prog.getElement", "link" : "prolog\/tests\/prog$.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "pushUnfolder", "tail" : "(g0: GOAL): (GOAL, Term)", "member" : "prolog.interp.Prog.pushUnfolder", "link" : "prolog\/tests\/prog$.html#pushUnfolder(g0:Prog.this.GOAL):(Prog.this.GOAL,prolog.terms.Term)", "kind" : "def"}, {"label" : "set_query", "tail" : "(query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/tests\/prog$.html#set_query(query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "set_query", "tail" : "(answer: Term, query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/tests\/prog$.html#set_query(answer:prolog.terms.Term,query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "popped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.popped", "link" : "prolog\/tests\/prog$.html#popped:Boolean", "kind" : "var"}, {"label" : "isStopped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.isStopped", "link" : "prolog\/tests\/prog$.html#isStopped:Boolean", "kind" : "var"}, {"label" : "copier", "tail" : ": Copier", "member" : "prolog.interp.Prog.copier", "link" : "prolog\/tests\/prog$.html#copier:prolog.terms.Copier", "kind" : "val"}, {"label" : "orStack", "tail" : ": ObjectStack[Unfolder]", "member" : "prolog.interp.Prog.orStack", "link" : "prolog\/tests\/prog$.html#orStack:prolog.terms.ObjectStack[prolog.interp.Unfolder]", "kind" : "val"}, {"label" : "trail", "tail" : ": Trail", "member" : "prolog.interp.Prog.trail", "link" : "prolog\/tests\/prog$.html#trail:prolog.terms.Trail", "kind" : "val"}, {"label" : "GOAL", "tail" : "", "member" : "prolog.interp.Prog.GOAL", "link" : "prolog\/tests\/prog$.html#GOAL=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "CLAUSE", "tail" : "", "member" : "prolog.interp.Prog.CLAUSE", "link" : "prolog\/tests\/prog$.html#CLAUSE=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "db", "tail" : ": DataBase", "member" : "prolog.interp.Prog.db", "link" : "prolog\/tests\/prog$.html#db:prolog.fluents.DataBase", "kind" : "val"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/tests\/prog$.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/tests\/prog$.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/tests\/prog$.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/tests\/prog$.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/tests\/prog$.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/tests\/prog$.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/tests\/prog$.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): prog.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/tests\/prog$.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "prolog\/tests\/prog$.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/tests\/prog$.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/tests\/prog$.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/tests\/prog$.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/tests\/prog$.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/tests\/prog$.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/tests\/prog$.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/tests\/prog$.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/tests\/prog$.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/tests\/prog$.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/tests\/prog$.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/tests\/prog$.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/tests\/prog$.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/tests\/prog$.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/tests\/prog$.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/tests\/prog$.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/tests\/prog$.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/tests\/prog$.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/tests\/prog$.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/tests\/prog$.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/tests\/prog$.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/tests\/prog$.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/tests\/prog$.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/tests\/prog$.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/tests\/prog$.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/tests\/prog$.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/tests\/prog$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/tests\/prog$.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/tests\/prog$.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/tests\/prog$.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/tests\/prog$.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/tests\/prog$.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/tests\/prog$.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/tests\/prog$.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/tests\/prog$.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/tests\/prog$.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/tests\/prog$.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/tests\/prog$.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/tests\/prog$.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/tests\/prog$.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/tests\/prog$.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/tests\/prog$.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/tests\/prog$.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/tests\/prog$.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/tests\/prog$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/tests\/prog$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/tests\/prog$.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/tests\/prog$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/tests\/prog$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/tests\/prog$.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/tests\/prog$.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/tests\/prog$.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/tests\/prog$.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/tests\/prog$.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/tests\/prog$.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/tests\/prog$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/tests\/prog$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/tests\/prog$.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/tests\/prog$.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/tests\/prog$.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/tests\/prog$.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/tests\/prog$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/tests\/prog$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/tests\/prog$.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/tests\/prog$.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/tests\/prog$.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/tests\/prog$.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/tests\/prog$.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/tests\/prog$.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/tests\/prog$.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/tests\/prog$.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/tests\/prog$.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/tests\/prog$.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/tests\/prog$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/tests\/prog$.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/tests\/prog$.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/tests\/prog$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/tests\/prog$.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/tests\/prog$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/tests\/prog$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/tests\/prog$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/tests\/prog$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/tests\/prog$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/tests\/prog$.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/tests\/prog$.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/tests\/prog$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/tests\/prog$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/tests\/prog$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/tests\/prog$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/tests\/prog$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/tests\/prog$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/tests\/prog$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/tests\/prog$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/tests\/prog$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/tests\/prog$.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/tests\/prog$.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/tests\/prog$.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/tests\/prog$.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/tests\/prog$.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/tests\/prog$.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/tests\/prog$.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/tests\/prog$.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/tests\/prog$.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/tests\/prog$.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/tests\/prog$.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/tests\/prog$.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/tests\/prog$.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/tests\/prog$.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/tests\/prog$.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/tests\/prog$.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/tests\/prog$.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/prog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/prog$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/prog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/prog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/prog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/prog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/prog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/prog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/prog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/prog$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/prog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/prog$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/prog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/prog$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/prog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/prog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/prog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/prog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.tests.S", "shortDescription" : "", "object" : "prolog\/tests\/S$.html", "members_object" : [{"label" : "unapply", "tail" : "(x: T): Option[T]", "member" : "prolog.tests.S.unapply", "link" : "prolog\/tests\/S$.html#unapply(x:prolog.tests.T):Option[prolog.tests.T]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: T): T", "member" : "prolog.tests.S.apply", "link" : "prolog\/tests\/S$.html#apply(x:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "p", "tail" : "(a: T): T", "member" : "prolog.tests.T.p", "link" : "prolog\/tests\/S$.html#p(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "s", "tail" : "(a: T): T", "member" : "prolog.tests.T.s", "link" : "prolog\/tests\/S$.html#s(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/S$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/S$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/S$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/S$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/S$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/S$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/S$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/S$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/S$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/S$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/S$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/S$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/S$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/S$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/S$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/S$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/S$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/S$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/S$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.tests.T", "object" : "prolog\/tests\/T$.html", "members_object" : [{"label" : "a", "tail" : ": T", "member" : "prolog.tests.T.a", "link" : "prolog\/tests\/T$.html#a:prolog.tests.T", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "prolog\/tests\/T$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "prolog\/tests\/T$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "prolog\/tests\/T$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "prolog\/tests\/T$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/T$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/T$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/T$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/T$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/T$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/T$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/T$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/T$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/T$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/T$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/T$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/T$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/T$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/T$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/T$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/T$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/T$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/T$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/T$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "prolog\/tests\/T.html", "kind" : "trait", "members_trait" : [{"label" : "p", "tail" : "(a: T): T", "member" : "prolog.tests.T.p", "link" : "prolog\/tests\/T.html#p(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "s", "tail" : "(a: T): T", "member" : "prolog.tests.T.s", "link" : "prolog\/tests\/T.html#s(a:prolog.tests.T):prolog.tests.T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/T.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/T.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/T.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/T.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/T.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/T.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/T.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/T.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/T.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/T.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/T.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/T.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/T.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/T.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/T.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/T.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/T.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/T.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/T.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "prolog.tests.Test", "shortDescription" : "", "object" : "prolog\/tests\/Test$.html", "members_object" : [{"label" : "x", "tail" : ": append0", "member" : "prolog.tests.Test.x", "link" : "prolog\/tests\/Test$.html#x:prolog.tests.append0", "kind" : "val"}, {"label" : "p", "tail" : ": prog.type", "member" : "prolog.tests.Test.p", "link" : "prolog\/tests\/Test$.html#p:prolog.tests.prog.type", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "prolog\/tests\/Test$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "prolog\/tests\/Test$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "prolog\/tests\/Test$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "prolog\/tests\/Test$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/Test$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/Test$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/Test$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/Test$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/Test$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/Test$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/Test$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Test$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Test$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Test$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/Test$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/Test$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/Test$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/Test$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/Test$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/Test$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/Test$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/Test$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/Test$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "prolog.tests.Tests", "shortDescription" : "", "object" : "prolog\/tests\/Tests$.html", "members_object" : [{"label" : "btest", "tail" : "(): Unit", "member" : "prolog.tests.Tests.btest", "link" : "prolog\/tests\/Tests$.html#btest():Unit", "kind" : "def"}, {"label" : "gutest", "tail" : "(): Unit", "member" : "prolog.tests.Tests.gutest", "link" : "prolog\/tests\/Tests$.html#gutest:Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "prolog.tests.Tests.main", "link" : "prolog\/tests\/Tests$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/tests\/Tests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/tests\/Tests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/tests\/Tests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/tests\/Tests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/tests\/Tests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/tests\/Tests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/tests\/Tests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Tests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Tests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/tests\/Tests$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/tests\/Tests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/tests\/Tests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "prolog\/tests\/Tests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/tests\/Tests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/tests\/Tests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/tests\/Tests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/tests\/Tests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/tests\/Tests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/tests\/Tests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "prolog.interp" : [{"name" : "prolog.interp.Prog", "shortDescription" : "The class Prog implements instances of Prolog interpreters, wrapped up as self-containedfirst-class LogicEngines, usable as Scala or Akka actors.", "object" : "prolog\/interp\/Prog$.html", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/interp\/Prog.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "substitutions", "tail" : "(): Map[String, Term]", "member" : "prolog.interp.Prog.substitutions", "link" : "prolog\/interp\/Prog.html#substitutions():scala.collection.immutable.Map[String,prolog.terms.Term]", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.interp.Prog.stop", "link" : "prolog\/interp\/Prog.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.interp.Prog.getElement", "link" : "prolog\/interp\/Prog.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "pushUnfolder", "tail" : "(g0: GOAL): (GOAL, Term)", "member" : "prolog.interp.Prog.pushUnfolder", "link" : "prolog\/interp\/Prog.html#pushUnfolder(g0:Prog.this.GOAL):(Prog.this.GOAL,prolog.terms.Term)", "kind" : "def"}, {"label" : "set_query", "tail" : "(query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/interp\/Prog.html#set_query(query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "set_query", "tail" : "(answer: Term, query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/interp\/Prog.html#set_query(answer:prolog.terms.Term,query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "popped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.popped", "link" : "prolog\/interp\/Prog.html#popped:Boolean", "kind" : "var"}, {"label" : "isStopped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.isStopped", "link" : "prolog\/interp\/Prog.html#isStopped:Boolean", "kind" : "var"}, {"label" : "copier", "tail" : ": Copier", "member" : "prolog.interp.Prog.copier", "link" : "prolog\/interp\/Prog.html#copier:prolog.terms.Copier", "kind" : "val"}, {"label" : "orStack", "tail" : ": ObjectStack[Unfolder]", "member" : "prolog.interp.Prog.orStack", "link" : "prolog\/interp\/Prog.html#orStack:prolog.terms.ObjectStack[prolog.interp.Unfolder]", "kind" : "val"}, {"label" : "trail", "tail" : ": Trail", "member" : "prolog.interp.Prog.trail", "link" : "prolog\/interp\/Prog.html#trail:prolog.terms.Trail", "kind" : "val"}, {"label" : "GOAL", "tail" : "", "member" : "prolog.interp.Prog.GOAL", "link" : "prolog\/interp\/Prog.html#GOAL=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "CLAUSE", "tail" : "", "member" : "prolog.interp.Prog.CLAUSE", "link" : "prolog\/interp\/Prog.html#CLAUSE=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "undefined", "tail" : "", "member" : "prolog.interp.Prog.undefined", "link" : "prolog\/interp\/Prog.html#undefinedextendsAnyRef", "kind" : "trait"}, {"member" : "prolog.interp.Prog#<init>", "error" : "unsupported entity"}, {"member" : "prolog.interp.Prog#<init>", "error" : "unsupported entity"}, {"member" : "prolog.interp.Prog#<init>", "error" : "unsupported entity"}, {"label" : "db", "tail" : ": DataBase", "member" : "prolog.interp.Prog.db", "link" : "prolog\/interp\/Prog.html#db:prolog.fluents.DataBase", "kind" : "val"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/interp\/Prog.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/interp\/Prog.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/interp\/Prog.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/interp\/Prog.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/interp\/Prog.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/interp\/Prog.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/interp\/Prog.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): Prog.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/interp\/Prog.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "prolog\/interp\/Prog.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/interp\/Prog.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/interp\/Prog.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/interp\/Prog.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/interp\/Prog.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/interp\/Prog.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/interp\/Prog.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/interp\/Prog.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/interp\/Prog.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/interp\/Prog.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/interp\/Prog.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/interp\/Prog.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/interp\/Prog.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/interp\/Prog.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/interp\/Prog.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/interp\/Prog.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/interp\/Prog.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/interp\/Prog.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/interp\/Prog.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/interp\/Prog.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/interp\/Prog.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/interp\/Prog.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/interp\/Prog.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/interp\/Prog.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/interp\/Prog.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/interp\/Prog.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/interp\/Prog.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/interp\/Prog.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/interp\/Prog.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/interp\/Prog.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/interp\/Prog.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/interp\/Prog.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/interp\/Prog.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/interp\/Prog.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/interp\/Prog.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/interp\/Prog.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/interp\/Prog.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/interp\/Prog.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/interp\/Prog.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/interp\/Prog.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/interp\/Prog.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/interp\/Prog.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/interp\/Prog.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/interp\/Prog.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/interp\/Prog.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/interp\/Prog.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/interp\/Prog.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/interp\/Prog.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/interp\/Prog.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/interp\/Prog.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/interp\/Prog.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/interp\/Prog.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/interp\/Prog.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/interp\/Prog.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/interp\/Prog.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/interp\/Prog.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/interp\/Prog.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/interp\/Prog.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/interp\/Prog.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/interp\/Prog.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/interp\/Prog.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/interp\/Prog.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/interp\/Prog.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/interp\/Prog.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/interp\/Prog.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/interp\/Prog.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/interp\/Prog.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/interp\/Prog.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/interp\/Prog.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/interp\/Prog.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/interp\/Prog.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/interp\/Prog.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/interp\/Prog.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/interp\/Prog.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/interp\/Prog.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/interp\/Prog.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/interp\/Prog.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/interp\/Prog.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/interp\/Prog.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/interp\/Prog.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/interp\/Prog.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/interp\/Prog.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/interp\/Prog.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/interp\/Prog.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/interp\/Prog.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/interp\/Prog.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/interp\/Prog.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/interp\/Prog.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/interp\/Prog.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/interp\/Prog.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/interp\/Prog.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/interp\/Prog.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/interp\/Prog.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/interp\/Prog.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/interp\/Prog.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/interp\/Prog.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/interp\/Prog.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/interp\/Prog.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/interp\/Prog.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/interp\/Prog.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/interp\/Prog.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/interp\/Prog.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/interp\/Prog.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/interp\/Prog.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/interp\/Prog.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/interp\/Prog.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/interp\/Prog.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/interp\/Prog.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/interp\/Prog.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/interp\/Prog.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/interp\/Prog.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/interp\/Prog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/interp\/Prog.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/interp\/Prog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/interp\/Prog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/interp\/Prog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/interp\/Prog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/interp\/Prog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Prog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Prog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Prog.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/interp\/Prog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/interp\/Prog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/interp\/Prog.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/interp\/Prog.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/interp\/Prog.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/interp\/Prog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/interp\/Prog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/interp\/Prog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "undefined", "tail" : "", "member" : "prolog.interp.Prog.undefined", "link" : "prolog\/interp\/Prog.html#undefinedextendsAnyRef", "kind" : "trait"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "prolog\/interp\/Prog$.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "init_with", "tail" : "(db: DataBase, x: Term, g: Term, q: Prog): Unit", "member" : "prolog.interp.Prog.init_with", "link" : "prolog\/interp\/Prog$.html#init_with(db:prolog.fluents.DataBase,x:prolog.terms.Term,g:prolog.terms.Term,q:prolog.interp.Prog):Unit", "kind" : "def"}, {"label" : "make_db", "tail" : "(files: Term, p: Prog): DataBase", "member" : "prolog.interp.Prog.make_db", "link" : "prolog\/interp\/Prog$.html#make_db(files:prolog.terms.Term,p:prolog.interp.Prog):prolog.fluents.DataBase", "kind" : "def"}, {"label" : "substitutions", "tail" : "(): Map[String, Term]", "member" : "prolog.interp.Prog.substitutions", "link" : "prolog\/interp\/Prog$.html#substitutions():scala.collection.immutable.Map[String,prolog.terms.Term]", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "prolog.interp.Prog.stop", "link" : "prolog\/interp\/Prog$.html#stop():Unit", "kind" : "def"}, {"label" : "getElement", "tail" : "(): Term", "member" : "prolog.interp.Prog.getElement", "link" : "prolog\/interp\/Prog$.html#getElement():prolog.terms.Term", "kind" : "def"}, {"label" : "pushUnfolder", "tail" : "(g0: GOAL): (GOAL, Term)", "member" : "prolog.interp.Prog.pushUnfolder", "link" : "prolog\/interp\/Prog$.html#pushUnfolder(g0:Prog.this.GOAL):(Prog.this.GOAL,prolog.terms.Term)", "kind" : "def"}, {"label" : "set_query", "tail" : "(query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/interp\/Prog$.html#set_query(query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "set_query", "tail" : "(answer: Term, query: GOAL): Unit", "member" : "prolog.interp.Prog.set_query", "link" : "prolog\/interp\/Prog$.html#set_query(answer:prolog.terms.Term,query:Prog.this.GOAL):Unit", "kind" : "def"}, {"label" : "popped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.popped", "link" : "prolog\/interp\/Prog$.html#popped:Boolean", "kind" : "var"}, {"label" : "isStopped", "tail" : ": Boolean", "member" : "prolog.interp.Prog.isStopped", "link" : "prolog\/interp\/Prog$.html#isStopped:Boolean", "kind" : "var"}, {"label" : "copier", "tail" : ": Copier", "member" : "prolog.interp.Prog.copier", "link" : "prolog\/interp\/Prog$.html#copier:prolog.terms.Copier", "kind" : "val"}, {"label" : "orStack", "tail" : ": ObjectStack[Unfolder]", "member" : "prolog.interp.Prog.orStack", "link" : "prolog\/interp\/Prog$.html#orStack:prolog.terms.ObjectStack[prolog.interp.Unfolder]", "kind" : "val"}, {"label" : "trail", "tail" : ": Trail", "member" : "prolog.interp.Prog.trail", "link" : "prolog\/interp\/Prog$.html#trail:prolog.terms.Trail", "kind" : "val"}, {"label" : "GOAL", "tail" : "", "member" : "prolog.interp.Prog.GOAL", "link" : "prolog\/interp\/Prog$.html#GOAL=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "CLAUSE", "tail" : "", "member" : "prolog.interp.Prog.CLAUSE", "link" : "prolog\/interp\/Prog$.html#CLAUSE=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "db", "tail" : ": DataBase", "member" : "prolog.interp.Prog.db", "link" : "prolog\/interp\/Prog$.html#db:prolog.fluents.DataBase", "kind" : "val"}, {"label" : "toSink", "tail" : "(to: TermSink): Unit", "member" : "prolog.terms.TermSource.toSink", "link" : "prolog\/interp\/Prog$.html#toSink(to:prolog.terms.TermSink):Unit", "kind" : "def"}, {"label" : "toList", "tail" : "(toCopy: Boolean): Term", "member" : "prolog.terms.TermSource.toList", "link" : "prolog\/interp\/Prog$.html#toList(toCopy:Boolean):prolog.terms.Term", "kind" : "def"}, {"label" : "next", "tail" : "(): Term", "member" : "prolog.terms.TermSource.next", "link" : "prolog\/interp\/Prog$.html#next():prolog.terms.Term", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "prolog.terms.TermSource.hasNext", "link" : "prolog\/interp\/Prog$.html#hasNext:Boolean", "kind" : "def"}, {"label" : "isAlive", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.isAlive", "link" : "prolog\/interp\/Prog$.html#isAlive:Boolean", "kind" : "var"}, {"label" : "taken", "tail" : ": Boolean", "member" : "prolog.terms.TermSource.taken", "link" : "prolog\/interp\/Prog$.html#taken:Boolean", "kind" : "var"}, {"label" : "last", "tail" : ": Term", "member" : "prolog.terms.TermSource.last", "link" : "prolog\/interp\/Prog$.html#last:prolog.terms.Term", "kind" : "var"}, {"label" : "seq", "tail" : "(): Prog.this.type", "member" : "scala.collection.Iterator.seq", "link" : "prolog\/interp\/Prog$.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "prolog\/interp\/Prog$.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Term) => U): Iterator[Term]", "member" : "scala.collection.Iterator.tapEach", "link" : "prolog\/interp\/Prog$.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "prolog\/interp\/Prog$.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.duplicate", "link" : "prolog\/interp\/Prog$.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "prolog\/interp\/Prog$.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Term, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "prolog\/interp\/Prog$.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "prolog\/interp\/Prog$.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterator[(Term, B)]", "member" : "scala.collection.Iterator.zip", "link" : "prolog\/interp\/Prog$.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "prolog\/interp\/Prog$.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Term]", "member" : "scala.collection.Iterator.slice", "link" : "prolog\/interp\/Prog$.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.span", "link" : "prolog\/interp\/Prog$.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.dropWhile", "link" : "prolog\/interp\/Prog$.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.drop", "link" : "prolog\/interp\/Prog$.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.takeWhile", "link" : "prolog\/interp\/Prog$.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Term]", "member" : "scala.collection.Iterator.take", "link" : "prolog\/interp\/Prog$.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "prolog\/interp\/Prog$.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "prolog\/interp\/Prog$.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "prolog\/interp\/Prog$.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Term) => IterableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "prolog\/interp\/Prog$.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "prolog\/interp\/Prog$.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Term) => B): Iterator[Term]", "member" : "scala.collection.Iterator.distinctBy", "link" : "prolog\/interp\/Prog$.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.distinct", "link" : "prolog\/interp\/Prog$.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Term, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "prolog\/interp\/Prog$.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.withFilter", "link" : "prolog\/interp\/Prog$.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filterNot", "link" : "prolog\/interp\/Prog$.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Term) => Boolean): Iterator[Term]", "member" : "scala.collection.Iterator.filter", "link" : "prolog\/interp\/Prog$.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "prolog\/interp\/Prog$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "prolog\/interp\/Prog$.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/interp\/Prog$.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "prolog\/interp\/Prog$.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Term) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "prolog\/interp\/Prog$.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Term, B) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "prolog\/interp\/Prog$.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Term) => B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "prolog\/interp\/Prog$.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "prolog\/interp\/Prog$.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "prolog\/interp\/Prog$.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Term) => Boolean): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.Iterator.partition", "link" : "prolog\/interp\/Prog$.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "prolog\/interp\/Prog$.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Term]", "member" : "scala.collection.Iterator.buffered", "link" : "prolog\/interp\/Prog$.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "prolog\/interp\/Prog$.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[Term]", "member" : "scala.collection.Iterator.nextOption", "link" : "prolog\/interp\/Prog$.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.Iterator.iterator", "link" : "prolog\/interp\/Prog$.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "prolog\/interp\/Prog$.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[Term]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "prolog\/interp\/Prog$.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "prolog\/interp\/Prog$.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "prolog\/interp\/Prog$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[Term]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "prolog\/interp\/Prog$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Term]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "prolog\/interp\/Prog$.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Term]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "prolog\/interp\/Prog$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "prolog\/interp\/Prog$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Term, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "prolog\/interp\/Prog$.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Term]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "prolog\/interp\/Prog$.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Term]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "prolog\/interp\/Prog$.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Term]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "prolog\/interp\/Prog$.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Term, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "prolog\/interp\/Prog$.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/interp\/Prog$.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/interp\/Prog$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "prolog\/interp\/Prog$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/interp\/Prog$.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/interp\/Prog$.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "prolog\/interp\/Prog$.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (Term, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "prolog\/interp\/Prog$.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Term) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "prolog\/interp\/Prog$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Term, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "prolog\/interp\/Prog$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "prolog\/interp\/Prog$.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "prolog\/interp\/Prog$.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "prolog\/interp\/Prog$.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Term) => B)(cmp: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "prolog\/interp\/Prog$.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "prolog\/interp\/Prog$.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.max", "link" : "prolog\/interp\/Prog$.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[Term]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "prolog\/interp\/Prog$.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): Term", "member" : "scala.collection.IterableOnceOps.min", "link" : "prolog\/interp\/Prog$.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "prolog\/interp\/Prog$.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "prolog\/interp\/Prog$.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/interp\/Prog$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/interp\/Prog$.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "prolog\/interp\/Prog$.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "prolog\/interp\/Prog$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "prolog\/interp\/Prog$.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "prolog\/interp\/Prog$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Term, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "prolog\/interp\/Prog$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Term) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "prolog\/interp\/Prog$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "prolog\/interp\/Prog$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "prolog\/interp\/Prog$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "prolog\/interp\/Prog$.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "prolog\/interp\/Prog$.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "prolog\/interp\/Prog$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "prolog\/interp\/Prog$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "prolog\/interp\/Prog$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Term, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "prolog\/interp\/Prog$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Term) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "prolog\/interp\/Prog$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Term) => Boolean): Option[Term]", "member" : "scala.collection.IterableOnceOps.find", "link" : "prolog\/interp\/Prog$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Term) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "prolog\/interp\/Prog$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "prolog\/interp\/Prog$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Term) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "prolog\/interp\/Prog$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Term) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "prolog\/interp\/Prog$.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "prolog\/interp\/Prog$.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterator[Term], Iterator[Term])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "prolog\/interp\/Prog$.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "prolog\/interp\/Prog$.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Term, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "prolog\/interp\/Prog$.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/interp\/Prog$.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/interp\/Prog$.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/interp\/Prog$.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/interp\/Prog$.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/interp\/Prog$.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/interp\/Prog$.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/interp\/Prog$.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/interp\/Prog$.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/interp\/Prog$.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/interp\/Prog$.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/interp\/Prog$.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/interp\/Prog$.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/interp\/Prog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/interp\/Prog$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/interp\/Prog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/interp\/Prog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/interp\/Prog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/interp\/Prog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/interp\/Prog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Prog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Prog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Prog$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/interp\/Prog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/interp\/Prog$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/interp\/Prog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/interp\/Prog$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/interp\/Prog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/interp\/Prog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/interp\/Prog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/interp\/Prog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/interp\/Prog.html", "kind" : "class"}, {"name" : "prolog.interp.Unfolder", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "prolog.interp.Unfolder.toString", "link" : "prolog\/interp\/Unfolder.html#toString():String", "kind" : "def"}, {"label" : "nextGoal", "tail" : "(): GOAL", "member" : "prolog.interp.Unfolder.nextGoal", "link" : "prolog\/interp\/Unfolder.html#nextGoal():Unfolder.this.GOAL", "kind" : "def"}, {"label" : "lastClause", "tail" : "(): Boolean", "member" : "prolog.interp.Unfolder.lastClause", "link" : "prolog\/interp\/Unfolder.html#lastClause:Boolean", "kind" : "def"}, {"label" : "GOAL", "tail" : "", "member" : "prolog.interp.Unfolder.GOAL", "link" : "prolog\/interp\/Unfolder.html#GOAL=List[prolog.terms.Term]", "kind" : "type"}, {"label" : "CLAUSE", "tail" : "", "member" : "prolog.interp.Unfolder.CLAUSE", "link" : "prolog\/interp\/Unfolder.html#CLAUSE=List[prolog.terms.Term]", "kind" : "type"}, {"member" : "prolog.interp.Unfolder#<init>", "error" : "unsupported entity"}, {"member" : "prolog.interp.Unfolder#<init>", "error" : "unsupported entity"}, {"label" : "goal", "tail" : ": List[Term]", "member" : "prolog.interp.Unfolder.goal", "link" : "prolog\/interp\/Unfolder.html#goal:List[prolog.terms.Term]", "kind" : "val"}, {"label" : "name", "tail" : "(): String", "member" : "prolog.terms.SystemObject.name", "link" : "prolog\/interp\/Unfolder.html#name:String", "kind" : "def"}, {"label" : "unify", "tail" : "(other: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.unify", "link" : "prolog\/interp\/Unfolder.html#unify(other:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "bind_to", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Nonvar.bind_to", "link" : "prolog\/interp\/Unfolder.html#bind_to(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "def"}, {"label" : "exec", "tail" : "(p: Prog): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/interp\/Unfolder.html#exec(p:prolog.interp.Prog):Int", "kind" : "def"}, {"label" : "exec", "tail" : "(): Int", "member" : "prolog.terms.Term.exec", "link" : "prolog\/interp\/Unfolder.html#exec():Int", "kind" : "final def"}, {"label" : "matches", "tail" : "(that: Term, trail: Trail): Boolean", "member" : "prolog.terms.Term.matches", "link" : "prolog\/interp\/Unfolder.html#matches(that:prolog.terms.Term,trail:prolog.terms.Trail):Boolean", "kind" : "final def"}, {"label" : "var_array_of", "tail" : "(): Array[Term]", "member" : "prolog.terms.Term.var_array_of", "link" : "prolog\/interp\/Unfolder.html#var_array_of:Array[prolog.terms.Term]", "kind" : "def"}, {"label" : "vars_of", "tail" : "(): Term", "member" : "prolog.terms.Term.vars_of", "link" : "prolog\/interp\/Unfolder.html#vars_of:prolog.terms.Term", "kind" : "def"}, {"label" : "vcollect", "tail" : "(dict: LinkedHashSet[Term]): Unit", "member" : "prolog.terms.Term.vcollect", "link" : "prolog\/interp\/Unfolder.html#vcollect(dict:scala.collection.mutable.LinkedHashSet[prolog.terms.Term]):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Term", "member" : "prolog.terms.Term.copy", "link" : "prolog\/interp\/Unfolder.html#copy:prolog.terms.Term", "kind" : "def"}, {"label" : "tcopy", "tail" : "(dict: Copier): Term", "member" : "prolog.terms.Term.tcopy", "link" : "prolog\/interp\/Unfolder.html#tcopy(dict:prolog.terms.Copier):prolog.terms.Term", "kind" : "def"}, {"label" : "ref", "tail" : "(): Term", "member" : "prolog.terms.Term.ref", "link" : "prolog\/interp\/Unfolder.html#ref:prolog.terms.Term", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "prolog\/interp\/Unfolder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "prolog\/interp\/Unfolder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "prolog\/interp\/Unfolder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "prolog\/interp\/Unfolder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "prolog\/interp\/Unfolder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "prolog\/interp\/Unfolder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "prolog\/interp\/Unfolder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Unfolder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Unfolder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "prolog\/interp\/Unfolder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "prolog\/interp\/Unfolder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "prolog\/interp\/Unfolder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "prolog\/interp\/Unfolder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "prolog\/interp\/Unfolder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "prolog\/interp\/Unfolder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "prolog\/interp\/Unfolder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "prolog\/interp\/Unfolder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "prolog\/interp\/Unfolder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "prolog\/interp\/Unfolder.html", "kind" : "class"}]};